syntax = "proto3";

import "global.proto";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";

// RBAC服务
service RbacService {
    // 用户登录
    rpc UserLogin(RbacLoginRequest)returns(RbacLoginResponse);
    // 检查令牌是否有效并返回新的令牌
    rpc CheckRBACToken(RbacCheckTokenRequest) returns(RbacCheckTokenResponse);
    // 获取JWT密钥
    rpc GetJwtToken(Empty)returns(String);
    // 获取用户资源
    rpc GetUserResource(RbacUserResourceRequest)returns(RbacUserResourceResponse);
    // 获取资源树形数据
    rpc QueryRbacResourceList (QueryRbacResRequest) returns (QueryRbacResourceResponse);
    // 移动资源顺序
    rpc MoveResourceOrdinal(MoveResourceOrdinalRequest) returns (TxResult);
    // 部门树形数据
    rpc DepartTree(DepartTreeRequest)returns(SRbacTree);
    // 保存部门
    rpc SaveDepart (SaveDepartRequest) returns (SaveDepartResponse);
    // 获取部门
    rpc GetDepart (RbacDepartId) returns (SPermDept);
    // 删除部门
    rpc DeleteDepart (RbacDepartId) returns (TxResult);
    // 保存岗位
    rpc SaveJob (SaveJobRequest) returns (SaveJobResponse);
    // 获取岗位
    rpc GetJob (RbacJobId) returns (SRbacJob);
    // 获取岗位列表
    rpc QueryJobList (QueryJobRequest) returns (QueryJobResponse);
    // 删除岗位
    rpc DeleteJob (RbacJobId) returns (TxResult);
    // 获取岗位分页数据
    rpc PagingJobList (RbacJobPagingRequest) returns (PagingRbacJobResponse);

    // 保存系统用户
    rpc SaveUser (SaveRbacUserRequest) returns (SaveRbacUserResponse);
    // 获取系统用户
    rpc GetUser (RbacUserId) returns (SRbacUser);
    // 更新用户密码
    rpc updateUserPassword(RbacPasswordRequest)returns (TxResult){
    }
    // 删除系统用户
    rpc DeleteUser (RbacUserId) returns (TxResult);
    // 获取系统用户分页数据
    rpc PagingUser (PagingRbacUserRequest) returns (PagingRbacUserResponse);

    // 保存角色
    rpc SavePermRole (SaveRbacRoleRequest) returns (SaveRbacRoleResponse);
    // 保存角色
    rpc UpdateRoleResource (UpdateRoleResRequest) returns (TxResult);
    // 获取角色
    rpc GetRole (RbacRoleId) returns (SRbacRole);
    // 获取角色列表
    rpc QueryPermRoleList (QueryRbacRoleRequest) returns (QueryRbacRoleResponse);
    // 删除角色
    rpc DeletePermRole (RbacRoleId) returns (TxResult);
    // 获取角色分页数据
    rpc PagingPermRole (RbacRolePagingRequest) returns (PagingRbacRoleResponse);

    // 保存PermRes
    rpc SaveRbacResource (SaveRbacResRequest) returns (SaveRbacResResponse);
    // 获取PermRes
    rpc GetRbacRes (PermResId) returns (SRbacRes);
    // 获取资源SQL语句
    rpc GetResourceSQL(PermResId)returns(ResourcesSQLResponse);
    // 删除PermRes
    rpc DeleteRbacResource (PermResId) returns (TxResult);
    // 获取用户登录日志分页数据
    rpc PagingLoginLog (LoginLogPagingRequest) returns (LoginLogPagingResponse);
}

// 用户登录
message RbacLoginRequest {
    // 用户名
    string username =  1;
    // md5密码
    string password = 2;
    // IP地址
    string ipAddress = 3;
}

// 用户登录响应
message RbacLoginResponse {
    // 错误编码,0为成功
    int32 code = 1;
    // 错误消息
    string message = 2;
    // 用户编号
    int64 userId =  3;
    // 访问令牌
    string accessToken = 4;
    // 角色编号
    repeated string roles = 5;
}

// 检查令牌请求
message RbacCheckTokenRequest{
    // 访问令牌
    string accessToken = 1;
    // 检测过期时间,在此时间内过期,将生成返回新的令牌
    int64 checkExpireTime = 2;
    // 新生成令牌的有效时间
    int64 renewExpiresTime = 3;
}

// 检查令牌响应
message RbacCheckTokenResponse{
    // 错误码
    int32 code = 1;
    // 错误信息
    string message = 2;
    // 会员编号
    int64 userId = 3;
    // 是否过期
    bool isExpires = 4;
    // 令牌过期时间
    int64 tokenExpiresTime = 5;
    // 重新生成的令牌
    string renewAccessToken = 6;
}

// 更改密码
message RbacPasswordRequest{
    // 会员编号
    int64 userId = 1;
    // 旧密码
    string oldPassword = 2;
    // 新密码
    string newPassword = 3;
}

// 用户资源响应,如果无用户则默认为超级管理员
message RbacUserResourceResponse {
    // 角色编号
    repeated string roles = 1;
    // 菜单(区分应用)
    repeated SUserMenu menu = 3;
    // 权限Key数组(不用区分应用)
    repeated string resourceKeys = 4;
}

// 用户菜单
message SUserMenu {
    // 编号
    sint64 id = 1;
    // 资源键
    string key = 2;
    // 资源名称
    string name = 3;
    // 深度/层级
    sint32 depth = 4;
    // 资源路径
    string path = 5;
    // 图标
    string icon = 6;
    // 序号
    sint32 sortNum = 7;
    // 子资源
    repeated SUserMenu children = 8;
}

message RoleId {
    int64 value =  1;
}
message UserId {
    int64 value =  1;
}


// 树形节点
message SRbacTree {
    // 编号
    int64 id = 1;
    // 名称
    string label = 2;
    // 是否叶子节点
    bool isLeaf = 3;
    // 子节点
    repeated SRbacTree children = 4;
}

message SaveDepartRequest {
    // ID
    int64 id = 1;
    // 名称
    string name = 2;
    // 上级部门
    int64 pid = 3;
    // 部门编码
    string code = 4;
    // 状态
    int32 enabled = 5;
    // 创建日期
    int64 createTime = 6;
}

// 保存部门结果
message SaveDepartResponse {
    int32 code = 1;
    string message = 2;
    int64 id = 3;
}

message RbacDepartId {
    int64 value =  1;
}
message SPermDept {
    // ID
    int64 id = 1;
    // 名称
    string name = 2;
    // 上级部门
    int64 pid = 3;
    // 部门编码;
    string code = 4;
    // 状态
    int32 enabled = 5;
    // 创建日期
    int64 createTime = 6;
}

message QueryPermDeptRequest {
    // 自定义参数
}

message QueryPermDeptResponse {
    repeated SPermDept list = 1;
}


message SaveJobRequest {
    // ID
    int64 id = 1;
    // 岗位名称
    string name = 2;
    // 岗位状态
    int32 enabled = 3;
    // 岗位排序
    int32 sort = 4;
    // 部门ID
    int64 deptId = 5;
    // 创建日期
    int64 createTime = 6;
}

message SaveJobResponse {
    int32 code = 1;
    string message = 2;
    int64 id = 3;
}

message RbacJobId {
    int64 value =  1;
}

message SRbacJob {
    // ID
    int64 id = 1;
    // 岗位名称
    string name = 2;
    // 岗位状态
    int32 enabled = 3;
    // 岗位排序
    int32 sort = 4;
    // 部门ID
    int64 deptId = 5;
    // 创建日期
    int64 createTime = 6;
}

// 查询岗位请求
message QueryJobRequest {
    // 部门编号,默认为0. 该部门下的岗位也会查询出来
    int64 departId = 1;
}

// 查询岗位响应
message QueryJobResponse {
    repeated SRbacJob list = 1;
}

// 岗位列表
message PagingJobList {
    // ID
    int64 id = 1;
    // 岗位名称
    string name = 2;
    // 岗位状态
    int32 enabled = 3;
    // 岗位排序
    int32 sort = 4;
    // 部门名称
    string deptName = 5;
    // 创建日期
    int64 createTime = 6;
}

message RbacJobPagingRequest {
    // 分页参数
    SPagingParams params = 1;
}

message PagingRbacJobResponse {
    int64 total = 1;
    repeated PagingJobList rows =  2;
}



message SaveRbacUserRequest {
    // ID
    int64 id = 1;
    // 用户名
    string username = 2;
    // 密码
    string password = 3;
    // 标志
    int32 flag = 4;
    // 头像
    string profilePhoto = 5;
    // 昵称
    string nickname = 6;
    // 性别
    int32 gender = 7;
    // 邮箱
    string email = 8;
    // 手机号码
    string phone = 9;
    // 部门编号
    int64 deptId = 10;
    // 岗位编号
    int64 jobId = 11;
    // 状态：1启用、0禁用
    int32 enabled = 12;
    // 最后登录的日期
    int64 lastLogin = 13;
    // 创建日期
    int64 createTime = 14;
    // 用户角色
    repeated int64 roles = 15;
}

message SaveRbacUserResponse {
    int32 code = 1;
    string message = 2;
    int64 id = 3;
}

message RbacUserId {
    int64 value =  1;
}

message SRbacUser {
    // ID
    int64 id = 1;
    // 用户名
    string username = 2;
    // 密码
    string password = 3;
    // 标志
    int32 flag = 4;
    // 头像
    string profilePhoto = 5;
    // Nickname
    string nickname = 6;
    // Gender
    int32 gender = 7;
    // 邮箱
    string email = 8;
    // 手机号码
    string phone = 9;
    // 部门编号
    int64 deptId = 10;
    // 岗位编号
    int64 jobId = 11;
    // 状态：1启用、0禁用
    int32 enabled = 12;
    // 最后登录的日期
    int64 lastLogin = 13;
    // 创建日期
    int64 createTime = 14;
    // 用户角色
    repeated int64 roles = 15;
}

message QueryPermUserRequest {
    // 自定义参数
}

message QueryPermUserResponse {
    repeated SRbacUser list = 1;
}

message PagingUser {
    // ID
    int64 id = 1;
    // 用户名
    string username = 2;
    // 密码
    string password = 3;
    // 标志
    int32 flag = 4;
    // 头像
    string profilePhoto = 5;
    // 昵称
    string nickname = 6;
    // 性别
    int32 gender = 7;
    // 邮箱
    string email = 8;
    // 手机号码
    string phone = 9;
    // 部门编号
    int64 deptId = 10;
    // 岗位编号
    int64 jobId = 11;
    // 状态：1启用、0禁用
    int32 enabled = 12;
    // 最后登录的日期
    int64 lastLogin = 13;
    // 创建日期
    int64 createTime = 14;
}

message PagingRbacUserRequest {
    // 部门编号,默认为0. 该部门下的用户也会查询出来
    int64 departId = 1;
    // 分页参数
    SPagingParams params = 2;
}

message PagingRbacUserResponse {
    int64 total = 1;
    repeated PagingUser rows =  2;
}

// 保存角色请求
message SaveRbacRoleRequest {
    // ID
    int64 id = 1;
    // 角色代码
    string code = 2;
    // 名称
    string name = 3;
    // 角色级别
    int32 level = 4;
    // 数据权限
    string dataScope = 5;
    // 备注
    string remark = 6;
    // 创建日期
    int64 createTime = 7;
}

// 更新角色资源请求
message UpdateRoleResRequest {
    // 角色编号
    int64 roleId = 1;
    // 资源
    repeated SRolePermPair resources = 2;
}
message SaveRbacRoleResponse {
    int32 code = 1;
    string message = 2;
    int64 id = 3;
}

message RbacRoleId {
    int64 value =  1;
}

// 角色权限
message SRolePermPair{
    // 资源编号
    sint64 resId = 1;
    // 权限值
    sint32 permFlag = 2;
}

message SRbacRole {
    // ID
    int64 id = 1;
    // 角色代码
    string code = 2;
    // 名称
    string name = 3;
    // 角色级别
    int32 level = 4;
    // 数据权限
    string dataScope = 5;
    // 备注
    string remark = 6;
    // 创建日期
    int64 createTime = 7;
    // 关联的资源列表
    repeated SRolePermPair resourceList = 8;
}

message QueryRbacRoleRequest {
    // 自定义参数
}

message QueryRbacRoleResponse {
    repeated SRbacRole list = 1;
}

message PagingPermRole {
    // ID
    int64 id = 1;
    // 角色代码
    string code = 2;
    // 名称
    string name = 3;
    // 角色级别
    int32 level = 4;
    // 数据权限
    string dataScope = 5;
    // 备注
    string remark = 6;
    // 创建日期
    int64 createTime = 7;
}

message RbacRolePagingRequest {
    // 分页参数
    SPagingParams params = 1;
}

message PagingRbacRoleResponse {
    int64 total = 1;
    repeated PagingPermRole rows =  2;
}


message SaveRbacResRequest {
    // 资源ID
    int64 id = 1;
    // 资源名称
    string name = 2;
    // 资源类型 1:页面 2:组件 3:资源
    int32 resType= 3;
    // 上级菜单ID
    int64 pid = 4;
    // 资源键
    string key = 5;
    // 资源路径
    string path = 6;
    // 图标
    string icon = 7;
    // 是否显示到菜单
    bool isMenu = 8;
    // 是否启用
    bool isEnabled = 9;
    // 排序
    int32 sortNum = 10;
    // 创建日期
    int64 createTime = 11;
    // 应用序号
    int32 appIndex = 13;
}

message SaveRbacResResponse {
    int32 code = 1;
    string message = 2;
    int64 id = 3;
}

message PermResId {
    int64 value =  1;
}

message SRbacRes {
    // 资源ID
    int64 id = 1;
    // 资源名称
    string name = 2;
    // 资源类型 1:页面 2:组件 3:资源
    int32 resType= 3;
    // 上级菜单ID
    int64 pid = 4;
    // 深度/层级
    int32 depth = 5;
    // 资源键
    string key = 6;
    // 资源路径
    string path = 7;
    // 图标
    string icon = 8;
    // 是否显示到菜单
    bool isMenu = 9;
    // 是否启用
    bool isEnabled = 10;
    // 排序
    int32 sortNum = 11;
    // 创建日期
    int64 createTime = 12;
    // 应用序号
    int32 appIndex = 13;
    // 是否为叶子节点
    bool isLeaf = 14;
    // 子资源
    repeated SRbacRes children = 15;
}

message RbacUserResourceRequest {
    // 用户编号
    int64 userId =  1;
    // 应用序号
    int32 appIndex = 2;
}

message QueryRbacResRequest {
    // 关键词
    string keyword = 1;
    // 是否只显示菜单
    bool onlyMenu = 2;
    // 上级编号
    int64 parentId = 3;
    // 初始化数据ID
    int64 initialId = 4;
}

message QueryRbacResourceResponse {
    repeated SRbacRes list = 1;
    // 返回初始化上级ID列表
    repeated int64 initialList = 2;
}


// 移动资源顺序
message MoveResourceOrdinalRequest {
    // 资源编号
    int64 resourceId = 1;
    // 移动方向,0:向上移,1:向下移
    int32 direction = 2;
}

// 获取资源SQL
message ResourcesSQLResponse{
    // 资源编号
    int64 resourceId = 1;
    // SQL语句
    string sql = 2;
}

// 用户登录日志分页数据
message PagingLoginLog{
    // 编号
    int64 id = 1;
    // 用户编号
    int64 userId = 2;
    // 用户名
    string username = 3;
    // 昵称
    string nickname = 4;
    // 登录IP地址
    string ip = 5;
    // 是否成功
    int32 isSuccess = 6;
    // 创建时间
    int64 createTime = 7;
}

// 用户登录日志分页请求
message LoginLogPagingRequest{
    // 分页参数
    SPagingParams params = 1;
}

// 用户登录日志分页响应
message LoginLogPagingResponse {
   // 总数
   int64 total = 1;
   // 数据列表
   repeated PagingLoginLog rows = 2;
}

// 部门属性请求
message DepartTreeRequest{
    // 是否懒加载
    bool lazy = 1;
    // 上级编号
    int64 parentId = 2;
}
