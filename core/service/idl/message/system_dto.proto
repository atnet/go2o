syntax = "proto3";

option go_package = "./;proto";
option java_package = "com.github.go2o.rpc";


// 清除缓存请求
message CleanCacheRequest{
    // 清除指定前缀的缓存,如果为空则清除所有缓存
    string prefix = 1;
    // 清除指定键的缓存
    string key = 2;
    // 是否清除全局缓存
    bool clearGlobal = 3;
}

// 清除缓存响应
message CleanCacheResponse{
    int32 count = 1;
}

// 短信提供商
enum ESmsProvider{
    _ESmsProvider = 0;
    // 自定义短信发送,推送到消息队列由外部系统处理
    CUSTOM = 1;
    // 通用HTTP接口
    HTTP = 2;
    // 腾讯云短信
    TECENT_CLOUD = 3;
    // 阿里云短信
    ALIYUN = 4;
    // 创蓝短信
    CHUANGLAN = 5;
}

// 短信接口参数设置
message SSmsProviderSetting {
    // 短信提供商,1:通用HTTP接口,2:腾讯云短信,3:阿里云短信,4:创蓝短信
    ESmsProvider provider = 1;
    // 接口KEY
    string key = 2;
    // 接口密钥
    string secret = 3;
    // 默认模板编号
    string templateId = 4;
    // 是否启用
    bool enabled = 5;
	/** 签名 */
	string signature = 6;
    // Http接口
    SSmsExtraSetting httpExtra = 7;
}

/** 短信接口额外信息配置 */
message SSmsExtraSetting {
    /** 接口地址 */
    string apiUrl = 1;
    /** 请求数据,如: phone={phone}&content={content}*/
    string params = 2;
    /** 请求方式, GET或POST */
    string method = 3;
    /** 编码 */
    string charset = 4;
    /** 发送成功，包含的字符，用于检测是否发送成功 */
    string successChars = 5;
}
// 获取短信设置请求
message GetSmsSettingRequest{
    // 短信提供商,1:通用HTTP接口,2:腾讯云短信,3:阿里云短信,4:创蓝短信
    ESmsProvider provider = 1; 
}


message BoardHookSaveRequest {
    string hookURL = 1;
    string token = 2;
}


message AreaStringRequest {
    int32 province = 1;
    int32 city = 2;
    int32 district = 3;
}
message AreaListResponse {
    repeated SDistrict value =  1;
}
message StringListResponse {
    repeated string value =  1;
}

// int和string字典响应对象
message IntStringMapResponse{
    map<uint64, string> value =  1;
}

message GetNamesRequest {
    repeated sint32 value =  1;
}

/** 超级管理员密码修改请求 */
message SuperPassswordRequest {
    /** 旧密码 */
    string oldPassword = 1;
    /** 新密码 */
    string newPassword = 2;
}

// 单点登录应用
message SSsoApp {
    // 编号
    sint32 id = 1;
    // 应用名称
    string name = 2;
    // API地址
    string apiUrl = 3;
    // 密钥
    string token = 4;
}

// 行政区域
message SDistrict {
    // 编号
    int64 id = 1;
    // 上级编号
    int64 parentId = 2;
    // 区域名称
    string name = 3;
    // 是否是叶子节点
    bool isLeaf = 4;
}



// 移动应用配置
message SMobileAppConfig {
    // 应用名称
    string appName = 1;
    // APP图标地址
    string appIcon = 2;
    // 描述
    string description = 3;
    // 安卓APP版本
    string androidVersion = 4;
    // 安卓APP版发布地址
    string androidReleaseUrl = 5;
    // 苹果APP版本
    string iosVersion = 6;
    // 苹果APP版发布地址
    string iosReleaseUrl = 7;
    // 模板文件
    string showTplPath_ = 8;
}

message SWxApiConfig {
    //APP ID
    string appId = 1;
    //APP 密钥
    string appSecret = 2;
    //通信密钥
    string mpToken = 3;
    //通信AES KEY
    string mpAesKey = 4;
    //原始ID
    string oriId = 5;

    /**===== 用于微信支付 =====**/

    //商户编号
    string mchId = 6;
    //商户接口密钥
    string mchApiKey = 7;
    //微信支付的证书路径(上传)
    string mchCertPath = 8;
    //微信支付的证书公钥路径(上传)
    string mchCertKeyPath = 9;
    //是否启用红包功能
    bool redPackEnabled = 10;
    //红包金额限制
    double redPackAmountLimit = 11;
    //红包每日数量限制
    int32 redPackDayTimeLimit = 12;
}

message PaymentPlatformResponse {
    repeated PaymentPlatform value =  1;
}

message PaymentPlatform {
    string id = 1;
    string name = 2;
    string sign = 3;
    repeated BankItem items = 4;
}

message BankItem {
    //标识
    string id = 1;
    //名称
    string name = 2;
    //签名/别名
    string sign = 3;
}

// 全局商户销售设置
message SGlobMchSaleConf {
    // !商户订单结算模式
    //MchOrderSettleMode enum.MchSettleMode
    // !商户订单结算比例
    //MchOrderSettleRate float32
    // 商户交易单是否需上传发票
    //TradeOrderRequireTicket bool
    // 是否启用分销模式
    bool fxSalesEnabled = 1;
    // 返现比例,0则不返现
    double cashBackPercent = 2;
    // 一级比例
    double cashBackTg1Percent = 3;
    // 二级比例
    double cashBackTg2Percent = 4;
    // 会员比例
    double cashBackMemberPercent = 5;

    // 自动设置订单
    int32 autoSetupOrder = 6;
    // 订单超时分钟数
    int32 orderTimeOutMinute = 7;
    // 订单自动确认时间
    int32 orderConfirmAfterMinute = 8;
    // 订单超时自动收货
    int32 orderTimeOutReceiveHour = 9;
}
