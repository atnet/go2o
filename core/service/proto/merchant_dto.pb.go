// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: message/merchant_dto.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 保存商户请求
type SSaveMerchantParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 名称
	MchName string `protobuf:"bytes,1,opt,name=mchName,proto3" json:"mchName"`
	// 登录密码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	// 标志
	Flag int32 `protobuf:"varint,3,opt,name=flag,proto3" json:"flag"`
	// 商户等级
	Level int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	// 所在省
	Province int32 `protobuf:"varint,5,opt,name=province,proto3" json:"province"`
	// 所在市
	City int32 `protobuf:"varint,6,opt,name=city,proto3" json:"city"`
	// 所在区
	District int32 `protobuf:"varint,7,opt,name=district,proto3" json:"district"`
	// 公司地址
	Address string `protobuf:"bytes,8,opt,name=address,proto3" json:"address"`
	// 标志
	Logo string `protobuf:"bytes,9,opt,name=logo,proto3" json:"logo"`
	// 公司电话
	Tel string `protobuf:"bytes,10,opt,name=tel,proto3" json:"tel"`
}

func (x *SSaveMerchantParams) Reset() {
	*x = SSaveMerchantParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSaveMerchantParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSaveMerchantParams) ProtoMessage() {}

func (x *SSaveMerchantParams) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSaveMerchantParams.ProtoReflect.Descriptor instead.
func (*SSaveMerchantParams) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{0}
}

func (x *SSaveMerchantParams) GetMchName() string {
	if x != nil {
		return x.MchName
	}
	return ""
}

func (x *SSaveMerchantParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SSaveMerchantParams) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SSaveMerchantParams) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SSaveMerchantParams) GetProvince() int32 {
	if x != nil {
		return x.Province
	}
	return 0
}

func (x *SSaveMerchantParams) GetCity() int32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *SSaveMerchantParams) GetDistrict() int32 {
	if x != nil {
		return x.District
	}
	return 0
}

func (x *SSaveMerchantParams) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SSaveMerchantParams) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *SSaveMerchantParams) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

// 保存商户认证信息请求
type SaveAuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 公司名称
	OrgName string `protobuf:"bytes,2,opt,name=orgName,proto3" json:"orgName"`
	// 营业执照编号
	OrgNo string `protobuf:"bytes,3,opt,name=orgNo,proto3" json:"orgNo"`
	// 营业执照照片
	OrgPic string `protobuf:"bytes,4,opt,name=orgPic,proto3" json:"orgPic"`
	// 办公地
	WorkCity int32 `protobuf:"varint,5,opt,name=workCity,proto3" json:"workCity"`
	// 资质图片
	QualificationPic string `protobuf:"bytes,6,opt,name=qualificationPic,proto3" json:"qualificationPic"`
	// 法人身份证号
	PersonId string `protobuf:"bytes,7,opt,name=personId,proto3" json:"personId"`
	// 法人姓名
	PersonName string `protobuf:"bytes,8,opt,name=personName,proto3" json:"personName"`
	// 法人身份证照片
	PersonPic string `protobuf:"bytes,9,opt,name=personPic,proto3" json:"personPic"`
	// 授权书
	AuthorityPic string `protobuf:"bytes,10,opt,name=authorityPic,proto3" json:"authorityPic"`
	// 开户银行
	BankName string `protobuf:"bytes,11,opt,name=bankName,proto3" json:"bankName"`
	// 开户户名
	BankAccount string `protobuf:"bytes,12,opt,name=bankAccount,proto3" json:"bankAccount"`
	// 开户账号
	BankNo string `protobuf:"bytes,13,opt,name=bankNo,proto3" json:"bankNo"`
	// 扩展数据
	ExtraData string `protobuf:"bytes,14,opt,name=extraData,proto3" json:"extraData"`
	// 审核时间
	ReviewTime int32 `protobuf:"varint,15,opt,name=reviewTime,proto3" json:"reviewTime"`
	// 审核状态
	ReviewStatus int32 `protobuf:"varint,16,opt,name=reviewStatus,proto3" json:"reviewStatus"`
	// 审核备注
	ReviewRemark string `protobuf:"bytes,17,opt,name=reviewRemark,proto3" json:"reviewRemark"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,18,opt,name=updateTime,proto3" json:"updateTime"`
	// 联系人手机
	PersonPhone string `protobuf:"bytes,19,opt,name=personPhone,proto3" json:"personPhone"`
}

func (x *SaveAuthenticateRequest) Reset() {
	*x = SaveAuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAuthenticateRequest) ProtoMessage() {}

func (x *SaveAuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAuthenticateRequest.ProtoReflect.Descriptor instead.
func (*SaveAuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{1}
}

func (x *SaveAuthenticateRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *SaveAuthenticateRequest) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetOrgNo() string {
	if x != nil {
		return x.OrgNo
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetOrgPic() string {
	if x != nil {
		return x.OrgPic
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetWorkCity() int32 {
	if x != nil {
		return x.WorkCity
	}
	return 0
}

func (x *SaveAuthenticateRequest) GetQualificationPic() string {
	if x != nil {
		return x.QualificationPic
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetPersonPic() string {
	if x != nil {
		return x.PersonPic
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetAuthorityPic() string {
	if x != nil {
		return x.AuthorityPic
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetBankNo() string {
	if x != nil {
		return x.BankNo
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetReviewTime() int32 {
	if x != nil {
		return x.ReviewTime
	}
	return 0
}

func (x *SaveAuthenticateRequest) GetReviewStatus() int32 {
	if x != nil {
		return x.ReviewStatus
	}
	return 0
}

func (x *SaveAuthenticateRequest) GetReviewRemark() string {
	if x != nil {
		return x.ReviewRemark
	}
	return ""
}

func (x *SaveAuthenticateRequest) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SaveAuthenticateRequest) GetPersonPhone() string {
	if x != nil {
		return x.PersonPhone
	}
	return ""
}

// 商户注册请求
type CreateMerchantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 登录用户
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	// 会员编号
	MemberId int64 `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId"`
	// 是否自营
	IsSelf int32 `protobuf:"varint,3,opt,name=isSelf,proto3" json:"isSelf"`
	// 商户信息
	Mch *SSaveMerchantParams `protobuf:"bytes,4,opt,name=mch,proto3" json:"mch"`
}

func (x *CreateMerchantRequest) Reset() {
	*x = CreateMerchantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantRequest) ProtoMessage() {}

func (x *CreateMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantRequest.ProtoReflect.Descriptor instead.
func (*CreateMerchantRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMerchantRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateMerchantRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CreateMerchantRequest) GetIsSelf() int32 {
	if x != nil {
		return x.IsSelf
	}
	return 0
}

func (x *CreateMerchantRequest) GetMch() *SSaveMerchantParams {
	if x != nil {
		return x.Mch
	}
	return nil
}

// 商户注册响应
type MerchantCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误代码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 商户编号
	MerchantId int64 `protobuf:"varint,3,opt,name=merchantId,proto3" json:"merchantId"`
}

func (x *MerchantCreateResponse) Reset() {
	*x = MerchantCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantCreateResponse) ProtoMessage() {}

func (x *MerchantCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantCreateResponse.ProtoReflect.Descriptor instead.
func (*MerchantCreateResponse) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{3}
}

func (x *MerchantCreateResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MerchantCreateResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *MerchantCreateResponse) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

// 保存商户请求
type SaveMerchantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 商户信息
	Mch *SSaveMerchantParams `protobuf:"bytes,4,opt,name=mch,proto3" json:"mch"`
}

func (x *SaveMerchantRequest) Reset() {
	*x = SaveMerchantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMerchantRequest) ProtoMessage() {}

func (x *SaveMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMerchantRequest.ProtoReflect.Descriptor instead.
func (*SaveMerchantRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{4}
}

func (x *SaveMerchantRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *SaveMerchantRequest) GetMch() *SSaveMerchantParams {
	if x != nil {
		return x.Mch
	}
	return nil
}

// 商户
type QMerchant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 名称
	MchName string `protobuf:"bytes,2,opt,name=mchName,proto3" json:"mchName"`
	// 会员编号
	MemberId int64 `protobuf:"varint,3,opt,name=memberId,proto3" json:"memberId"`
	// 登录用户
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username"`
	// 邮箱地址
	MailAddr string `protobuf:"bytes,5,opt,name=mailAddr,proto3" json:"mailAddr"`
	// 是否自营
	IsSelf int32 `protobuf:"varint,6,opt,name=isSelf,proto3" json:"isSelf"`
	// 标志
	Flag int32 `protobuf:"varint,7,opt,name=flag,proto3" json:"flag"`
	// 商户等级
	Level int32 `protobuf:"varint,8,opt,name=level,proto3" json:"level"`
	// 所在省
	Province int32 `protobuf:"varint,9,opt,name=province,proto3" json:"province"`
	// 所在市
	City int32 `protobuf:"varint,10,opt,name=city,proto3" json:"city"`
	// 所在区
	District int32 `protobuf:"varint,11,opt,name=district,proto3" json:"district"`
	// 公司地址
	Address string `protobuf:"bytes,12,opt,name=address,proto3" json:"address"`
	// 标志
	Logo string `protobuf:"bytes,13,opt,name=logo,proto3" json:"logo"`
	// 公司电话
	Tel string `protobuf:"bytes,14,opt,name=tel,proto3" json:"tel"`
	// 状态: 0:待审核 1:已开通  2:停用  3: 关闭
	Status int32 `protobuf:"varint,15,opt,name=status,proto3" json:"status"`
	// 过期时间
	ExpiresTime int64 `protobuf:"varint,16,opt,name=expiresTime,proto3" json:"expiresTime"`
	// 最后登录时间
	LastLoginTime int64 `protobuf:"varint,17,opt,name=lastLoginTime,proto3" json:"lastLoginTime"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,18,opt,name=createTime,proto3" json:"createTime"`
	// 商户认证信息
	Authenticate *QAuthenticate `protobuf:"bytes,19,opt,name=authenticate,proto3" json:"authenticate"`
}

func (x *QMerchant) Reset() {
	*x = QMerchant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QMerchant) ProtoMessage() {}

func (x *QMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QMerchant.ProtoReflect.Descriptor instead.
func (*QMerchant) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{5}
}

func (x *QMerchant) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *QMerchant) GetMchName() string {
	if x != nil {
		return x.MchName
	}
	return ""
}

func (x *QMerchant) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *QMerchant) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QMerchant) GetMailAddr() string {
	if x != nil {
		return x.MailAddr
	}
	return ""
}

func (x *QMerchant) GetIsSelf() int32 {
	if x != nil {
		return x.IsSelf
	}
	return 0
}

func (x *QMerchant) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *QMerchant) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *QMerchant) GetProvince() int32 {
	if x != nil {
		return x.Province
	}
	return 0
}

func (x *QMerchant) GetCity() int32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *QMerchant) GetDistrict() int32 {
	if x != nil {
		return x.District
	}
	return 0
}

func (x *QMerchant) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QMerchant) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *QMerchant) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *QMerchant) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QMerchant) GetExpiresTime() int64 {
	if x != nil {
		return x.ExpiresTime
	}
	return 0
}

func (x *QMerchant) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *QMerchant) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *QMerchant) GetAuthenticate() *QAuthenticate {
	if x != nil {
		return x.Authenticate
	}
	return nil
}

// 商户认证信息
type QAuthenticate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 公司名称
	OrgName string `protobuf:"bytes,1,opt,name=orgName,proto3" json:"orgName"`
	// 营业执照编号
	OrgNo string `protobuf:"bytes,2,opt,name=orgNo,proto3" json:"orgNo"`
	// 营业执照照片
	OrgPic string `protobuf:"bytes,3,opt,name=orgPic,proto3" json:"orgPic"`
	// 办公地
	WorkCity int32 `protobuf:"varint,6,opt,name=workCity,proto3" json:"workCity"`
	// 资质图片
	QualificationPic string `protobuf:"bytes,7,opt,name=qualificationPic,proto3" json:"qualificationPic"`
	// 法人身份证号
	PersonId string `protobuf:"bytes,8,opt,name=personId,proto3" json:"personId"`
	// 法人姓名
	PersonName string `protobuf:"bytes,9,opt,name=personName,proto3" json:"personName"`
	// 法人身份证照片
	PersonPic string `protobuf:"bytes,10,opt,name=personPic,proto3" json:"personPic"`
	// 联系人手机
	PersonPhone string `protobuf:"bytes,11,opt,name=personPhone,proto3" json:"personPhone"`
	// 授权书
	AuthorityPic string `protobuf:"bytes,12,opt,name=authorityPic,proto3" json:"authorityPic"`
	// 开户银行
	BankName string `protobuf:"bytes,13,opt,name=bankName,proto3" json:"bankName"`
	// 开户户名
	BankAccount string `protobuf:"bytes,14,opt,name=bankAccount,proto3" json:"bankAccount"`
	// 开户账号
	BankNo string `protobuf:"bytes,15,opt,name=bankNo,proto3" json:"bankNo"`
	// 审核时间
	ReviewTime int32 `protobuf:"varint,16,opt,name=reviewTime,proto3" json:"reviewTime"`
	// 审核状态
	ReviewStatus int32 `protobuf:"varint,17,opt,name=reviewStatus,proto3" json:"reviewStatus"`
	// 审核备注
	ReviewRemark string `protobuf:"bytes,18,opt,name=reviewRemark,proto3" json:"reviewRemark"`
	// 扩展数据
	ExtraData map[string]string `protobuf:"bytes,19,rep,name=extraData,proto3" json:"extraData" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,20,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *QAuthenticate) Reset() {
	*x = QAuthenticate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QAuthenticate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QAuthenticate) ProtoMessage() {}

func (x *QAuthenticate) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QAuthenticate.ProtoReflect.Descriptor instead.
func (*QAuthenticate) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{6}
}

func (x *QAuthenticate) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *QAuthenticate) GetOrgNo() string {
	if x != nil {
		return x.OrgNo
	}
	return ""
}

func (x *QAuthenticate) GetOrgPic() string {
	if x != nil {
		return x.OrgPic
	}
	return ""
}

func (x *QAuthenticate) GetWorkCity() int32 {
	if x != nil {
		return x.WorkCity
	}
	return 0
}

func (x *QAuthenticate) GetQualificationPic() string {
	if x != nil {
		return x.QualificationPic
	}
	return ""
}

func (x *QAuthenticate) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *QAuthenticate) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *QAuthenticate) GetPersonPic() string {
	if x != nil {
		return x.PersonPic
	}
	return ""
}

func (x *QAuthenticate) GetPersonPhone() string {
	if x != nil {
		return x.PersonPhone
	}
	return ""
}

func (x *QAuthenticate) GetAuthorityPic() string {
	if x != nil {
		return x.AuthorityPic
	}
	return ""
}

func (x *QAuthenticate) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *QAuthenticate) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *QAuthenticate) GetBankNo() string {
	if x != nil {
		return x.BankNo
	}
	return ""
}

func (x *QAuthenticate) GetReviewTime() int32 {
	if x != nil {
		return x.ReviewTime
	}
	return 0
}

func (x *QAuthenticate) GetReviewStatus() int32 {
	if x != nil {
		return x.ReviewStatus
	}
	return 0
}

func (x *QAuthenticate) GetReviewRemark() string {
	if x != nil {
		return x.ReviewRemark
	}
	return ""
}

func (x *QAuthenticate) GetExtraData() map[string]string {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *QAuthenticate) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// * 更换会员绑定请求
type ChangeMemberBindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 商户编号
	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	// * 会员用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
}

func (x *ChangeMemberBindRequest) Reset() {
	*x = ChangeMemberBindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMemberBindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMemberBindRequest) ProtoMessage() {}

func (x *ChangeMemberBindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMemberBindRequest.ProtoReflect.Descriptor instead.
func (*ChangeMemberBindRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeMemberBindRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *ChangeMemberBindRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type MchUserPwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
}

func (x *MchUserPwdRequest) Reset() {
	*x = MchUserPwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MchUserPwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MchUserPwdRequest) ProtoMessage() {}

func (x *MchUserPwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MchUserPwdRequest.ProtoReflect.Descriptor instead.
func (*MchUserPwdRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{8}
}

func (x *MchUserPwdRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MchUserPwdRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 用户登录响应
type MchLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 会员编号
	MerchantId int64 `protobuf:"varint,3,opt,name=merchantId,proto3" json:"merchantId"`
	// 店铺编号
	ShopId int64 `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId"`
}

func (x *MchLoginResponse) Reset() {
	*x = MchLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MchLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MchLoginResponse) ProtoMessage() {}

func (x *MchLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MchLoginResponse.ProtoReflect.Descriptor instead.
func (*MchLoginResponse) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{9}
}

func (x *MchLoginResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *MchLoginResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *MchLoginResponse) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MchLoginResponse) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type SyncWSItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]int32 `protobuf:"bytes,1,rep,name=value,proto3" json:"value" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"zigzag32,2,opt,name=value,proto3"`
}

func (x *SyncWSItemsResponse) Reset() {
	*x = SyncWSItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWSItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWSItemsResponse) ProtoMessage() {}

func (x *SyncWSItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWSItemsResponse.ProtoReflect.Descriptor instead.
func (*SyncWSItemsResponse) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{10}
}

func (x *SyncWSItemsResponse) GetValue() map[string]int32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type STradeConfListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*STradeConf_ `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *STradeConfListResponse) Reset() {
	*x = STradeConfListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STradeConfListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STradeConfListResponse) ProtoMessage() {}

func (x *STradeConfListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STradeConfListResponse.ProtoReflect.Descriptor instead.
func (*STradeConfListResponse) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{11}
}

func (x *STradeConfListResponse) GetValue() []*STradeConf_ {
	if x != nil {
		return x.Value
	}
	return nil
}

type TradeConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId     int32 `protobuf:"zigzag32,1,opt,name=mchId,proto3" json:"mchId"`
	TradeType int32 `protobuf:"zigzag32,2,opt,name=tradeType,proto3" json:"tradeType"`
}

func (x *TradeConfRequest) Reset() {
	*x = TradeConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeConfRequest) ProtoMessage() {}

func (x *TradeConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeConfRequest.ProtoReflect.Descriptor instead.
func (*TradeConfRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{12}
}

func (x *TradeConfRequest) GetMchId() int32 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *TradeConfRequest) GetTradeType() int32 {
	if x != nil {
		return x.TradeType
	}
	return 0
}

type TradeConfSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId int32          `protobuf:"zigzag32,1,opt,name=mchId,proto3" json:"mchId"`
	Arr   []*STradeConf_ `protobuf:"bytes,2,rep,name=arr,proto3" json:"arr"`
}

func (x *TradeConfSaveRequest) Reset() {
	*x = TradeConfSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeConfSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeConfSaveRequest) ProtoMessage() {}

func (x *TradeConfSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeConfSaveRequest.ProtoReflect.Descriptor instead.
func (*TradeConfSaveRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{13}
}

func (x *TradeConfSaveRequest) GetMchId() int32 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *TradeConfSaveRequest) GetArr() []*STradeConf_ {
	if x != nil {
		return x.Arr
	}
	return nil
}

// 商户交易设置
type STradeConf_ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *STradeConf_) Reset() {
	*x = STradeConf_{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STradeConf_) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STradeConf_) ProtoMessage() {}

func (x *STradeConf_) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STradeConf_.ProtoReflect.Descriptor instead.
func (*STradeConf_) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{14}
}

// 商户申请信息
type SMchSignUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 申请单号
	SignNo string `protobuf:"bytes,2,opt,name=signNo,proto3" json:"signNo"`
	// 会员编号
	MemberId int64 `protobuf:"varint,3,opt,name=memberId,proto3" json:"memberId"`
	// 用户名
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username"`
	// 密码
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password"`
	// 盐
	Salt string `protobuf:"bytes,6,opt,name=salt,proto3" json:"salt"`
	// 商户名称号
	MchName string `protobuf:"bytes,7,opt,name=mchName,proto3" json:"mchName"`
	// 省
	Province int32 `protobuf:"varint,8,opt,name=province,proto3" json:"province"`
	// 市
	City int32 `protobuf:"varint,9,opt,name=city,proto3" json:"city"`
	// 区
	District int32 `protobuf:"varint,10,opt,name=district,proto3" json:"district"`
	// 详细地址
	Address string `protobuf:"bytes,11,opt,name=address,proto3" json:"address"`
	// 店铺店铺
	ShopName string `protobuf:"bytes,12,opt,name=shopName,proto3" json:"shopName"`
	// 公司名称
	CompanyName string `protobuf:"bytes,13,opt,name=companyName,proto3" json:"companyName"`
	// 营业执照编号
	CompanyNo string `protobuf:"bytes,14,opt,name=companyNo,proto3" json:"companyNo"`
	// 法人
	PersonName string `protobuf:"bytes,15,opt,name=personName,proto3" json:"personName"`
	// 法人身份证
	PersonId string `protobuf:"bytes,16,opt,name=personId,proto3" json:"personId"`
	// 法人身份证
	PersonImage string `protobuf:"bytes,17,opt,name=personImage,proto3" json:"personImage"`
	// 联系电话
	Phone string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone"`
	// 营业执照图片
	CompanyImage string `protobuf:"bytes,19,opt,name=companyImage,proto3" json:"companyImage"`
	// 委托书
	AuthDoc string `protobuf:"bytes,20,opt,name=authDoc,proto3" json:"authDoc"`
	// 备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark"`
	// 是否通过
	ReviewStatus int32 `protobuf:"varint,22,opt,name=reviewStatus,proto3" json:"reviewStatus"`
	// 提交时间
	SubmitTime int64 `protobuf:"varint,23,opt,name=submitTime,proto3" json:"submitTime"`
}

func (x *SMchSignUp) Reset() {
	*x = SMchSignUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMchSignUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMchSignUp) ProtoMessage() {}

func (x *SMchSignUp) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMchSignUp.ProtoReflect.Descriptor instead.
func (*SMchSignUp) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{15}
}

func (x *SMchSignUp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SMchSignUp) GetSignNo() string {
	if x != nil {
		return x.SignNo
	}
	return ""
}

func (x *SMchSignUp) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SMchSignUp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SMchSignUp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SMchSignUp) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *SMchSignUp) GetMchName() string {
	if x != nil {
		return x.MchName
	}
	return ""
}

func (x *SMchSignUp) GetProvince() int32 {
	if x != nil {
		return x.Province
	}
	return 0
}

func (x *SMchSignUp) GetCity() int32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *SMchSignUp) GetDistrict() int32 {
	if x != nil {
		return x.District
	}
	return 0
}

func (x *SMchSignUp) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SMchSignUp) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *SMchSignUp) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *SMchSignUp) GetCompanyNo() string {
	if x != nil {
		return x.CompanyNo
	}
	return ""
}

func (x *SMchSignUp) GetPersonName() string {
	if x != nil {
		return x.PersonName
	}
	return ""
}

func (x *SMchSignUp) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *SMchSignUp) GetPersonImage() string {
	if x != nil {
		return x.PersonImage
	}
	return ""
}

func (x *SMchSignUp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SMchSignUp) GetCompanyImage() string {
	if x != nil {
		return x.CompanyImage
	}
	return ""
}

func (x *SMchSignUp) GetAuthDoc() string {
	if x != nil {
		return x.AuthDoc
	}
	return ""
}

func (x *SMchSignUp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SMchSignUp) GetReviewStatus() int32 {
	if x != nil {
		return x.ReviewStatus
	}
	return 0
}

func (x *SMchSignUp) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

// 商户审核请求
type MerchantReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 是否审核通过
	Pass bool `protobuf:"varint,2,opt,name=pass,proto3" json:"pass"`
	// 备注
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
}

func (x *MerchantReviewRequest) Reset() {
	*x = MerchantReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantReviewRequest) ProtoMessage() {}

func (x *MerchantReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantReviewRequest.ProtoReflect.Descriptor instead.
func (*MerchantReviewRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{16}
}

func (x *MerchantReviewRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *MerchantReviewRequest) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

func (x *MerchantReviewRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 商户账户
type SMerchantAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 余额
	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance"`
	// 冻结金额
	FreezeAmount int64 `protobuf:"varint,2,opt,name=freezeAmount,proto3" json:"freezeAmount"`
	// 待入账金额
	AwaitAmount int64 `protobuf:"varint,3,opt,name=awaitAmount,proto3" json:"awaitAmount"`
	// 平台赠送金额
	PresentAmount int64 `protobuf:"varint,4,opt,name=presentAmount,proto3" json:"presentAmount"`
	// 累计销售总额
	SalesAmount int64 `protobuf:"varint,5,opt,name=salesAmount,proto3" json:"salesAmount"`
	// 累计退款金额
	RefundAmount int64 `protobuf:"varint,6,opt,name=refundAmount,proto3" json:"refundAmount"`
	// 已提取金额
	WithdrawAmount int64 `protobuf:"varint,7,opt,name=withdrawAmount,proto3" json:"withdrawAmount"`
	// 线下销售金额
	OfflineSales int64 `protobuf:"varint,8,opt,name=offlineSales,proto3" json:"offlineSales"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SMerchantAccount) Reset() {
	*x = SMerchantAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMerchantAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMerchantAccount) ProtoMessage() {}

func (x *SMerchantAccount) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMerchantAccount.ProtoReflect.Descriptor instead.
func (*SMerchantAccount) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{17}
}

func (x *SMerchantAccount) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *SMerchantAccount) GetFreezeAmount() int64 {
	if x != nil {
		return x.FreezeAmount
	}
	return 0
}

func (x *SMerchantAccount) GetAwaitAmount() int64 {
	if x != nil {
		return x.AwaitAmount
	}
	return 0
}

func (x *SMerchantAccount) GetPresentAmount() int64 {
	if x != nil {
		return x.PresentAmount
	}
	return 0
}

func (x *SMerchantAccount) GetSalesAmount() int64 {
	if x != nil {
		return x.SalesAmount
	}
	return 0
}

func (x *SMerchantAccount) GetRefundAmount() int64 {
	if x != nil {
		return x.RefundAmount
	}
	return 0
}

func (x *SMerchantAccount) GetWithdrawAmount() int64 {
	if x != nil {
		return x.WithdrawAmount
	}
	return 0
}

func (x *SMerchantAccount) GetOfflineSales() int64 {
	if x != nil {
		return x.OfflineSales
	}
	return 0
}

func (x *SMerchantAccount) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type MerchantDisableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	// 是否启用
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled"`
}

func (x *MerchantDisableRequest) Reset() {
	*x = MerchantDisableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantDisableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantDisableRequest) ProtoMessage() {}

func (x *MerchantDisableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantDisableRequest.ProtoReflect.Descriptor instead.
func (*MerchantDisableRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{18}
}

func (x *MerchantDisableRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantDisableRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// 销售设置
type SMerchantSaleConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 合作商编号
	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	// 是否启用分销模式
	FxSalesEnabled bool `protobuf:"varint,2,opt,name=fxSalesEnabled,proto3" json:"fxSalesEnabled"`
	// 返现比例,0则不返现
	CashBackPercent float64 `protobuf:"fixed64,3,opt,name=cashBackPercent,proto3" json:"cashBackPercent"`
	// 一级比例
	CashBackTg1Percent float64 `protobuf:"fixed64,4,opt,name=cashBackTg1Percent,proto3" json:"cashBackTg1Percent"`
	// 二级比例
	CashBackTg2Percent float64 `protobuf:"fixed64,5,opt,name=cashBackTg2Percent,proto3" json:"cashBackTg2Percent"`
	// 会员比例
	CashBackMemberPercent float64 `protobuf:"fixed64,6,opt,name=cashBackMemberPercent,proto3" json:"cashBackMemberPercent"`
	// 自动设置订单
	AutoSetupOrder bool `protobuf:"varint,7,opt,name=autoSetupOrder,proto3" json:"autoSetupOrder"`
	// 订单超时分钟数
	OrderTimeOutMinute int32 `protobuf:"varint,8,opt,name=orderTimeOutMinute,proto3" json:"orderTimeOutMinute"`
	// 订单自动确认时间
	OrderConfirmAfterMinute int32 `protobuf:"varint,9,opt,name=orderConfirmAfterMinute,proto3" json:"orderConfirmAfterMinute"`
	// 订单超时自动收货
	OrderTimeOutReceiveHour int32 `protobuf:"varint,10,opt,name=orderTimeOutReceiveHour,proto3" json:"orderTimeOutReceiveHour"`
}

func (x *SMerchantSaleConf) Reset() {
	*x = SMerchantSaleConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMerchantSaleConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMerchantSaleConf) ProtoMessage() {}

func (x *SMerchantSaleConf) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMerchantSaleConf.ProtoReflect.Descriptor instead.
func (*SMerchantSaleConf) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{19}
}

func (x *SMerchantSaleConf) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *SMerchantSaleConf) GetFxSalesEnabled() bool {
	if x != nil {
		return x.FxSalesEnabled
	}
	return false
}

func (x *SMerchantSaleConf) GetCashBackPercent() float64 {
	if x != nil {
		return x.CashBackPercent
	}
	return 0
}

func (x *SMerchantSaleConf) GetCashBackTg1Percent() float64 {
	if x != nil {
		return x.CashBackTg1Percent
	}
	return 0
}

func (x *SMerchantSaleConf) GetCashBackTg2Percent() float64 {
	if x != nil {
		return x.CashBackTg2Percent
	}
	return 0
}

func (x *SMerchantSaleConf) GetCashBackMemberPercent() float64 {
	if x != nil {
		return x.CashBackMemberPercent
	}
	return 0
}

func (x *SMerchantSaleConf) GetAutoSetupOrder() bool {
	if x != nil {
		return x.AutoSetupOrder
	}
	return false
}

func (x *SMerchantSaleConf) GetOrderTimeOutMinute() int32 {
	if x != nil {
		return x.OrderTimeOutMinute
	}
	return 0
}

func (x *SMerchantSaleConf) GetOrderConfirmAfterMinute() int32 {
	if x != nil {
		return x.OrderConfirmAfterMinute
	}
	return 0
}

func (x *SMerchantSaleConf) GetOrderTimeOutReceiveHour() int32 {
	if x != nil {
		return x.OrderTimeOutReceiveHour
	}
	return 0
}

type SaveMerchantSaleConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64              `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	Value      *SMerchantSaleConf `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *SaveMerchantSaleConfRequest) Reset() {
	*x = SaveMerchantSaleConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMerchantSaleConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMerchantSaleConfRequest) ProtoMessage() {}

func (x *SaveMerchantSaleConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMerchantSaleConfRequest.ProtoReflect.Descriptor instead.
func (*SaveMerchantSaleConfRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{20}
}

func (x *SaveMerchantSaleConfRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *SaveMerchantSaleConfRequest) GetValue() *SMerchantSaleConf {
	if x != nil {
		return x.Value
	}
	return nil
}

type ModifyMerchantPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64  `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	Origin     string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin"`
	// Md5编码后的密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
}

func (x *ModifyMerchantPasswordRequest) Reset() {
	*x = ModifyMerchantPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyMerchantPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyMerchantPasswordRequest) ProtoMessage() {}

func (x *ModifyMerchantPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyMerchantPasswordRequest.ProtoReflect.Descriptor instead.
func (*ModifyMerchantPasswordRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{21}
}

func (x *ModifyMerchantPasswordRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *ModifyMerchantPasswordRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ModifyMerchantPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 商户接口信息
type SMerchantApiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户接口编号
	ApiId string `protobuf:"bytes,1,opt,name=apiId,proto3" json:"apiId"`
	// 密钥
	ApiSecret string `protobuf:"bytes,2,opt,name=apiSecret,proto3" json:"apiSecret"`
	// IP白名单
	WhiteList []string `protobuf:"bytes,3,rep,name=whiteList,proto3" json:"whiteList"`
	// 是否启用
	Enabled bool `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled"`
}

func (x *SMerchantApiInfo) Reset() {
	*x = SMerchantApiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMerchantApiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMerchantApiInfo) ProtoMessage() {}

func (x *SMerchantApiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMerchantApiInfo.ProtoReflect.Descriptor instead.
func (*SMerchantApiInfo) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{22}
}

func (x *SMerchantApiInfo) GetApiId() string {
	if x != nil {
		return x.ApiId
	}
	return ""
}

func (x *SMerchantApiInfo) GetApiSecret() string {
	if x != nil {
		return x.ApiSecret
	}
	return ""
}

func (x *SMerchantApiInfo) GetWhiteList() []string {
	if x != nil {
		return x.WhiteList
	}
	return nil
}

func (x *SMerchantApiInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type MerchantApiPermRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	// 是否启用
	Enabled bool `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled"`
}

func (x *MerchantApiPermRequest) Reset() {
	*x = MerchantApiPermRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantApiPermRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantApiPermRequest) ProtoMessage() {}

func (x *MerchantApiPermRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantApiPermRequest.ProtoReflect.Descriptor instead.
func (*MerchantApiPermRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{23}
}

func (x *MerchantApiPermRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantApiPermRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type WithdrawToMemberAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	Amount     int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
}

func (x *WithdrawToMemberAccountRequest) Reset() {
	*x = WithdrawToMemberAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawToMemberAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawToMemberAccountRequest) ProtoMessage() {}

func (x *WithdrawToMemberAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawToMemberAccountRequest.ProtoReflect.Descriptor instead.
func (*WithdrawToMemberAccountRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{24}
}

func (x *WithdrawToMemberAccountRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *WithdrawToMemberAccountRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type MerchantChargeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId   int64  `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	Kind         int32  `protobuf:"varint,2,opt,name=kind,proto3" json:"kind"`
	Amount       int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	OuterNo      string `protobuf:"bytes,5,opt,name=outerNo,proto3" json:"outerNo"`
	RelateUserId int64  `protobuf:"varint,6,opt,name=relateUserId,proto3" json:"relateUserId"`
}

func (x *MerchantChargeRequest) Reset() {
	*x = MerchantChargeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantChargeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantChargeRequest) ProtoMessage() {}

func (x *MerchantChargeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantChargeRequest.ProtoReflect.Descriptor instead.
func (*MerchantChargeRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{25}
}

func (x *MerchantChargeRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantChargeRequest) GetKind() int32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *MerchantChargeRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MerchantChargeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MerchantChargeRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *MerchantChargeRequest) GetRelateUserId() int64 {
	if x != nil {
		return x.RelateUserId
	}
	return 0
}

type MerchantBuyerGroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	GroupId    int64 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *MerchantBuyerGroupId) Reset() {
	*x = MerchantBuyerGroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantBuyerGroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantBuyerGroupId) ProtoMessage() {}

func (x *MerchantBuyerGroupId) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantBuyerGroupId.ProtoReflect.Descriptor instead.
func (*MerchantBuyerGroupId) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{26}
}

func (x *MerchantBuyerGroupId) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantBuyerGroupId) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type SaveMerchantBuyerGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64                `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	Value      *SMerchantBuyerGroup `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *SaveMerchantBuyerGroupRequest) Reset() {
	*x = SaveMerchantBuyerGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveMerchantBuyerGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMerchantBuyerGroupRequest) ProtoMessage() {}

func (x *SaveMerchantBuyerGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMerchantBuyerGroupRequest.ProtoReflect.Descriptor instead.
func (*SaveMerchantBuyerGroupRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{27}
}

func (x *SaveMerchantBuyerGroupRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *SaveMerchantBuyerGroupRequest) GetValue() *SMerchantBuyerGroup {
	if x != nil {
		return x.Value
	}
	return nil
}

type MerchantBuyerGroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SMerchantBuyerGroup `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *MerchantBuyerGroupListResponse) Reset() {
	*x = MerchantBuyerGroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantBuyerGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantBuyerGroupListResponse) ProtoMessage() {}

func (x *MerchantBuyerGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantBuyerGroupListResponse.ProtoReflect.Descriptor instead.
func (*MerchantBuyerGroupListResponse) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{28}
}

func (x *MerchantBuyerGroupListResponse) GetValue() []*SMerchantBuyerGroup {
	if x != nil {
		return x.Value
	}
	return nil
}

// 商户客户分组
type SMerchantBuyerGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 客户分组编号
	GroupId int64 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
	// 分组别名
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 是否启用零售
	EnableRetail bool `protobuf:"varint,4,opt,name=enableRetail,proto3" json:"enableRetail"`
	// 是否启用批发
	EnableWholesale bool `protobuf:"varint,5,opt,name=enableWholesale,proto3" json:"enableWholesale"`
	// 批发返点周期(天)
	RebatePeriod int32 `protobuf:"varint,6,opt,name=rebatePeriod,proto3" json:"rebatePeriod"`
}

func (x *SMerchantBuyerGroup) Reset() {
	*x = SMerchantBuyerGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMerchantBuyerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMerchantBuyerGroup) ProtoMessage() {}

func (x *SMerchantBuyerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMerchantBuyerGroup.ProtoReflect.Descriptor instead.
func (*SMerchantBuyerGroup) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{29}
}

func (x *SMerchantBuyerGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SMerchantBuyerGroup) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SMerchantBuyerGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SMerchantBuyerGroup) GetEnableRetail() bool {
	if x != nil {
		return x.EnableRetail
	}
	return false
}

func (x *SMerchantBuyerGroup) GetEnableWholesale() bool {
	if x != nil {
		return x.EnableWholesale
	}
	return false
}

func (x *SMerchantBuyerGroup) GetRebatePeriod() int32 {
	if x != nil {
		return x.RebatePeriod
	}
	return 0
}

type SaveWholesaleRebateRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64                   `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	GroupId    int64                   `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
	Value      []*SWholesaleRebateRate `protobuf:"bytes,3,rep,name=value,proto3" json:"value"`
}

func (x *SaveWholesaleRebateRateRequest) Reset() {
	*x = SaveWholesaleRebateRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveWholesaleRebateRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveWholesaleRebateRateRequest) ProtoMessage() {}

func (x *SaveWholesaleRebateRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveWholesaleRebateRateRequest.ProtoReflect.Descriptor instead.
func (*SaveWholesaleRebateRateRequest) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{30}
}

func (x *SaveWholesaleRebateRateRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *SaveWholesaleRebateRateRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SaveWholesaleRebateRateRequest) GetValue() []*SWholesaleRebateRate {
	if x != nil {
		return x.Value
	}
	return nil
}

type WholesaleRebateRateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SWholesaleRebateRate `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *WholesaleRebateRateListResponse) Reset() {
	*x = WholesaleRebateRateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WholesaleRebateRateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WholesaleRebateRateListResponse) ProtoMessage() {}

func (x *WholesaleRebateRateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WholesaleRebateRateListResponse.ProtoReflect.Descriptor instead.
func (*WholesaleRebateRateListResponse) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{31}
}

func (x *WholesaleRebateRateListResponse) GetValue() []*SWholesaleRebateRate {
	if x != nil {
		return x.Value
	}
	return nil
}

// 批发客户分组返点比例设置
type SWholesaleRebateRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 批发商编号
	WsId int64 `protobuf:"varint,2,opt,name=wsId,proto3" json:"wsId"`
	// 客户分组编号
	BuyerGroupId int64 `protobuf:"varint,3,opt,name=buyerGroupId,proto3" json:"buyerGroupId"`
	// 下限金额
	RequireAmount int32 `protobuf:"varint,4,opt,name=requireAmount,proto3" json:"requireAmount"`
	// 返点率
	RebateRate float64 `protobuf:"fixed64,5,opt,name=rebateRate,proto3" json:"rebateRate"`
}

func (x *SWholesaleRebateRate) Reset() {
	*x = SWholesaleRebateRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_merchant_dto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWholesaleRebateRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWholesaleRebateRate) ProtoMessage() {}

func (x *SWholesaleRebateRate) ProtoReflect() protoreflect.Message {
	mi := &file_message_merchant_dto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWholesaleRebateRate.ProtoReflect.Descriptor instead.
func (*SWholesaleRebateRate) Descriptor() ([]byte, []int) {
	return file_message_merchant_dto_proto_rawDescGZIP(), []int{32}
}

func (x *SWholesaleRebateRate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SWholesaleRebateRate) GetWsId() int64 {
	if x != nil {
		return x.WsId
	}
	return 0
}

func (x *SWholesaleRebateRate) GetBuyerGroupId() int64 {
	if x != nil {
		return x.BuyerGroupId
	}
	return 0
}

func (x *SWholesaleRebateRate) GetRequireAmount() int32 {
	if x != nil {
		return x.RequireAmount
	}
	return 0
}

func (x *SWholesaleRebateRate) GetRebateRate() float64 {
	if x != nil {
		return x.RebateRate
	}
	return 0
}

var File_message_merchant_dto_proto protoreflect.FileDescriptor

var file_message_merchant_dto_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a,
	0x13, 0x53, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x67, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c,
	0x22, 0xdb, 0x04, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x67, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67,
	0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x50, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x50, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x50, 0x69, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x03, 0x6d, 0x63, 0x68,
	0x22, 0x6a, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13,
	0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x03, 0x6d, 0x63, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x03, 0x6d, 0x63,
	0x68, 0x22, 0x91, 0x04, 0x0a, 0x09, 0x51, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x51, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x98, 0x05, 0x0a, 0x0d, 0x51, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x50, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x50, 0x69, 0x63, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x63, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x69, 0x63,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x69,
	0x63, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3b, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x51, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x55, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x4d, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x7c, 0x0a, 0x10, 0x4d, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x53, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x57, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x16, 0x53,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x5f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x6d, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x4c, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x03, 0x61, 0x72, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x5f, 0x52, 0x03, 0x61, 0x72, 0x72, 0x22,
	0x0d, 0x0a, 0x0b, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x5f, 0x22, 0x86,
	0x05, 0x0a, 0x0a, 0x53, 0x4d, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x44, 0x6f, 0x63, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x44, 0x6f, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x77, 0x61, 0x69, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x52, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0xe7, 0x03, 0x0a, 0x11, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x78, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x66, 0x78, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x63, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x63,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x67, 0x31, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61, 0x63,
	0x6b, 0x54, 0x67, 0x31, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x63,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x67, 0x32, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x63, 0x61, 0x73, 0x68, 0x42, 0x61, 0x63,
	0x6b, 0x54, 0x67, 0x32, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x63,
	0x61, 0x73, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x63, 0x61, 0x73, 0x68,
	0x42, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x4f, 0x75, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x4f,
	0x75, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x22, 0x67, 0x0a,
	0x1b, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x73, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x7e, 0x0a, 0x10, 0x53,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x69, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x69, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x58, 0x0a, 0x1e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x6f, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x14, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4c, 0x0a, 0x1e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xc5, 0x01, 0x0a, 0x13, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x68, 0x6f, 0x6c, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x62, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x1e, 0x53, 0x61, 0x76,
	0x65, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4e, 0x0a, 0x1f, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x53, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x14, 0x53, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77,
	0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x77, 0x73, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x62,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_message_merchant_dto_proto_rawDescOnce sync.Once
	file_message_merchant_dto_proto_rawDescData = file_message_merchant_dto_proto_rawDesc
)

func file_message_merchant_dto_proto_rawDescGZIP() []byte {
	file_message_merchant_dto_proto_rawDescOnce.Do(func() {
		file_message_merchant_dto_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_merchant_dto_proto_rawDescData)
	})
	return file_message_merchant_dto_proto_rawDescData
}

var file_message_merchant_dto_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_message_merchant_dto_proto_goTypes = []interface{}{
	(*SSaveMerchantParams)(nil),             // 0: SSaveMerchantParams
	(*SaveAuthenticateRequest)(nil),         // 1: SaveAuthenticateRequest
	(*CreateMerchantRequest)(nil),           // 2: CreateMerchantRequest
	(*MerchantCreateResponse)(nil),          // 3: MerchantCreateResponse
	(*SaveMerchantRequest)(nil),             // 4: SaveMerchantRequest
	(*QMerchant)(nil),                       // 5: QMerchant
	(*QAuthenticate)(nil),                   // 6: QAuthenticate
	(*ChangeMemberBindRequest)(nil),         // 7: ChangeMemberBindRequest
	(*MchUserPwdRequest)(nil),               // 8: MchUserPwdRequest
	(*MchLoginResponse)(nil),                // 9: MchLoginResponse
	(*SyncWSItemsResponse)(nil),             // 10: SyncWSItemsResponse
	(*STradeConfListResponse)(nil),          // 11: STradeConfListResponse
	(*TradeConfRequest)(nil),                // 12: TradeConfRequest
	(*TradeConfSaveRequest)(nil),            // 13: TradeConfSaveRequest
	(*STradeConf_)(nil),                     // 14: STradeConf_
	(*SMchSignUp)(nil),                      // 15: SMchSignUp
	(*MerchantReviewRequest)(nil),           // 16: MerchantReviewRequest
	(*SMerchantAccount)(nil),                // 17: SMerchantAccount
	(*MerchantDisableRequest)(nil),          // 18: MerchantDisableRequest
	(*SMerchantSaleConf)(nil),               // 19: SMerchantSaleConf
	(*SaveMerchantSaleConfRequest)(nil),     // 20: SaveMerchantSaleConfRequest
	(*ModifyMerchantPasswordRequest)(nil),   // 21: ModifyMerchantPasswordRequest
	(*SMerchantApiInfo)(nil),                // 22: SMerchantApiInfo
	(*MerchantApiPermRequest)(nil),          // 23: MerchantApiPermRequest
	(*WithdrawToMemberAccountRequest)(nil),  // 24: WithdrawToMemberAccountRequest
	(*MerchantChargeRequest)(nil),           // 25: MerchantChargeRequest
	(*MerchantBuyerGroupId)(nil),            // 26: MerchantBuyerGroupId
	(*SaveMerchantBuyerGroupRequest)(nil),   // 27: SaveMerchantBuyerGroupRequest
	(*MerchantBuyerGroupListResponse)(nil),  // 28: MerchantBuyerGroupListResponse
	(*SMerchantBuyerGroup)(nil),             // 29: SMerchantBuyerGroup
	(*SaveWholesaleRebateRateRequest)(nil),  // 30: SaveWholesaleRebateRateRequest
	(*WholesaleRebateRateListResponse)(nil), // 31: WholesaleRebateRateListResponse
	(*SWholesaleRebateRate)(nil),            // 32: SWholesaleRebateRate
	nil,                                     // 33: QAuthenticate.ExtraDataEntry
	nil,                                     // 34: SyncWSItemsResponse.ValueEntry
}
var file_message_merchant_dto_proto_depIdxs = []int32{
	0,  // 0: CreateMerchantRequest.mch:type_name -> SSaveMerchantParams
	0,  // 1: SaveMerchantRequest.mch:type_name -> SSaveMerchantParams
	6,  // 2: QMerchant.authenticate:type_name -> QAuthenticate
	33, // 3: QAuthenticate.extraData:type_name -> QAuthenticate.ExtraDataEntry
	34, // 4: SyncWSItemsResponse.value:type_name -> SyncWSItemsResponse.ValueEntry
	14, // 5: STradeConfListResponse.value:type_name -> STradeConf_
	14, // 6: TradeConfSaveRequest.arr:type_name -> STradeConf_
	19, // 7: SaveMerchantSaleConfRequest.value:type_name -> SMerchantSaleConf
	29, // 8: SaveMerchantBuyerGroupRequest.value:type_name -> SMerchantBuyerGroup
	29, // 9: MerchantBuyerGroupListResponse.value:type_name -> SMerchantBuyerGroup
	32, // 10: SaveWholesaleRebateRateRequest.value:type_name -> SWholesaleRebateRate
	32, // 11: WholesaleRebateRateListResponse.value:type_name -> SWholesaleRebateRate
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_message_merchant_dto_proto_init() }
func file_message_merchant_dto_proto_init() {
	if File_message_merchant_dto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_merchant_dto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSaveMerchantParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMerchantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMerchantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QMerchant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QAuthenticate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMemberBindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MchUserPwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MchLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWSItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STradeConfListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeConfSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STradeConf_); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMchSignUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMerchantAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantDisableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMerchantSaleConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMerchantSaleConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyMerchantPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMerchantApiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantApiPermRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawToMemberAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantChargeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantBuyerGroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveMerchantBuyerGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantBuyerGroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMerchantBuyerGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveWholesaleRebateRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WholesaleRebateRateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_merchant_dto_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWholesaleRebateRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_merchant_dto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_merchant_dto_proto_goTypes,
		DependencyIndexes: file_message_merchant_dto_proto_depIdxs,
		MessageInfos:      file_message_merchant_dto_proto_msgTypes,
	}.Build()
	File_message_merchant_dto_proto = out.File
	file_message_merchant_dto_proto_rawDesc = nil
	file_message_merchant_dto_proto_goTypes = nil
	file_message_merchant_dto_proto_depIdxs = nil
}
