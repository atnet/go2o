// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: merchant_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 员工请求
type StaffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 会员编号或员工编号
	Id int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id"`
	// 商户编号
	MchId int64 `protobuf:"zigzag64,2,opt,name=mchId,proto3" json:"mchId"`
}

func (x *StaffRequest) Reset() {
	*x = StaffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaffRequest) ProtoMessage() {}

func (x *StaffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaffRequest.ProtoReflect.Descriptor instead.
func (*StaffRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{0}
}

func (x *StaffRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StaffRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

// 商户员工
type SStaff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 会员编号
	MemberId int64 `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId"`
	// 站点编号
	StationId int32 `protobuf:"varint,3,opt,name=stationId,proto3" json:"stationId"`
	// 商户编号
	MchId int64 `protobuf:"varint,4,opt,name=mchId,proto3" json:"mchId"`
	// 坐席标志
	Flag int32 `protobuf:"varint,5,opt,name=flag,proto3" json:"flag"`
	// 性别: 0: 未知 1:男 2:女
	Gender int32 `protobuf:"varint,6,opt,name=gender,proto3" json:"gender"`
	// 昵称
	Nickname string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname"`
	// 工作状态: 1: 离线 2:在线空闲 3: 工作中 4:离职
	WorkStatus int32 `protobuf:"varint,8,opt,name=workStatus,proto3" json:"workStatus"`
	// 评分
	Grade int32 `protobuf:"varint,9,opt,name=grade,proto3" json:"grade"`
	// 状态: 1: 正常  2: 锁定
	Status int32 `protobuf:"varint,10,opt,name=status,proto3" json:"status"`
	// 是否认证 0:否 1:是
	IsCertified int32 `protobuf:"varint,11,opt,name=isCertified,proto3" json:"isCertified"`
	// 认证姓名
	CertifiedName string `protobuf:"bytes,12,opt,name=certifiedName,proto3" json:"certifiedName"`
	// 高级用户等级
	PremiumLevel int32 `protobuf:"varint,13,opt,name=premiumLevel,proto3" json:"premiumLevel"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SStaff) Reset() {
	*x = SStaff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SStaff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SStaff) ProtoMessage() {}

func (x *SStaff) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SStaff.ProtoReflect.Descriptor instead.
func (*SStaff) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{1}
}

func (x *SStaff) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SStaff) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SStaff) GetStationId() int32 {
	if x != nil {
		return x.StationId
	}
	return 0
}

func (x *SStaff) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *SStaff) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SStaff) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SStaff) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SStaff) GetWorkStatus() int32 {
	if x != nil {
		return x.WorkStatus
	}
	return 0
}

func (x *SStaff) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *SStaff) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SStaff) GetIsCertified() int32 {
	if x != nil {
		return x.IsCertified
	}
	return 0
}

func (x *SStaff) GetCertifiedName() string {
	if x != nil {
		return x.CertifiedName
	}
	return ""
}

func (x *SStaff) GetPremiumLevel() int32 {
	if x != nil {
		return x.PremiumLevel
	}
	return 0
}

func (x *SStaff) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 保存员工请求
type SaveStaffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 坐席标志
	Flag int32 `protobuf:"varint,5,opt,name=flag,proto3" json:"flag"`
	// 性别: 0: 未知 1:男 2:女
	Gender int32 `protobuf:"varint,6,opt,name=gender,proto3" json:"gender"`
	// 昵称
	Nickname string `protobuf:"bytes,7,opt,name=nickname,proto3" json:"nickname"`
	// 工作状态: 1: 离线 2:在线空闲 3: 工作中 4:离职
	WorkStatus int32 `protobuf:"varint,8,opt,name=workStatus,proto3" json:"workStatus"`
	// 评分
	Grade int32 `protobuf:"varint,9,opt,name=grade,proto3" json:"grade"`
}

func (x *SaveStaffRequest) Reset() {
	*x = SaveStaffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveStaffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveStaffRequest) ProtoMessage() {}

func (x *SaveStaffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveStaffRequest.ProtoReflect.Descriptor instead.
func (*SaveStaffRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{2}
}

func (x *SaveStaffRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveStaffRequest) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SaveStaffRequest) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SaveStaffRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SaveStaffRequest) GetWorkStatus() int32 {
	if x != nil {
		return x.WorkStatus
	}
	return 0
}

func (x *SaveStaffRequest) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

type MerchantOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MerchantId int64 `protobuf:"varint,1,opt,name=merchantId,proto3" json:"merchantId"`
	// 是否分页
	Pagination bool `protobuf:"varint,2,opt,name=pagination,proto3" json:"pagination"`
	// 分页参数
	Params *SPagingParams `protobuf:"bytes,3,opt,name=params,proto3" json:"params"`
}

func (x *MerchantOrderRequest) Reset() {
	*x = MerchantOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantOrderRequest) ProtoMessage() {}

func (x *MerchantOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantOrderRequest.ProtoReflect.Descriptor instead.
func (*MerchantOrderRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{3}
}

func (x *MerchantOrderRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantOrderRequest) GetPagination() bool {
	if x != nil {
		return x.Pagination
	}
	return false
}

func (x *MerchantOrderRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingMerchantOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*SMerchantOrder `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *PagingMerchantOrderListResponse) Reset() {
	*x = PagingMerchantOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingMerchantOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingMerchantOrderListResponse) ProtoMessage() {}

func (x *PagingMerchantOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingMerchantOrderListResponse.ProtoReflect.Descriptor instead.
func (*PagingMerchantOrderListResponse) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{4}
}

func (x *PagingMerchantOrderListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingMerchantOrderListResponse) GetData() []*SMerchantOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type SMerchantOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   int64  `protobuf:"varint,1,opt,name=orderId,proto3" json:"orderId"`
	OrderNo   string `protobuf:"bytes,2,opt,name=orderNo,proto3" json:"orderNo"`
	ParentNo  string `protobuf:"bytes,3,opt,name=parentNo,proto3" json:"parentNo"`
	BuyerId   int64  `protobuf:"varint,4,opt,name=buyerId,proto3" json:"buyerId"`
	BuyerName string `protobuf:"bytes,5,opt,name=buyerName,proto3" json:"buyerName"`
	// 订单详情,主要描述订单的内容
	Details        string            `protobuf:"bytes,6,opt,name=details,proto3" json:"details"`
	ItemAmount     float64           `protobuf:"fixed64,7,opt,name=itemAmount,proto3" json:"itemAmount"`
	DiscountAmount float64           `protobuf:"fixed64,8,opt,name=discountAmount,proto3" json:"discountAmount"`
	ExpressFee     float64           `protobuf:"fixed64,9,opt,name=expressFee,proto3" json:"expressFee"`
	PackageFee     float64           `protobuf:"fixed64,10,opt,name=packageFee,proto3" json:"packageFee"`
	IsPaid         bool              `protobuf:"varint,11,opt,name=isPaid,proto3" json:"isPaid"`
	FinalAmount    float64           `protobuf:"fixed64,12,opt,name=finalAmount,proto3" json:"finalAmount"`
	State          int32             `protobuf:"varint,13,opt,name=state,proto3" json:"state"`
	StatusText     string            `protobuf:"bytes,14,opt,name=statusText,proto3" json:"statusText"`
	CreateTime     int64             `protobuf:"varint,15,opt,name=createTime,proto3" json:"createTime"`
	Items          []*SOrderItem     `protobuf:"bytes,16,rep,name=items,proto3" json:"items"`
	Data           map[string]string `protobuf:"bytes,17,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SMerchantOrder) Reset() {
	*x = SMerchantOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMerchantOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMerchantOrder) ProtoMessage() {}

func (x *SMerchantOrder) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMerchantOrder.ProtoReflect.Descriptor instead.
func (*SMerchantOrder) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{5}
}

func (x *SMerchantOrder) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SMerchantOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SMerchantOrder) GetParentNo() string {
	if x != nil {
		return x.ParentNo
	}
	return ""
}

func (x *SMerchantOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SMerchantOrder) GetBuyerName() string {
	if x != nil {
		return x.BuyerName
	}
	return ""
}

func (x *SMerchantOrder) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *SMerchantOrder) GetItemAmount() float64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SMerchantOrder) GetDiscountAmount() float64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SMerchantOrder) GetExpressFee() float64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SMerchantOrder) GetPackageFee() float64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SMerchantOrder) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *SMerchantOrder) GetFinalAmount() float64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SMerchantOrder) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SMerchantOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *SMerchantOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SMerchantOrder) GetItems() []*SOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SMerchantOrder) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 员工转商户请求
type TransferStaffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 员工编号
	StaffId int64 `protobuf:"varint,2,opt,name=staffId,proto3" json:"staffId"`
	// 转移商户编号
	TransferMchId int64 `protobuf:"varint,3,opt,name=transferMchId,proto3" json:"transferMchId"`
}

func (x *TransferStaffRequest) Reset() {
	*x = TransferStaffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferStaffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStaffRequest) ProtoMessage() {}

func (x *TransferStaffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStaffRequest.ProtoReflect.Descriptor instead.
func (*TransferStaffRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{6}
}

func (x *TransferStaffRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *TransferStaffRequest) GetStaffId() int64 {
	if x != nil {
		return x.StaffId
	}
	return 0
}

func (x *TransferStaffRequest) GetTransferMchId() int64 {
	if x != nil {
		return x.TransferMchId
	}
	return 0
}

// 获取商户月度账单请求
type BillTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 月份第一天的时间戳
	BillTime int64 `protobuf:"varint,2,opt,name=billTime,proto3" json:"billTime"`
}

func (x *BillTimeRequest) Reset() {
	*x = BillTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillTimeRequest) ProtoMessage() {}

func (x *BillTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillTimeRequest.ProtoReflect.Descriptor instead.
func (*BillTimeRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{7}
}

func (x *BillTimeRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *BillTimeRequest) GetBillTime() int64 {
	if x != nil {
		return x.BillTime
	}
	return 0
}

// 商户月度账单
type SMerchantBill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 商户编号
	MchId int64 `protobuf:"varint,2,opt,name=mchId,proto3" json:"mchId"`
	// 账单时间
	BillTime int64 `protobuf:"varint,3,opt,name=billTime,proto3" json:"billTime"`
	// 月份: 例:202408
	BillMonth string `protobuf:"bytes,4,opt,name=billMonth,proto3" json:"billMonth"`
	// 账单开始时间
	StartTime int64 `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime"`
	// 账单结束时间
	EndTime int64 `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime"`
	// 商城订单数量
	ShopOrderCount int32 `protobuf:"varint,7,opt,name=shopOrderCount,proto3" json:"shopOrderCount"`
	// 线下订单数量
	StoreOrderCount int32 `protobuf:"varint,8,opt,name=storeOrderCount,proto3" json:"storeOrderCount"`
	// 商城总金额
	ShopTotalAmount int64 `protobuf:"varint,9,opt,name=shopTotalAmount,proto3" json:"shopTotalAmount"`
	// 线下总金额
	StoreTotalAmount int64 `protobuf:"varint,10,opt,name=storeTotalAmount,proto3" json:"storeTotalAmount"`
	// 其他订单总数量
	OtherOrderCount int32 `protobuf:"varint,11,opt,name=otherOrderCount,proto3" json:"otherOrderCount"`
	// 其他订单总金额
	OtherTotalAmount int64 `protobuf:"varint,12,opt,name=otherTotalAmount,proto3" json:"otherTotalAmount"`
	// 总交易费
	TotalTxFee int64 `protobuf:"varint,13,opt,name=totalTxFee,proto3" json:"totalTxFee"`
	// 账单状态:  0: 待生成 1: 已生成 2: 已复核  3: 已结算
	Status int32 `protobuf:"varint,14,opt,name=status,proto3" json:"status"`
	// 审核人编号
	ReviewerId int64 `protobuf:"varint,15,opt,name=reviewerId,proto3" json:"reviewerId"`
	// 审核人名称
	ReviewerName string `protobuf:"bytes,16,opt,name=reviewerName,proto3" json:"reviewerName"`
	// 审核时间
	ReviewTime int64 `protobuf:"varint,17,opt,name=reviewTime,proto3" json:"reviewTime"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,18,opt,name=createTime,proto3" json:"createTime"`
	// 账单生成时间
	BuildTime int64 `protobuf:"varint,19,opt,name=buildTime,proto3" json:"buildTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,20,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SMerchantBill) Reset() {
	*x = SMerchantBill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMerchantBill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMerchantBill) ProtoMessage() {}

func (x *SMerchantBill) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMerchantBill.ProtoReflect.Descriptor instead.
func (*SMerchantBill) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{8}
}

func (x *SMerchantBill) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SMerchantBill) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *SMerchantBill) GetBillTime() int64 {
	if x != nil {
		return x.BillTime
	}
	return 0
}

func (x *SMerchantBill) GetBillMonth() string {
	if x != nil {
		return x.BillMonth
	}
	return ""
}

func (x *SMerchantBill) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SMerchantBill) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *SMerchantBill) GetShopOrderCount() int32 {
	if x != nil {
		return x.ShopOrderCount
	}
	return 0
}

func (x *SMerchantBill) GetStoreOrderCount() int32 {
	if x != nil {
		return x.StoreOrderCount
	}
	return 0
}

func (x *SMerchantBill) GetShopTotalAmount() int64 {
	if x != nil {
		return x.ShopTotalAmount
	}
	return 0
}

func (x *SMerchantBill) GetStoreTotalAmount() int64 {
	if x != nil {
		return x.StoreTotalAmount
	}
	return 0
}

func (x *SMerchantBill) GetOtherOrderCount() int32 {
	if x != nil {
		return x.OtherOrderCount
	}
	return 0
}

func (x *SMerchantBill) GetOtherTotalAmount() int64 {
	if x != nil {
		return x.OtherTotalAmount
	}
	return 0
}

func (x *SMerchantBill) GetTotalTxFee() int64 {
	if x != nil {
		return x.TotalTxFee
	}
	return 0
}

func (x *SMerchantBill) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SMerchantBill) GetReviewerId() int64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

func (x *SMerchantBill) GetReviewerName() string {
	if x != nil {
		return x.ReviewerName
	}
	return ""
}

func (x *SMerchantBill) GetReviewTime() int64 {
	if x != nil {
		return x.ReviewTime
	}
	return 0
}

func (x *SMerchantBill) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SMerchantBill) GetBuildTime() int64 {
	if x != nil {
		return x.BuildTime
	}
	return 0
}

func (x *SMerchantBill) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 调整商户账单金额请求
type AdjustMerchantBillAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 调整类型: 1: 商城金额 2: 线下金额 3: 其他金额
	AmountType int32 `protobuf:"varint,2,opt,name=amountType,proto3" json:"amountType"`
	// 调整金额
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	// 交易费
	TxFee int64 `protobuf:"varint,4,opt,name=txFee,proto3" json:"txFee"`
}

func (x *AdjustMerchantBillAmountRequest) Reset() {
	*x = AdjustMerchantBillAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustMerchantBillAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustMerchantBillAmountRequest) ProtoMessage() {}

func (x *AdjustMerchantBillAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustMerchantBillAmountRequest.ProtoReflect.Descriptor instead.
func (*AdjustMerchantBillAmountRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{9}
}

func (x *AdjustMerchantBillAmountRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *AdjustMerchantBillAmountRequest) GetAmountType() int32 {
	if x != nil {
		return x.AmountType
	}
	return 0
}

func (x *AdjustMerchantBillAmountRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdjustMerchantBillAmountRequest) GetTxFee() int64 {
	if x != nil {
		return x.TxFee
	}
	return 0
}

// 审核商户月度账单请求
type ReviewMerchantBillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 账单编号
	BillId int64 `protobuf:"varint,2,opt,name=billId,proto3" json:"billId"`
	// 审核人编号
	ReviewerId int64 `protobuf:"varint,3,opt,name=reviewerId,proto3" json:"reviewerId"`
}

func (x *ReviewMerchantBillRequest) Reset() {
	*x = ReviewMerchantBillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewMerchantBillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewMerchantBillRequest) ProtoMessage() {}

func (x *ReviewMerchantBillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewMerchantBillRequest.ProtoReflect.Descriptor instead.
func (*ReviewMerchantBillRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{10}
}

func (x *ReviewMerchantBillRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *ReviewMerchantBillRequest) GetBillId() int64 {
	if x != nil {
		return x.BillId
	}
	return 0
}

func (x *ReviewMerchantBillRequest) GetReviewerId() int64 {
	if x != nil {
		return x.ReviewerId
	}
	return 0
}

// 结算商户月度账单请求
type SettleMerchantBillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 账单编号
	BillId int64 `protobuf:"varint,2,opt,name=billId,proto3" json:"billId"`
}

func (x *SettleMerchantBillRequest) Reset() {
	*x = SettleMerchantBillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettleMerchantBillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleMerchantBillRequest) ProtoMessage() {}

func (x *SettleMerchantBillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleMerchantBillRequest.ProtoReflect.Descriptor instead.
func (*SettleMerchantBillRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{11}
}

func (x *SettleMerchantBillRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *SettleMerchantBillRequest) GetBillId() int64 {
	if x != nil {
		return x.BillId
	}
	return 0
}

// 商户申请发票请求
type MerchantRequestInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商户编号
	MchId int64 `protobuf:"varint,1,opt,name=mchId,proto3" json:"mchId"`
	// 申请金额
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	// 备注
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
}

func (x *MerchantRequestInvoiceRequest) Reset() {
	*x = MerchantRequestInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_merchant_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantRequestInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantRequestInvoiceRequest) ProtoMessage() {}

func (x *MerchantRequestInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantRequestInvoiceRequest.ProtoReflect.Descriptor instead.
func (*MerchantRequestInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_merchant_service_proto_rawDescGZIP(), []int{12}
}

func (x *MerchantRequestInvoiceRequest) GetMchId() int64 {
	if x != nil {
		return x.MchId
	}
	return 0
}

func (x *MerchantRequestInvoiceRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MerchantRequestInvoiceRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

var File_merchant_service_proto protoreflect.FileDescriptor

var file_merchant_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x64, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x22, 0x8a, 0x03, 0x0a, 0x06,
	0x53, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x73, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x75, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x10, 0x53, 0x61, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x22, 0x7e, 0x0a, 0x14, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x5c, 0x0a, 0x1f, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd5, 0x04, 0x0a, 0x0e, 0x53, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x50, 0x61, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x6c, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x66, 0x66, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x63, 0x68, 0x49, 0x64, 0x22,
	0x43, 0x0a, 0x0f, 0x42, 0x69, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6c, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x9f, 0x05, 0x0a, 0x0d, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x62, 0x69, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6c,
	0x6c, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x70, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x70, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x46, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1f, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63,
	0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x46, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x78, 0x46, 0x65, 0x65, 0x22, 0x69,
	0x0a, 0x19, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1d, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x80, 0x16, 0x0a, 0x0f,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x21, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x06,
	0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x0a, 0x2e, 0x51, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x07, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x41,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x12, 0x16, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x12, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x37, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09,
	0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x12, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x12, 0x2e, 0x4d, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4d, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x31, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a, 0x14, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x57, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x5f, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x1a,
	0x17, 0x2e, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x11, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x53, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x5f, 0x12, 0x2f, 0x0a, 0x0d, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x15, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x09, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x06,
	0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x35, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a,
	0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e,
	0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x35,
	0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1c,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x1a, 0x12, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x20, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a,
	0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a,
	0x11, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0d, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x50,
	0x65, 0x72, 0x6d, 0x12, 0x17, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x41, 0x70,
	0x69, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x79, 0x41, 0x70, 0x69, 0x49, 0x64, 0x12, 0x07, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x53,
	0x0a, 0x18, 0x50, 0x61, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4f, 0x66, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x15, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x1b, 0x50, 0x61, 0x67, 0x65, 0x64, 0x57, 0x68, 0x6f, 0x6c,
	0x65, 0x73, 0x61, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x12, 0x15, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x17, 0x50,
	0x61, 0x67, 0x65, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x66,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x15, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x17, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x6f, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x63, 0x68, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x12, 0x15, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x1a, 0x14, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x79, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x63,
	0x68, 0x42, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x2e, 0x53, 0x61,
	0x76, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x1a, 0x1f, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x62, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x20, 0x2e, 0x57,
	0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x62, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x57, 0x68, 0x6f, 0x6c,
	0x65, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x0d, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x42,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12,
	0x27, 0x0a, 0x09, 0x53, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x11, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x66, 0x66, 0x12, 0x15, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0e, 0x43, 0x61, 0x72,
	0x72, 0x79, 0x54, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x61, 0x72, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x34, 0x0a, 0x0d, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12,
	0x18, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x46, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x12, 0x1a, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x55, 0x6e, 0x66,
	0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x14, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a,
	0x10, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x12, 0x1c, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x1c,
	0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x4c, 0x6f, 0x67, 0x12, 0x0f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x10, 0x2e, 0x42,
	0x69, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x53, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x3f,
	0x0a, 0x10, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x26, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x12,
	0x0b, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x1a, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x1f,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32,
	0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_merchant_service_proto_rawDescOnce sync.Once
	file_merchant_service_proto_rawDescData = file_merchant_service_proto_rawDesc
)

func file_merchant_service_proto_rawDescGZIP() []byte {
	file_merchant_service_proto_rawDescOnce.Do(func() {
		file_merchant_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_merchant_service_proto_rawDescData)
	})
	return file_merchant_service_proto_rawDescData
}

var file_merchant_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_merchant_service_proto_goTypes = []interface{}{
	(*StaffRequest)(nil),                    // 0: StaffRequest
	(*SStaff)(nil),                          // 1: SStaff
	(*SaveStaffRequest)(nil),                // 2: SaveStaffRequest
	(*MerchantOrderRequest)(nil),            // 3: MerchantOrderRequest
	(*PagingMerchantOrderListResponse)(nil), // 4: PagingMerchantOrderListResponse
	(*SMerchantOrder)(nil),                  // 5: SMerchantOrder
	(*TransferStaffRequest)(nil),            // 6: TransferStaffRequest
	(*BillTimeRequest)(nil),                 // 7: BillTimeRequest
	(*SMerchantBill)(nil),                   // 8: SMerchantBill
	(*AdjustMerchantBillAmountRequest)(nil), // 9: AdjustMerchantBillAmountRequest
	(*ReviewMerchantBillRequest)(nil),       // 10: ReviewMerchantBillRequest
	(*SettleMerchantBillRequest)(nil),       // 11: SettleMerchantBillRequest
	(*MerchantRequestInvoiceRequest)(nil),   // 12: MerchantRequestInvoiceRequest
	nil,                                     // 13: SMerchantOrder.DataEntry
	(*SPagingParams)(nil),                   // 14: SPagingParams
	(*SOrderItem)(nil),                      // 15: SOrderItem
	(*Int64)(nil),                           // 16: Int64
	(*String)(nil),                          // 17: String
	(*CreateMerchantRequest)(nil),           // 18: CreateMerchantRequest
	(*SaveMerchantRequest)(nil),             // 19: SaveMerchantRequest
	(*SaveAuthenticateRequest)(nil),         // 20: SaveAuthenticateRequest
	(*MerchantReviewRequest)(nil),           // 21: MerchantReviewRequest
	(*MchUserPwdRequest)(nil),               // 22: MchUserPwdRequest
	(*TradeConfRequest)(nil),                // 23: TradeConfRequest
	(*TradeConfSaveRequest)(nil),            // 24: TradeConfSaveRequest
	(*MemberId)(nil),                        // 25: MemberId
	(*ChangeMemberBindRequest)(nil),         // 26: ChangeMemberBindRequest
	(*MerchantLockStatusRequest)(nil),       // 27: MerchantLockStatusRequest
	(*MerchantId)(nil),                      // 28: MerchantId
	(*SaveMerchantSaleConfRequest)(nil),     // 29: SaveMerchantSaleConfRequest
	(*ModifyMerchantPasswordRequest)(nil),   // 30: ModifyMerchantPasswordRequest
	(*MerchantApiPermRequest)(nil),          // 31: MerchantApiPermRequest
	(*WithdrawToMemberAccountRequest)(nil),  // 32: WithdrawToMemberAccountRequest
	(*MerchantBuyerGroupId)(nil),            // 33: MerchantBuyerGroupId
	(*SaveMerchantBuyerGroupRequest)(nil),   // 34: SaveMerchantBuyerGroupRequest
	(*SaveWholesaleRebateRateRequest)(nil),  // 35: SaveWholesaleRebateRateRequest
	(*UserWalletCarryRequest)(nil),          // 36: UserWalletCarryRequest
	(*UserWalletAdjustRequest)(nil),         // 37: UserWalletAdjustRequest
	(*UserWalletFreezeRequest)(nil),         // 38: UserWalletFreezeRequest
	(*UserWalletUnfreezeRequest)(nil),       // 39: UserWalletUnfreezeRequest
	(*UserWithdrawRequest)(nil),             // 40: UserWithdrawRequest
	(*ReviewUserWithdrawalRequest)(nil),     // 41: ReviewUserWithdrawalRequest
	(*FinishUserWithdrawalRequest)(nil),     // 42: FinishUserWithdrawalRequest
	(*UserWalletTxId)(nil),                  // 43: UserWalletTxId
	(*QMerchant)(nil),                       // 44: QMerchant
	(*MerchantCreateResponse)(nil),          // 45: MerchantCreateResponse
	(*Result)(nil),                          // 46: Result
	(*TxResult)(nil),                        // 47: TxResult
	(*MchLoginResponse)(nil),                // 48: MchLoginResponse
	(*SyncWSItemsResponse)(nil),             // 49: SyncWSItemsResponse
	(*STradeConfListResponse)(nil),          // 50: STradeConfListResponse
	(*STradeConf_)(nil),                     // 51: STradeConf_
	(*SMerchantSaleConf)(nil),               // 52: SMerchantSaleConf
	(*SMerchantApiInfo)(nil),                // 53: SMerchantApiInfo
	(*SMerchantBuyerGroup)(nil),             // 54: SMerchantBuyerGroup
	(*MerchantBuyerGroupListResponse)(nil),  // 55: MerchantBuyerGroupListResponse
	(*WholesaleRebateRateListResponse)(nil), // 56: WholesaleRebateRateListResponse
	(*SMerchantAccount)(nil),                // 57: SMerchantAccount
	(*UserWalletTxResponse)(nil),            // 58: UserWalletTxResponse
}
var file_merchant_service_proto_depIdxs = []int32{
	14, // 0: MerchantOrderRequest.params:type_name -> SPagingParams
	5,  // 1: PagingMerchantOrderListResponse.data:type_name -> SMerchantOrder
	15, // 2: SMerchantOrder.items:type_name -> SOrderItem
	13, // 3: SMerchantOrder.data:type_name -> SMerchantOrder.DataEntry
	16, // 4: MerchantService.GetMerchant:input_type -> Int64
	17, // 5: MerchantService.GetMerchantIdByUsername:input_type -> String
	18, // 6: MerchantService.CreateMerchant:input_type -> CreateMerchantRequest
	19, // 7: MerchantService.SaveMerchant:input_type -> SaveMerchantRequest
	20, // 8: MerchantService.SaveAuthenticate:input_type -> SaveAuthenticateRequest
	21, // 9: MerchantService.ReviewAuthenticate:input_type -> MerchantReviewRequest
	22, // 10: MerchantService.CheckLogin:input_type -> MchUserPwdRequest
	16, // 11: MerchantService.Stat:input_type -> Int64
	16, // 12: MerchantService.SyncWholesaleItem:input_type -> Int64
	16, // 13: MerchantService.GetAllTradeConf_:input_type -> Int64
	23, // 14: MerchantService.GetTradeConf:input_type -> TradeConfRequest
	24, // 15: MerchantService.SaveTradeConf:input_type -> TradeConfSaveRequest
	25, // 16: MerchantService.GetMerchantIdByMember:input_type -> MemberId
	26, // 17: MerchantService.ChangeMemberBind:input_type -> ChangeMemberBindRequest
	27, // 18: MerchantService.updateLockStatus:input_type -> MerchantLockStatusRequest
	17, // 19: MerchantService.GetMerchantIdByHost:input_type -> String
	28, // 20: MerchantService.GetMerchantMajorHost:input_type -> MerchantId
	29, // 21: MerchantService.SaveSaleConf:input_type -> SaveMerchantSaleConfRequest
	28, // 22: MerchantService.GetSaleConf:input_type -> MerchantId
	28, // 23: MerchantService.GetShopId:input_type -> MerchantId
	30, // 24: MerchantService.changePassword:input_type -> ModifyMerchantPasswordRequest
	28, // 25: MerchantService.GetApiInfo:input_type -> MerchantId
	31, // 26: MerchantService.ToggleApiPerm:input_type -> MerchantApiPermRequest
	17, // 27: MerchantService.GetMerchantIdByApiId:input_type -> String
	3,  // 28: MerchantService.PagedNormalOrderOfVendor:input_type -> MerchantOrderRequest
	3,  // 29: MerchantService.PagedWholesaleOrderOfVendor:input_type -> MerchantOrderRequest
	3,  // 30: MerchantService.PagedTradeOrderOfVendor:input_type -> MerchantOrderRequest
	32, // 31: MerchantService.WithdrawToMemberAccount:input_type -> WithdrawToMemberAccountRequest
	33, // 32: MerchantService.GetMchBuyerGroup_:input_type -> MerchantBuyerGroupId
	34, // 33: MerchantService.SaveMchBuyerGroup:input_type -> SaveMerchantBuyerGroupRequest
	28, // 34: MerchantService.GetBuyerGroups:input_type -> MerchantId
	33, // 35: MerchantService.GetRebateRate:input_type -> MerchantBuyerGroupId
	35, // 36: MerchantService.SaveGroupRebateRate:input_type -> SaveWholesaleRebateRateRequest
	0,  // 37: MerchantService.GetStaff:input_type -> StaffRequest
	0,  // 38: MerchantService.GetStaffByMember:input_type -> StaffRequest
	2,  // 39: MerchantService.SaveStaff:input_type -> SaveStaffRequest
	6,  // 40: MerchantService.TransferStaff:input_type -> TransferStaffRequest
	28, // 41: MerchantService.GetAccount:input_type -> MerchantId
	36, // 42: MerchantService.CarryToAccount:input_type -> UserWalletCarryRequest
	37, // 43: MerchantService.AdjustAccount:input_type -> UserWalletAdjustRequest
	38, // 44: MerchantService.Freeze:input_type -> UserWalletFreezeRequest
	39, // 45: MerchantService.Unfreeze:input_type -> UserWalletUnfreezeRequest
	40, // 46: MerchantService.RequestWithdrawal:input_type -> UserWithdrawRequest
	41, // 47: MerchantService.ReviewWithdrawal:input_type -> ReviewUserWithdrawalRequest
	42, // 48: MerchantService.FinishWithdrawal:input_type -> FinishUserWithdrawalRequest
	43, // 49: MerchantService.GetWalletTxLog:input_type -> UserWalletTxId
	7,  // 50: MerchantService.GetBill:input_type -> BillTimeRequest
	9,  // 51: MerchantService.AdjustBillAmount:input_type -> AdjustMerchantBillAmountRequest
	28, // 52: MerchantService.GenerateBill:input_type -> MerchantId
	10, // 53: MerchantService.ReviewBill:input_type -> ReviewMerchantBillRequest
	11, // 54: MerchantService.SettleBill:input_type -> SettleMerchantBillRequest
	12, // 55: MerchantService.RequestInvoice:input_type -> MerchantRequestInvoiceRequest
	44, // 56: MerchantService.GetMerchant:output_type -> QMerchant
	16, // 57: MerchantService.GetMerchantIdByUsername:output_type -> Int64
	45, // 58: MerchantService.CreateMerchant:output_type -> MerchantCreateResponse
	46, // 59: MerchantService.SaveMerchant:output_type -> Result
	47, // 60: MerchantService.SaveAuthenticate:output_type -> TxResult
	47, // 61: MerchantService.ReviewAuthenticate:output_type -> TxResult
	48, // 62: MerchantService.CheckLogin:output_type -> MchLoginResponse
	46, // 63: MerchantService.Stat:output_type -> Result
	49, // 64: MerchantService.SyncWholesaleItem:output_type -> SyncWSItemsResponse
	50, // 65: MerchantService.GetAllTradeConf_:output_type -> STradeConfListResponse
	51, // 66: MerchantService.GetTradeConf:output_type -> STradeConf_
	46, // 67: MerchantService.SaveTradeConf:output_type -> Result
	16, // 68: MerchantService.GetMerchantIdByMember:output_type -> Int64
	46, // 69: MerchantService.ChangeMemberBind:output_type -> Result
	47, // 70: MerchantService.updateLockStatus:output_type -> TxResult
	16, // 71: MerchantService.GetMerchantIdByHost:output_type -> Int64
	17, // 72: MerchantService.GetMerchantMajorHost:output_type -> String
	46, // 73: MerchantService.SaveSaleConf:output_type -> Result
	52, // 74: MerchantService.GetSaleConf:output_type -> SMerchantSaleConf
	16, // 75: MerchantService.GetShopId:output_type -> Int64
	47, // 76: MerchantService.changePassword:output_type -> TxResult
	53, // 77: MerchantService.GetApiInfo:output_type -> SMerchantApiInfo
	46, // 78: MerchantService.ToggleApiPerm:output_type -> Result
	16, // 79: MerchantService.GetMerchantIdByApiId:output_type -> Int64
	4,  // 80: MerchantService.PagedNormalOrderOfVendor:output_type -> PagingMerchantOrderListResponse
	4,  // 81: MerchantService.PagedWholesaleOrderOfVendor:output_type -> PagingMerchantOrderListResponse
	4,  // 82: MerchantService.PagedTradeOrderOfVendor:output_type -> PagingMerchantOrderListResponse
	46, // 83: MerchantService.WithdrawToMemberAccount:output_type -> Result
	54, // 84: MerchantService.GetMchBuyerGroup_:output_type -> SMerchantBuyerGroup
	46, // 85: MerchantService.SaveMchBuyerGroup:output_type -> Result
	55, // 86: MerchantService.GetBuyerGroups:output_type -> MerchantBuyerGroupListResponse
	56, // 87: MerchantService.GetRebateRate:output_type -> WholesaleRebateRateListResponse
	46, // 88: MerchantService.SaveGroupRebateRate:output_type -> Result
	1,  // 89: MerchantService.GetStaff:output_type -> SStaff
	1,  // 90: MerchantService.GetStaffByMember:output_type -> SStaff
	46, // 91: MerchantService.SaveStaff:output_type -> Result
	47, // 92: MerchantService.TransferStaff:output_type -> TxResult
	57, // 93: MerchantService.GetAccount:output_type -> SMerchantAccount
	47, // 94: MerchantService.CarryToAccount:output_type -> TxResult
	47, // 95: MerchantService.AdjustAccount:output_type -> TxResult
	47, // 96: MerchantService.Freeze:output_type -> TxResult
	47, // 97: MerchantService.Unfreeze:output_type -> TxResult
	47, // 98: MerchantService.RequestWithdrawal:output_type -> TxResult
	47, // 99: MerchantService.ReviewWithdrawal:output_type -> TxResult
	47, // 100: MerchantService.FinishWithdrawal:output_type -> TxResult
	58, // 101: MerchantService.GetWalletTxLog:output_type -> UserWalletTxResponse
	8,  // 102: MerchantService.GetBill:output_type -> SMerchantBill
	47, // 103: MerchantService.AdjustBillAmount:output_type -> TxResult
	47, // 104: MerchantService.GenerateBill:output_type -> TxResult
	47, // 105: MerchantService.ReviewBill:output_type -> TxResult
	47, // 106: MerchantService.SettleBill:output_type -> TxResult
	47, // 107: MerchantService.RequestInvoice:output_type -> TxResult
	56, // [56:108] is the sub-list for method output_type
	4,  // [4:56] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_merchant_service_proto_init() }
func file_merchant_service_proto_init() {
	if File_merchant_service_proto != nil {
		return
	}
	file_global_proto_init()
	file_message_merchant_dto_proto_init()
	file_message_order_dto_proto_init()
	file_message_wallet_dto_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_merchant_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SStaff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveStaffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingMerchantOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMerchantOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferStaffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMerchantBill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustMerchantBillAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewMerchantBillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettleMerchantBillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_merchant_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantRequestInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_merchant_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_merchant_service_proto_goTypes,
		DependencyIndexes: file_merchant_service_proto_depIdxs,
		MessageInfos:      file_merchant_service_proto_msgTypes,
	}.Build()
	File_merchant_service_proto = out.File
	file_merchant_service_proto_rawDesc = nil
	file_merchant_service_proto_goTypes = nil
	file_merchant_service_proto_depIdxs = nil
}
