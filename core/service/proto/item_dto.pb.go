// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: message/item_dto.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品销售类型
type EItemSalesType int32

const (
	EItemSalesType_IT_NORMAL    EItemSalesType = 0
	EItemSalesType_IT_WHOLESALE EItemSalesType = 1
)

// Enum value maps for EItemSalesType.
var (
	EItemSalesType_name = map[int32]string{
		0: "IT_NORMAL",
		1: "IT_WHOLESALE",
	}
	EItemSalesType_value = map[string]int32{
		"IT_NORMAL":    0,
		"IT_WHOLESALE": 1,
	}
)

func (x EItemSalesType) Enum() *EItemSalesType {
	p := new(EItemSalesType)
	*p = x
	return p
}

func (x EItemSalesType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EItemSalesType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_item_dto_proto_enumTypes[0].Descriptor()
}

func (EItemSalesType) Type() protoreflect.EnumType {
	return &file_message_item_dto_proto_enumTypes[0]
}

func (x EItemSalesType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EItemSalesType.Descriptor instead.
func (EItemSalesType) EnumDescriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{0}
}

// 商品标志枚举
type EItemFlag int32

const (
	EItemFlag__EItemFlag EItemFlag = 0
	// 自营商品
	EItemFlag_SelfSales EItemFlag = 1
	// 免邮
	EItemFlag_FreeDelivery EItemFlag = 2
	// 推荐商品
	EItemFlag_Recommend EItemFlag = 4
	// 积分兑换商品
	EItemFlag_Exchange EItemFlag = 8
	// 赠品
	EItemFlag_Gift EItemFlag = 16
	// 分销商品
	EItemFlag_Affiliate EItemFlag = 32
	// 新品
	EItemFlag_NewOnShelve EItemFlag = 64
	// 热销商品
	EItemFlag_HotSales EItemFlag = 128
	// 平台配送
	EItemFlag_SelfDelivery EItemFlag = 256
)

// Enum value maps for EItemFlag.
var (
	EItemFlag_name = map[int32]string{
		0:   "_EItemFlag",
		1:   "SelfSales",
		2:   "FreeDelivery",
		4:   "Recommend",
		8:   "Exchange",
		16:  "Gift",
		32:  "Affiliate",
		64:  "NewOnShelve",
		128: "HotSales",
		256: "SelfDelivery",
	}
	EItemFlag_value = map[string]int32{
		"_EItemFlag":   0,
		"SelfSales":    1,
		"FreeDelivery": 2,
		"Recommend":    4,
		"Exchange":     8,
		"Gift":         16,
		"Affiliate":    32,
		"NewOnShelve":  64,
		"HotSales":     128,
		"SelfDelivery": 256,
	}
)

func (x EItemFlag) Enum() *EItemFlag {
	p := new(EItemFlag)
	*p = x
	return p
}

func (x EItemFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EItemFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_message_item_dto_proto_enumTypes[1].Descriptor()
}

func (EItemFlag) Type() protoreflect.EnumType {
	return &file_message_item_dto_proto_enumTypes[1]
}

func (x EItemFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EItemFlag.Descriptor instead.
func (EItemFlag) EnumDescriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{1}
}

type SkuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	SkuId  int64 `protobuf:"varint,2,opt,name=skuId,proto3" json:"skuId"`
}

func (x *SkuId) Reset() {
	*x = SkuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuId) ProtoMessage() {}

func (x *SkuId) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuId.ProtoReflect.Descriptor instead.
func (*SkuId) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{0}
}

func (x *SkuId) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SkuId) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

type GetItemsByLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label  string `protobuf:"bytes,1,opt,name=label,proto3" json:"label"`
	SortBy string `protobuf:"bytes,2,opt,name=sortBy,proto3" json:"sortBy"`
	Begin  int64  `protobuf:"varint,3,opt,name=begin,proto3" json:"begin"`
	End    int64  `protobuf:"varint,4,opt,name=end,proto3" json:"end"`
}

func (x *GetItemsByLabelRequest) Reset() {
	*x = GetItemsByLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsByLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsByLabelRequest) ProtoMessage() {}

func (x *GetItemsByLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsByLabelRequest.ProtoReflect.Descriptor instead.
func (*GetItemsByLabelRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{1}
}

func (x *GetItemsByLabelRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *GetItemsByLabelRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *GetItemsByLabelRequest) GetBegin() int64 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *GetItemsByLabelRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type PagingGoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64               `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*SUnifiedViewItem `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *PagingGoodsResponse) Reset() {
	*x = PagingGoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingGoodsResponse) ProtoMessage() {}

func (x *PagingGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingGoodsResponse.ProtoReflect.Descriptor instead.
func (*PagingGoodsResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{2}
}

func (x *PagingGoodsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingGoodsResponse) GetData() []*SUnifiedViewItem {
	if x != nil {
		return x.Data
	}
	return nil
}

// 保存商品请求
type GetItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
}

func (x *GetItemRequest) Reset() {
	*x = GetItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemRequest) ProtoMessage() {}

func (x *GetItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemRequest.ProtoReflect.Descriptor instead.
func (*GetItemRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{3}
}

func (x *GetItemRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

// 获取商品请求
type GetItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int64 `protobuf:"varint,1,opt,name=categoryId,proto3" json:"categoryId"`
	Begin      int64 `protobuf:"varint,2,opt,name=begin,proto3" json:"begin"`
	End        int64 `protobuf:"varint,3,opt,name=end,proto3" json:"end"`
	// 是否随机
	Random bool   `protobuf:"varint,4,opt,name=random,proto3" json:"random"`
	Where  string `protobuf:"bytes,5,opt,name=where,proto3" json:"where"`
}

func (x *GetItemsRequest) Reset() {
	*x = GetItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemsRequest) ProtoMessage() {}

func (x *GetItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemsRequest.ProtoReflect.Descriptor instead.
func (*GetItemsRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{4}
}

func (x *GetItemsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GetItemsRequest) GetBegin() int64 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *GetItemsRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *GetItemsRequest) GetRandom() bool {
	if x != nil {
		return x.Random
	}
	return false
}

func (x *GetItemsRequest) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

// 简单的商品信息
type SGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	ProductId  int64 `protobuf:"varint,2,opt,name=productId,proto3" json:"productId"`
	VendorId   int64 `protobuf:"varint,3,opt,name=vendorId,proto3" json:"vendorId"`
	ShopId     int64 `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId"`
	CategoryId int32 `protobuf:"varint,5,opt,name=categoryId,proto3" json:"categoryId"`
	// 标题
	Title      string `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	ShortTitle string `protobuf:"bytes,7,opt,name=shortTitle,proto3" json:"shortTitle"`
	// 货号
	GoodsNo string `protobuf:"bytes,8,opt,name=goodsNo,proto3" json:"goodsNo"`
	Image   string `protobuf:"bytes,9,opt,name=image,proto3" json:"image"`
	// 定价
	OriginPrice int64 `protobuf:"varint,10,opt,name=originPrice,proto3" json:"originPrice"`
	// 销售价
	Price int64 `protobuf:"varint,11,opt,name=price,proto3" json:"price"`
	// 促销价
	PromPrice int64 `protobuf:"varint,12,opt,name=promPrice,proto3" json:"promPrice"`
	// 价格区间
	PriceRange string `protobuf:"bytes,13,opt,name=priceRange,proto3" json:"priceRange"`
	GoodsId    int64  `protobuf:"varint,14,opt,name=goodsId,proto3" json:"goodsId"`
	SkuId      int64  `protobuf:"varint,15,opt,name=skuId,proto3" json:"skuId"`
	// 商品标志
	ItemFlag int32 `protobuf:"varint,17,opt,name=itemFlag,proto3" json:"itemFlag"`
	// 库存
	StockNum int32 `protobuf:"varint,18,opt,name=stockNum,proto3" json:"stockNum"`
	// 已售件数
	SaleNum int32 `protobuf:"varint,19,opt,name=saleNum,proto3" json:"saleNum"`
	// 品牌编号
	BrandId int64 `protobuf:"varint,20,opt,name=brandId,proto3" json:"brandId"`
	// 商品编码
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code"`
}

func (x *SGoods) Reset() {
	*x = SGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SGoods) ProtoMessage() {}

func (x *SGoods) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SGoods.ProtoReflect.Descriptor instead.
func (*SGoods) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{5}
}

func (x *SGoods) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SGoods) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SGoods) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SGoods) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SGoods) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SGoods) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SGoods) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *SGoods) GetGoodsNo() string {
	if x != nil {
		return x.GoodsNo
	}
	return ""
}

func (x *SGoods) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SGoods) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *SGoods) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SGoods) GetPromPrice() int64 {
	if x != nil {
		return x.PromPrice
	}
	return 0
}

func (x *SGoods) GetPriceRange() string {
	if x != nil {
		return x.PriceRange
	}
	return ""
}

func (x *SGoods) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *SGoods) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SGoods) GetItemFlag() int32 {
	if x != nil {
		return x.ItemFlag
	}
	return 0
}

func (x *SGoods) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *SGoods) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

func (x *SGoods) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SGoods) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// * 产品属性
type SAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 属性编号
	AttrId int64 `protobuf:"varint,2,opt,name=attrId,proto3" json:"attrId"`
	// 属性值
	AttrData string `protobuf:"bytes,3,opt,name=attrData,proto3" json:"attrData"`
	// 属性文本
	AttrWord string `protobuf:"bytes,4,opt,name=attrWord,proto3" json:"attrWord"`
}

func (x *SAttr) Reset() {
	*x = SAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAttr) ProtoMessage() {}

func (x *SAttr) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAttr.ProtoReflect.Descriptor instead.
func (*SAttr) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{6}
}

func (x *SAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SAttr) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SAttr) GetAttrData() string {
	if x != nil {
		return x.AttrData
	}
	return ""
}

func (x *SAttr) GetAttrWord() string {
	if x != nil {
		return x.AttrWord
	}
	return ""
}

// * SKU
type SSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId       int64  `protobuf:"varint,1,opt,name=skuId,proto3" json:"skuId"`
	ItemId      int64  `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId"`
	ProductId   int64  `protobuf:"varint,3,opt,name=productId,proto3" json:"productId"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Image       string `protobuf:"bytes,5,opt,name=image,proto3" json:"image"`
	SpecData    string `protobuf:"bytes,6,opt,name=specData,proto3" json:"specData"`
	SpecWord    string `protobuf:"bytes,7,opt,name=specWord,proto3" json:"specWord"`
	Code        string `protobuf:"bytes,8,opt,name=code,proto3" json:"code"`
	OriginPrice int64  `protobuf:"varint,9,opt,name=originPrice,proto3" json:"originPrice"`
	Price       int64  `protobuf:"varint,10,opt,name=price,proto3" json:"price"`
	Cost        int64  `protobuf:"varint,11,opt,name=cost,proto3" json:"cost"`
	Weight      int32  `protobuf:"varint,12,opt,name=weight,proto3" json:"weight"`
	Bulk        int32  `protobuf:"varint,13,opt,name=bulk,proto3" json:"bulk"`
	Stock       int32  `protobuf:"varint,14,opt,name=stock,proto3" json:"stock"`
	SaleNum     int32  `protobuf:"varint,15,opt,name=saleNum,proto3" json:"saleNum"`
}

func (x *SSku) Reset() {
	*x = SSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSku) ProtoMessage() {}

func (x *SSku) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSku.ProtoReflect.Descriptor instead.
func (*SSku) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{7}
}

func (x *SSku) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SSku) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SSku) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SSku) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SSku) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SSku) GetSpecData() string {
	if x != nil {
		return x.SpecData
	}
	return ""
}

func (x *SSku) GetSpecWord() string {
	if x != nil {
		return x.SpecWord
	}
	return ""
}

func (x *SSku) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SSku) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *SSku) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SSku) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *SSku) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SSku) GetBulk() int32 {
	if x != nil {
		return x.Bulk
	}
	return 0
}

func (x *SSku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *SSku) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

// 保存商品请求
type SaveItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	ProductId  int64 `protobuf:"varint,2,opt,name=productId,proto3" json:"productId"`
	VendorId   int64 `protobuf:"varint,3,opt,name=vendorId,proto3" json:"vendorId"`
	ShopId     int64 `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId"`
	CategoryId int64 `protobuf:"varint,5,opt,name=categoryId,proto3" json:"categoryId"`
	// 标题
	Title      string `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	ShortTitle string `protobuf:"bytes,7,opt,name=shortTitle,proto3" json:"shortTitle"`
	// 货号
	GoodsNo string `protobuf:"bytes,8,opt,name=goodsNo,proto3" json:"goodsNo"`
	// 图片
	Images []string `protobuf:"bytes,9,rep,name=images,proto3" json:"images"`
	// 视频介绍
	IntroVideo string `protobuf:"bytes,10,opt,name=introVideo,proto3" json:"introVideo"`
	// 定价
	OriginPrice int64 `protobuf:"varint,11,opt,name=originPrice,proto3" json:"originPrice"`
	// 成本
	Cost int64 `protobuf:"varint,12,opt,name=cost,proto3" json:"cost"`
	// 销售价
	Price int64 `protobuf:"varint,13,opt,name=price,proto3" json:"price"`
	// 促销价
	PromPrice int64 `protobuf:"varint,14,opt,name=promPrice,proto3" json:"promPrice"`
	// 价格区间
	PriceRange string `protobuf:"bytes,15,opt,name=priceRange,proto3" json:"priceRange"`
	GoodsId    int64  `protobuf:"varint,16,opt,name=goodsId,proto3" json:"goodsId"`
	SkuId      int64  `protobuf:"varint,17,opt,name=skuId,proto3" json:"skuId"`
	// 库存
	StockNum int32 `protobuf:"varint,18,opt,name=stockNum,proto3" json:"stockNum"`
	// 已售件数
	SaleNum int32 `protobuf:"varint,19,opt,name=saleNum,proto3" json:"saleNum"`
	// 促销标志
	FlagData *SItemFlagData `protobuf:"bytes,20,opt,name=flagData,proto3" json:"flagData"`
	// todo: 对比SGoods多出的字段
	BrandId     int64          `protobuf:"zigzag64,21,opt,name=brandId,proto3" json:"brandId"`
	Code        string         `protobuf:"bytes,22,opt,name=code,proto3" json:"code"`
	ExpressTid  int64          `protobuf:"varint,23,opt,name=expressTid,proto3" json:"expressTid"`
	SkuArray    []*SSku        `protobuf:"bytes,24,rep,name=skuArray,proto3" json:"skuArray"`
	LevelPrices []*SLevelPrice `protobuf:"bytes,25,rep,name=levelPrices,proto3" json:"levelPrices"`
	// 商品购物保障
	SafeguardFlag int32 `protobuf:"varint,26,opt,name=safeguardFlag,proto3" json:"safeguardFlag"`
}

func (x *SaveItemRequest) Reset() {
	*x = SaveItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveItemRequest) ProtoMessage() {}

func (x *SaveItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveItemRequest.ProtoReflect.Descriptor instead.
func (*SaveItemRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{8}
}

func (x *SaveItemRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SaveItemRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SaveItemRequest) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SaveItemRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SaveItemRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SaveItemRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveItemRequest) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *SaveItemRequest) GetGoodsNo() string {
	if x != nil {
		return x.GoodsNo
	}
	return ""
}

func (x *SaveItemRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *SaveItemRequest) GetIntroVideo() string {
	if x != nil {
		return x.IntroVideo
	}
	return ""
}

func (x *SaveItemRequest) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *SaveItemRequest) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *SaveItemRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SaveItemRequest) GetPromPrice() int64 {
	if x != nil {
		return x.PromPrice
	}
	return 0
}

func (x *SaveItemRequest) GetPriceRange() string {
	if x != nil {
		return x.PriceRange
	}
	return ""
}

func (x *SaveItemRequest) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *SaveItemRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SaveItemRequest) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *SaveItemRequest) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

func (x *SaveItemRequest) GetFlagData() *SItemFlagData {
	if x != nil {
		return x.FlagData
	}
	return nil
}

func (x *SaveItemRequest) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SaveItemRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SaveItemRequest) GetExpressTid() int64 {
	if x != nil {
		return x.ExpressTid
	}
	return 0
}

func (x *SaveItemRequest) GetSkuArray() []*SSku {
	if x != nil {
		return x.SkuArray
	}
	return nil
}

func (x *SaveItemRequest) GetLevelPrices() []*SLevelPrice {
	if x != nil {
		return x.LevelPrices
	}
	return nil
}

func (x *SaveItemRequest) GetSafeguardFlag() int32 {
	if x != nil {
		return x.SafeguardFlag
	}
	return 0
}

// 商品数据响应
type SItemDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	// 产品编号
	ProductId int64 `protobuf:"varint,2,opt,name=productId,proto3" json:"productId"`
	// 供货商编号
	VendorId int64 `protobuf:"varint,3,opt,name=vendorId,proto3" json:"vendorId"`
	// 店铺编号
	ShopId int64 `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId"`
	// 分类编号
	CategoryId int64 `protobuf:"varint,5,opt,name=categoryId,proto3" json:"categoryId"`
	// 标题
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	// 副标题
	ShortTitle string `protobuf:"bytes,7,opt,name=shortTitle,proto3" json:"shortTitle"`
	// 视频介绍
	IntroVideo string `protobuf:"bytes,8,opt,name=introVideo,proto3" json:"introVideo"`
	// 货号
	GoodsNo string `protobuf:"bytes,9,opt,name=goodsNo,proto3" json:"goodsNo"`
	// 主图
	Thumbnail string `protobuf:"bytes,10,opt,name=thumbnail,proto3" json:"thumbnail"`
	// 图片
	Images []string `protobuf:"bytes,11,rep,name=images,proto3" json:"images"`
	// 成本价
	Cost int64 `protobuf:"varint,12,opt,name=cost,proto3" json:"cost"`
	// 建议零售价
	OriginPrice int64 `protobuf:"varint,13,opt,name=originPrice,proto3" json:"originPrice"`
	// 销售价
	Price int64 `protobuf:"varint,14,opt,name=price,proto3" json:"price"`
	// 价格区间
	PriceRange string `protobuf:"bytes,15,opt,name=priceRange,proto3" json:"priceRange"`
	// SkuId
	SkuId int64 `protobuf:"varint,16,opt,name=skuId,proto3" json:"skuId"`
	// 促销标志
	ItemFlag int32 `protobuf:"varint,17,opt,name=itemFlag,proto3" json:"itemFlag"`
	// 库存
	StockNum int32 `protobuf:"varint,18,opt,name=stockNum,proto3" json:"stockNum"`
	// 已售件数
	SaleNum int32 `protobuf:"varint,19,opt,name=saleNum,proto3" json:"saleNum"`
	// 上架状态
	ShelveState int32 `protobuf:"varint,20,opt,name=shelveState,proto3" json:"shelveState"`
	// 审核状态
	ReviewStatus int32 `protobuf:"varint,21,opt,name=reviewStatus,proto3" json:"reviewStatus"`
	// 审核意见
	ReviewRemark string `protobuf:"bytes,22,opt,name=reviewRemark,proto3" json:"reviewRemark"`
	// todo: 对比SGoods多出的字段
	// 品牌编号
	BrandId int64 `protobuf:"varint,23,opt,name=brandId,proto3" json:"brandId"`
	// 商品编码
	Code string `protobuf:"bytes,24,opt,name=code,proto3" json:"code"`
	// 运费模板
	ExpressTid int64 `protobuf:"varint,25,opt,name=expressTid,proto3" json:"expressTid"`
	// 商品属性
	AttrArray []*SAttr `protobuf:"bytes,26,rep,name=attrArray,proto3" json:"attrArray"`
	// Sku数据
	SkuArray []*SSku `protobuf:"bytes,27,rep,name=skuArray,proto3" json:"skuArray"`
	// 规格
	SpecOptions []*SSpecOption `protobuf:"bytes,28,rep,name=specOptions,proto3" json:"specOptions"`
	// 商品标志数据
	FlagData *SItemFlagData `protobuf:"bytes,29,opt,name=flagData,proto3" json:"flagData"`
	// 会员价
	LevelPrices []*SLevelPrice `protobuf:"bytes,30,rep,name=levelPrices,proto3" json:"levelPrices"`
	// 商品购物保障
	SafeguardFlag int32 `protobuf:"varint,31,opt,name=safeguardFlag,proto3" json:"safeguardFlag"`
}

func (x *SItemDataResponse) Reset() {
	*x = SItemDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SItemDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SItemDataResponse) ProtoMessage() {}

func (x *SItemDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SItemDataResponse.ProtoReflect.Descriptor instead.
func (*SItemDataResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{9}
}

func (x *SItemDataResponse) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SItemDataResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SItemDataResponse) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SItemDataResponse) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SItemDataResponse) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SItemDataResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SItemDataResponse) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *SItemDataResponse) GetIntroVideo() string {
	if x != nil {
		return x.IntroVideo
	}
	return ""
}

func (x *SItemDataResponse) GetGoodsNo() string {
	if x != nil {
		return x.GoodsNo
	}
	return ""
}

func (x *SItemDataResponse) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *SItemDataResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *SItemDataResponse) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *SItemDataResponse) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *SItemDataResponse) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SItemDataResponse) GetPriceRange() string {
	if x != nil {
		return x.PriceRange
	}
	return ""
}

func (x *SItemDataResponse) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SItemDataResponse) GetItemFlag() int32 {
	if x != nil {
		return x.ItemFlag
	}
	return 0
}

func (x *SItemDataResponse) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *SItemDataResponse) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

func (x *SItemDataResponse) GetShelveState() int32 {
	if x != nil {
		return x.ShelveState
	}
	return 0
}

func (x *SItemDataResponse) GetReviewStatus() int32 {
	if x != nil {
		return x.ReviewStatus
	}
	return 0
}

func (x *SItemDataResponse) GetReviewRemark() string {
	if x != nil {
		return x.ReviewRemark
	}
	return ""
}

func (x *SItemDataResponse) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SItemDataResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SItemDataResponse) GetExpressTid() int64 {
	if x != nil {
		return x.ExpressTid
	}
	return 0
}

func (x *SItemDataResponse) GetAttrArray() []*SAttr {
	if x != nil {
		return x.AttrArray
	}
	return nil
}

func (x *SItemDataResponse) GetSkuArray() []*SSku {
	if x != nil {
		return x.SkuArray
	}
	return nil
}

func (x *SItemDataResponse) GetSpecOptions() []*SSpecOption {
	if x != nil {
		return x.SpecOptions
	}
	return nil
}

func (x *SItemDataResponse) GetFlagData() *SItemFlagData {
	if x != nil {
		return x.FlagData
	}
	return nil
}

func (x *SItemDataResponse) GetLevelPrices() []*SLevelPrice {
	if x != nil {
		return x.LevelPrices
	}
	return nil
}

func (x *SItemDataResponse) GetSafeguardFlag() int32 {
	if x != nil {
		return x.SafeguardFlag
	}
	return 0
}

// 商品标志
type SItemFlagData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 新品
	IsNewOnShelve bool `protobuf:"varint,1,opt,name=isNewOnShelve,proto3" json:"isNewOnShelve"`
	// 热销商品
	IsHotSales bool `protobuf:"varint,2,opt,name=isHotSales,proto3" json:"isHotSales"`
	// 推荐商品
	IsRecommend bool `protobuf:"varint,3,opt,name=isRecommend,proto3" json:"isRecommend"`
	// 是否允许兑换
	IsExchange bool `protobuf:"varint,4,opt,name=isExchange,proto3" json:"isExchange"`
	// 赠品
	IsGift bool `protobuf:"varint,5,opt,name=isGift,proto3" json:"isGift"`
	// 是否分销
	IsAffiliate bool `protobuf:"varint,6,opt,name=isAffiliate,proto3" json:"isAffiliate"`
	// 自营商品
	IsSelfSales bool `protobuf:"varint,7,opt,name=isSelfSales,proto3" json:"isSelfSales"`
	// 免邮
	IsFreeDelivery bool `protobuf:"varint,8,opt,name=isFreeDelivery,proto3" json:"isFreeDelivery"`
	// 平台配送
	IsSelfDelivery bool `protobuf:"varint,9,opt,name=isSelfDelivery,proto3" json:"isSelfDelivery"`
}

func (x *SItemFlagData) Reset() {
	*x = SItemFlagData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SItemFlagData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SItemFlagData) ProtoMessage() {}

func (x *SItemFlagData) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SItemFlagData.ProtoReflect.Descriptor instead.
func (*SItemFlagData) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{10}
}

func (x *SItemFlagData) GetIsNewOnShelve() bool {
	if x != nil {
		return x.IsNewOnShelve
	}
	return false
}

func (x *SItemFlagData) GetIsHotSales() bool {
	if x != nil {
		return x.IsHotSales
	}
	return false
}

func (x *SItemFlagData) GetIsRecommend() bool {
	if x != nil {
		return x.IsRecommend
	}
	return false
}

func (x *SItemFlagData) GetIsExchange() bool {
	if x != nil {
		return x.IsExchange
	}
	return false
}

func (x *SItemFlagData) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *SItemFlagData) GetIsAffiliate() bool {
	if x != nil {
		return x.IsAffiliate
	}
	return false
}

func (x *SItemFlagData) GetIsSelfSales() bool {
	if x != nil {
		return x.IsSelfSales
	}
	return false
}

func (x *SItemFlagData) GetIsFreeDelivery() bool {
	if x != nil {
		return x.IsFreeDelivery
	}
	return false
}

func (x *SItemFlagData) GetIsSelfDelivery() bool {
	if x != nil {
		return x.IsSelfDelivery
	}
	return false
}

// 统一的商品显示对象
type SUnifiedViewItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId     int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	ProductId  int64 `protobuf:"varint,2,opt,name=productId,proto3" json:"productId"`
	VendorId   int64 `protobuf:"varint,3,opt,name=vendorId,proto3" json:"vendorId"`
	ShopId     int64 `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId"`
	CategoryId int64 `protobuf:"varint,5,opt,name=categoryId,proto3" json:"categoryId"`
	// 标题
	Title      string `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	ShortTitle string `protobuf:"bytes,7,opt,name=shortTitle,proto3" json:"shortTitle"`
	// 货号
	GoodsNo string `protobuf:"bytes,8,opt,name=goodsNo,proto3" json:"goodsNo"`
	// 图片
	Image string `protobuf:"bytes,9,opt,name=image,proto3" json:"image"`
	// 图片
	Images []string `protobuf:"bytes,10,rep,name=images,proto3" json:"images"`
	// 定价
	OriginPrice int64 `protobuf:"varint,11,opt,name=originPrice,proto3" json:"originPrice"`
	// 销售价
	Price int64 `protobuf:"varint,12,opt,name=price,proto3" json:"price"`
	// 促销价
	PromPrice int64 `protobuf:"varint,13,opt,name=promPrice,proto3" json:"promPrice"`
	// 价格区间
	PriceRange string `protobuf:"bytes,14,opt,name=priceRange,proto3" json:"priceRange"`
	GoodsId    int64  `protobuf:"varint,15,opt,name=goodsId,proto3" json:"goodsId"`
	SkuId      int64  `protobuf:"varint,16,opt,name=skuId,proto3" json:"skuId"`
	// 商品标志
	ItemFlag int32 `protobuf:"varint,18,opt,name=itemFlag,proto3" json:"itemFlag"`
	// 库存
	StockNum int32 `protobuf:"varint,19,opt,name=stockNum,proto3" json:"stockNum"`
	// 已售件数
	SaleNum int32 `protobuf:"varint,20,opt,name=saleNum,proto3" json:"saleNum"`
	// 标志数据
	FlagData *SItemFlagData `protobuf:"bytes,21,opt,name=flagData,proto3" json:"flagData"`
	// todo: 对比SGoods多出的字段
	BrandId      int64             `protobuf:"zigzag64,22,opt,name=brandId,proto3" json:"brandId"`
	Code         string            `protobuf:"bytes,23,opt,name=code,proto3" json:"code"`
	ExpressTid   int64             `protobuf:"varint,24,opt,name=expressTid,proto3" json:"expressTid"`
	ShelveState  int32             `protobuf:"zigzag32,25,opt,name=shelveState,proto3" json:"shelveState"`
	ReviewStatus int32             `protobuf:"zigzag32,26,opt,name=reviewStatus,proto3" json:"reviewStatus"`
	UpdateTime   int64             `protobuf:"zigzag64,27,opt,name=updateTime,proto3" json:"updateTime"`
	SkuArray     []*SSku           `protobuf:"bytes,28,rep,name=skuArray,proto3" json:"skuArray"`
	LevelPrices  []*SLevelPrice    `protobuf:"bytes,29,rep,name=levelPrices,proto3" json:"levelPrices"`
	ViewData     *SItemViewData    `protobuf:"bytes,30,opt,name=viewData,proto3" json:"viewData"`
	Data         map[string]string `protobuf:"bytes,31,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SUnifiedViewItem) Reset() {
	*x = SUnifiedViewItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SUnifiedViewItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SUnifiedViewItem) ProtoMessage() {}

func (x *SUnifiedViewItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SUnifiedViewItem.ProtoReflect.Descriptor instead.
func (*SUnifiedViewItem) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{11}
}

func (x *SUnifiedViewItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SUnifiedViewItem) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *SUnifiedViewItem) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *SUnifiedViewItem) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SUnifiedViewItem) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SUnifiedViewItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SUnifiedViewItem) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *SUnifiedViewItem) GetGoodsNo() string {
	if x != nil {
		return x.GoodsNo
	}
	return ""
}

func (x *SUnifiedViewItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SUnifiedViewItem) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *SUnifiedViewItem) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *SUnifiedViewItem) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SUnifiedViewItem) GetPromPrice() int64 {
	if x != nil {
		return x.PromPrice
	}
	return 0
}

func (x *SUnifiedViewItem) GetPriceRange() string {
	if x != nil {
		return x.PriceRange
	}
	return ""
}

func (x *SUnifiedViewItem) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *SUnifiedViewItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SUnifiedViewItem) GetItemFlag() int32 {
	if x != nil {
		return x.ItemFlag
	}
	return 0
}

func (x *SUnifiedViewItem) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *SUnifiedViewItem) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

func (x *SUnifiedViewItem) GetFlagData() *SItemFlagData {
	if x != nil {
		return x.FlagData
	}
	return nil
}

func (x *SUnifiedViewItem) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SUnifiedViewItem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SUnifiedViewItem) GetExpressTid() int64 {
	if x != nil {
		return x.ExpressTid
	}
	return 0
}

func (x *SUnifiedViewItem) GetShelveState() int32 {
	if x != nil {
		return x.ShelveState
	}
	return 0
}

func (x *SUnifiedViewItem) GetReviewStatus() int32 {
	if x != nil {
		return x.ReviewStatus
	}
	return 0
}

func (x *SUnifiedViewItem) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SUnifiedViewItem) GetSkuArray() []*SSku {
	if x != nil {
		return x.SkuArray
	}
	return nil
}

func (x *SUnifiedViewItem) GetLevelPrices() []*SLevelPrice {
	if x != nil {
		return x.LevelPrices
	}
	return nil
}

func (x *SUnifiedViewItem) GetViewData() *SItemViewData {
	if x != nil {
		return x.ViewData
	}
	return nil
}

func (x *SUnifiedViewItem) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SItemViewData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品详情
	Details string `protobuf:"bytes,1,opt,name=details,proto3" json:"details"`
	// 缩略图
	Thumbs []string `protobuf:"bytes,2,rep,name=thumbs,proto3" json:"thumbs"`
	// 产品图片
	Images []string `protobuf:"bytes,3,rep,name=images,proto3" json:"images"`
	// SKU选择HTML
	SkuHtml string `protobuf:"bytes,4,opt,name=skuHtml,proto3" json:"skuHtml"`
	// SKU JSON数据
	SkuJson string `protobuf:"bytes,5,opt,name=skuJson,proto3" json:"skuJson"` //todo: 删除?
}

func (x *SItemViewData) Reset() {
	*x = SItemViewData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SItemViewData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SItemViewData) ProtoMessage() {}

func (x *SItemViewData) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SItemViewData.ProtoReflect.Descriptor instead.
func (*SItemViewData) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{12}
}

func (x *SItemViewData) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *SItemViewData) GetThumbs() []string {
	if x != nil {
		return x.Thumbs
	}
	return nil
}

func (x *SItemViewData) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *SItemViewData) GetSkuHtml() string {
	if x != nil {
		return x.SkuHtml
	}
	return ""
}

func (x *SItemViewData) GetSkuJson() string {
	if x != nil {
		return x.SkuJson
	}
	return ""
}

// 保存商品响应
type SaveItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误状态码,如为0表示成功
	ErrCode int32 `protobuf:"zigzag32,1,opt,name=errCode,proto3" json:"errCode"`
	// 消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 商品编号
	ItemId int64 `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId"`
	// 商品标志
	ItemFlag int32 `protobuf:"varint,4,opt,name=itemFlag,proto3" json:"itemFlag"`
}

func (x *SaveItemResponse) Reset() {
	*x = SaveItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveItemResponse) ProtoMessage() {}

func (x *SaveItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveItemResponse.ProtoReflect.Descriptor instead.
func (*SaveItemResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{13}
}

func (x *SaveItemResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveItemResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveItemResponse) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SaveItemResponse) GetItemFlag() int32 {
	if x != nil {
		return x.ItemFlag
	}
	return 0
}

type ItemLabelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SItemLabel `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *ItemLabelListResponse) Reset() {
	*x = ItemLabelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemLabelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemLabelListResponse) ProtoMessage() {}

func (x *ItemLabelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemLabelListResponse.ProtoReflect.Descriptor instead.
func (*ItemLabelListResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{14}
}

func (x *ItemLabelListResponse) GetValue() []*SItemLabel {
	if x != nil {
		return x.Value
	}
	return nil
}

// 销售标签
type SItemLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 标签名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 标签代码
	TagCode string `protobuf:"bytes,5,opt,name=tagCode,proto3" json:"tagCode"`
	// 商品的遮盖图
	LabelImage string `protobuf:"bytes,3,opt,name=labelImage,proto3" json:"labelImage"`
	// 是否启用
	Enabled bool `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled"`
}

func (x *SItemLabel) Reset() {
	*x = SItemLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SItemLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SItemLabel) ProtoMessage() {}

func (x *SItemLabel) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SItemLabel.ProtoReflect.Descriptor instead.
func (*SItemLabel) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{15}
}

func (x *SItemLabel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SItemLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SItemLabel) GetTagCode() string {
	if x != nil {
		return x.TagCode
	}
	return ""
}

func (x *SItemLabel) GetLabelImage() string {
	if x != nil {
		return x.LabelImage
	}
	return ""
}

func (x *SItemLabel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// 商品和快照请求
type GetItemAndSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	// 是否请求快照
	Snapshot bool `protobuf:"varint,2,opt,name=snapshot,proto3" json:"snapshot"`
	// 是否选择
	ReturnSkuHtml bool `protobuf:"varint,3,opt,name=returnSkuHtml,proto3" json:"returnSkuHtml"`
	// 是否返回SkuJson
	ReturnSkuJson bool `protobuf:"varint,4,opt,name=returnSkuJson,proto3" json:"returnSkuJson"`
}

func (x *GetItemAndSnapshotRequest) Reset() {
	*x = GetItemAndSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemAndSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemAndSnapshotRequest) ProtoMessage() {}

func (x *GetItemAndSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemAndSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetItemAndSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{16}
}

func (x *GetItemAndSnapshotRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetItemAndSnapshotRequest) GetSnapshot() bool {
	if x != nil {
		return x.Snapshot
	}
	return false
}

func (x *GetItemAndSnapshotRequest) GetReturnSkuHtml() bool {
	if x != nil {
		return x.ReturnSkuHtml
	}
	return false
}

func (x *GetItemAndSnapshotRequest) GetReturnSkuJson() bool {
	if x != nil {
		return x.ReturnSkuJson
	}
	return false
}

// 商品快照(针对商品)
type ItemSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	// 商品编码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 产品编号
	ProductId int64 `protobuf:"varint,3,opt,name=productId,proto3" json:"productId"`
	// 分类编号
	CategoryId int64 `protobuf:"varint,4,opt,name=categoryId,proto3" json:"categoryId"`
	// 供货商编号
	VendorId int64 `protobuf:"varint,5,opt,name=vendorId,proto3" json:"vendorId"`
	// 店铺编号
	ShopId int64 `protobuf:"varint,7,opt,name=shopId,proto3" json:"shopId"`
	// 编号
	BrandId int64 `protobuf:"varint,6,opt,name=brandId,proto3" json:"brandId"`
	// 编号分类编号
	ShopCatId int64 `protobuf:"varint,8,opt,name=shopCatId,proto3" json:"shopCatId"`
	// 运费模板
	ExpressTid int64 `protobuf:"varint,9,opt,name=expressTid,proto3" json:"expressTid"`
	// 商品标题
	Title string `protobuf:"bytes,11,opt,name=title,proto3" json:"title"`
	// 短标题
	ShortTitle string `protobuf:"bytes,12,opt,name=shortTitle,proto3" json:"shortTitle"`
	// 产品编码
	ProductCode string `protobuf:"bytes,13,opt,name=productCode,proto3" json:"productCode"`
	// 商品图片
	Images []string `protobuf:"bytes,14,rep,name=images,proto3" json:"images"`
	// 价格区间
	PriceRange string `protobuf:"bytes,16,opt,name=priceRange,proto3" json:"priceRange"`
	// 默认SKU
	SkuId int64 `protobuf:"varint,17,opt,name=skuId,proto3" json:"skuId"`
	// 售价
	Price int64 `protobuf:"varint,18,opt,name=price,proto3" json:"price"`
	// 零售价
	OriginPrice int64 `protobuf:"varint,19,opt,name=originPrice,proto3" json:"originPrice"`
	// 库存数量
	StockNum int32 `protobuf:"varint,20,opt,name=stockNum,proto3" json:"stockNum"`
	// 已销售数量
	SaleNum int32 `protobuf:"varint,21,opt,name=saleNum,proto3" json:"saleNum"`
	// 商品详情
	Description string `protobuf:"bytes,22,opt,name=description,proto3" json:"description"`
	// 商品属性
	AttrArray []*SAttrValue `protobuf:"bytes,23,rep,name=attrArray,proto3" json:"attrArray"`
	// SKU
	SkuArray []*SSku `protobuf:"bytes,24,rep,name=skuArray,proto3" json:"skuArray"`
	// 规格
	SpecOptions []*SSpecOption `protobuf:"bytes,25,rep,name=specOptions,proto3" json:"specOptions"`
	// SkuJson
	SkuJson string `protobuf:"bytes,26,opt,name=skuJson,proto3" json:"skuJson"`
	// 商品标志数据
	FlagData *SItemFlagData `protobuf:"bytes,27,opt,name=flagData,proto3" json:"flagData"`
	// 会员价
	LevelPrices []*SLevelPrice `protobuf:"bytes,28,rep,name=levelPrices,proto3" json:"levelPrices"`
	// 视频介绍
	IntroVideo string `protobuf:"bytes,29,opt,name=introVideo,proto3" json:"introVideo"`
	// 商品购物保障
	SafeguardFlag int32 `protobuf:"varint,30,opt,name=safeguardFlag,proto3" json:"safeguardFlag"`
	// 返回Sku-HTML
	SkuHtml string `protobuf:"bytes,31,opt,name=skuHtml,proto3" json:"skuHtml"`
}

func (x *ItemSnapshotResponse) Reset() {
	*x = ItemSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSnapshotResponse) ProtoMessage() {}

func (x *ItemSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSnapshotResponse.ProtoReflect.Descriptor instead.
func (*ItemSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{17}
}

func (x *ItemSnapshotResponse) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ItemSnapshotResponse) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetVendorId() int64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetShopCatId() int64 {
	if x != nil {
		return x.ShopCatId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetExpressTid() int64 {
	if x != nil {
		return x.ExpressTid
	}
	return 0
}

func (x *ItemSnapshotResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ItemSnapshotResponse) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *ItemSnapshotResponse) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *ItemSnapshotResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ItemSnapshotResponse) GetPriceRange() string {
	if x != nil {
		return x.PriceRange
	}
	return ""
}

func (x *ItemSnapshotResponse) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ItemSnapshotResponse) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ItemSnapshotResponse) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *ItemSnapshotResponse) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *ItemSnapshotResponse) GetSaleNum() int32 {
	if x != nil {
		return x.SaleNum
	}
	return 0
}

func (x *ItemSnapshotResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ItemSnapshotResponse) GetAttrArray() []*SAttrValue {
	if x != nil {
		return x.AttrArray
	}
	return nil
}

func (x *ItemSnapshotResponse) GetSkuArray() []*SSku {
	if x != nil {
		return x.SkuArray
	}
	return nil
}

func (x *ItemSnapshotResponse) GetSpecOptions() []*SSpecOption {
	if x != nil {
		return x.SpecOptions
	}
	return nil
}

func (x *ItemSnapshotResponse) GetSkuJson() string {
	if x != nil {
		return x.SkuJson
	}
	return ""
}

func (x *ItemSnapshotResponse) GetFlagData() *SItemFlagData {
	if x != nil {
		return x.FlagData
	}
	return nil
}

func (x *ItemSnapshotResponse) GetLevelPrices() []*SLevelPrice {
	if x != nil {
		return x.LevelPrices
	}
	return nil
}

func (x *ItemSnapshotResponse) GetIntroVideo() string {
	if x != nil {
		return x.IntroVideo
	}
	return ""
}

func (x *ItemSnapshotResponse) GetSafeguardFlag() int32 {
	if x != nil {
		return x.SafeguardFlag
	}
	return 0
}

func (x *ItemSnapshotResponse) GetSkuHtml() string {
	if x != nil {
		return x.SkuHtml
	}
	return ""
}

// * 产品属性值(用于展示详情)
type SAttrValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 属性编号
	AttrId int64 `protobuf:"varint,2,opt,name=attrId,proto3" json:"attrId"`
	// 属性名称
	AttrName string `protobuf:"bytes,3,opt,name=attrName,proto3" json:"attrName"`
	// 属性文本
	AttrValue string `protobuf:"bytes,4,opt,name=attrValue,proto3" json:"attrValue"`
}

func (x *SAttrValue) Reset() {
	*x = SAttrValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAttrValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAttrValue) ProtoMessage() {}

func (x *SAttrValue) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAttrValue.ProtoReflect.Descriptor instead.
func (*SAttrValue) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{18}
}

func (x *SAttrValue) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *SAttrValue) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *SAttrValue) GetAttrValue() string {
	if x != nil {
		return x.AttrValue
	}
	return ""
}

// 商品模型规格
type SSpecOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 规格名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	// 规格项
	Items []*SSpecOptionItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *SSpecOption) Reset() {
	*x = SSpecOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSpecOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSpecOption) ProtoMessage() {}

func (x *SSpecOption) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSpecOption.ProtoReflect.Descriptor instead.
func (*SSpecOption) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{19}
}

func (x *SSpecOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SSpecOption) GetItems() []*SSpecOptionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 商品规格项
type SSpecOptionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label"`
	// 规格项值
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	// 规格项颜色
	Color string `protobuf:"bytes,3,opt,name=color,proto3" json:"color"`
}

func (x *SSpecOptionItem) Reset() {
	*x = SSpecOptionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSpecOptionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSpecOptionItem) ProtoMessage() {}

func (x *SSpecOptionItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSpecOptionItem.ProtoReflect.Descriptor instead.
func (*SSpecOptionItem) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{20}
}

func (x *SSpecOptionItem) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SSpecOptionItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SSpecOptionItem) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// 商品交易快照(针对商品)
type STradeSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 快照编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 商品编号
	ItemId int64 `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId"`
	// 商品SKU编号
	SkuId int64 `protobuf:"varint,3,opt,name=skuId,proto3" json:"skuId"`
	// 快照编码: 商户编号+g商品编号+快照时间戳
	SnapshotKey string `protobuf:"bytes,4,opt,name=snapshotKey,proto3" json:"snapshotKey"`
	// 卖家编号
	SellerId int64 `protobuf:"varint,5,opt,name=sellerId,proto3" json:"sellerId"`
	// 卖家名称
	SellerName string `protobuf:"bytes,6,opt,name=sellerName,proto3" json:"sellerName"`
	// 商品标题
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title"`
	// 货号
	// GoodsNo string `db:"goods_no"`
	// 产品编码
	ProductCode string `protobuf:"bytes,8,opt,name=productCode,proto3" json:"productCode"`
	// SKU
	Sku string `protobuf:"bytes,9,opt,name=sku,proto3" json:"sku"`
	// 图片
	Image string `protobuf:"bytes,10,opt,name=image,proto3" json:"image"`
	// 销售价
	Price int64 `protobuf:"varint,11,opt,name=price,proto3" json:"price"`
	// 快照时间
	CreateTime int64 `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime"`
}

func (x *STradeSnapshot) Reset() {
	*x = STradeSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STradeSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STradeSnapshot) ProtoMessage() {}

func (x *STradeSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STradeSnapshot.ProtoReflect.Descriptor instead.
func (*STradeSnapshot) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{21}
}

func (x *STradeSnapshot) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *STradeSnapshot) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *STradeSnapshot) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *STradeSnapshot) GetSnapshotKey() string {
	if x != nil {
		return x.SnapshotKey
	}
	return ""
}

func (x *STradeSnapshot) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *STradeSnapshot) GetSellerName() string {
	if x != nil {
		return x.SellerName
	}
	return ""
}

func (x *STradeSnapshot) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *STradeSnapshot) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *STradeSnapshot) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *STradeSnapshot) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *STradeSnapshot) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *STradeSnapshot) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 会员价
type SLevelPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 等级
	Level int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	// 价格
	Price int64 `protobuf:"varint,3,opt,name=price,proto3" json:"price"`
	// 限购数量,-1为不限制
	MaxNumber int32 `protobuf:"varint,4,opt,name=maxNumber,proto3" json:"maxNumber"`
	// 是否启用
	Enabled bool `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled"`
}

func (x *SLevelPrice) Reset() {
	*x = SLevelPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLevelPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLevelPrice) ProtoMessage() {}

func (x *SLevelPrice) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLevelPrice.ProtoReflect.Descriptor instead.
func (*SLevelPrice) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{22}
}

func (x *SLevelPrice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SLevelPrice) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SLevelPrice) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SLevelPrice) GetMaxNumber() int32 {
	if x != nil {
		return x.MaxNumber
	}
	return 0
}

func (x *SLevelPrice) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// 获取Sku商品信息
type ItemBySkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ProductId int64 `protobuf:"varint,1,opt,name=productId,proto3" json:"productId"`
	// Sku编号
	SkuId int64 `protobuf:"varint,2,opt,name=skuId,proto3" json:"skuId"`
	// 是否返回额外的信息
	Extra bool `protobuf:"varint,3,opt,name=extra,proto3" json:"extra"`
}

func (x *ItemBySkuRequest) Reset() {
	*x = ItemBySkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBySkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBySkuRequest) ProtoMessage() {}

func (x *ItemBySkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBySkuRequest.ProtoReflect.Descriptor instead.
func (*ItemBySkuRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{23}
}

func (x *ItemBySkuRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ItemBySkuRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ItemBySkuRequest) GetExtra() bool {
	if x != nil {
		return x.Extra
	}
	return false
}

type ItemIllegalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64  `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *ItemIllegalRequest) Reset() {
	*x = ItemIllegalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemIllegalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemIllegalRequest) ProtoMessage() {}

func (x *ItemIllegalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemIllegalRequest.ProtoReflect.Descriptor instead.
func (*ItemIllegalRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{24}
}

func (x *ItemIllegalRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemIllegalRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 商品回收请求
type RecycleItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"varint,1,opt,name=ItemId,proto3" json:"ItemId"`
	// 是否回收或从回收站中撤销
	Recycle bool `protobuf:"varint,2,opt,name=Recycle,proto3" json:"Recycle"`
	// 是否销毁
	IsDestory bool `protobuf:"varint,3,opt,name=IsDestory,proto3" json:"IsDestory"`
}

func (x *RecycleItemRequest) Reset() {
	*x = RecycleItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleItemRequest) ProtoMessage() {}

func (x *RecycleItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleItemRequest.ProtoReflect.Descriptor instead.
func (*RecycleItemRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{25}
}

func (x *RecycleItemRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *RecycleItemRequest) GetRecycle() bool {
	if x != nil {
		return x.Recycle
	}
	return false
}

func (x *RecycleItemRequest) GetIsDestory() bool {
	if x != nil {
		return x.IsDestory
	}
	return false
}

type ItemReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64  `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	Pass   bool   `protobuf:"varint,2,opt,name=pass,proto3" json:"pass"`
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
}

func (x *ItemReviewRequest) Reset() {
	*x = ItemReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemReviewRequest) ProtoMessage() {}

func (x *ItemReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemReviewRequest.ProtoReflect.Descriptor instead.
func (*ItemReviewRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{26}
}

func (x *ItemReviewRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemReviewRequest) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

func (x *ItemReviewRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SaveLevelPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64          `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	Value  []*SLevelPrice `protobuf:"bytes,2,rep,name=value,proto3" json:"value"`
}

func (x *SaveLevelPriceRequest) Reset() {
	*x = SaveLevelPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveLevelPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveLevelPriceRequest) ProtoMessage() {}

func (x *SaveLevelPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveLevelPriceRequest.ProtoReflect.Descriptor instead.
func (*SaveLevelPriceRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{27}
}

func (x *SaveLevelPriceRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SaveLevelPriceRequest) GetValue() []*SLevelPrice {
	if x != nil {
		return x.Value
	}
	return nil
}

type ShelveStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType EItemSalesType `protobuf:"varint,3,opt,name=itemType,proto3,enum=EItemSalesType" json:"itemType"`
	ItemId   int64          `protobuf:"varint,2,opt,name=itemId,proto3" json:"itemId"`
	ShelveOn bool           `protobuf:"varint,4,opt,name=shelveOn,proto3" json:"shelveOn"`
	Remark   string         `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
}

func (x *ShelveStateRequest) Reset() {
	*x = ShelveStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShelveStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShelveStateRequest) ProtoMessage() {}

func (x *ShelveStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShelveStateRequest.ProtoReflect.Descriptor instead.
func (*ShelveStateRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{28}
}

func (x *ShelveStateRequest) GetItemType() EItemSalesType {
	if x != nil {
		return x.ItemType
	}
	return EItemSalesType_IT_NORMAL
}

func (x *ShelveStateRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ShelveStateRequest) GetShelveOn() bool {
	if x != nil {
		return x.ShelveOn
	}
	return false
}

func (x *ShelveStateRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SWsSkuPriceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SWsSkuPrice `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *SWsSkuPriceListResponse) Reset() {
	*x = SWsSkuPriceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWsSkuPriceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWsSkuPriceListResponse) ProtoMessage() {}

func (x *SWsSkuPriceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWsSkuPriceListResponse.ProtoReflect.Descriptor instead.
func (*SWsSkuPriceListResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{29}
}

func (x *SWsSkuPriceListResponse) GetValue() []*SWsSkuPrice {
	if x != nil {
		return x.Value
	}
	return nil
}

type SaveSkuPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64          `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	SkuId  int64          `protobuf:"varint,2,opt,name=skuId,proto3" json:"skuId"`
	Value  []*SWsSkuPrice `protobuf:"bytes,3,rep,name=value,proto3" json:"value"`
}

func (x *SaveSkuPricesRequest) Reset() {
	*x = SaveSkuPricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSkuPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSkuPricesRequest) ProtoMessage() {}

func (x *SaveSkuPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSkuPricesRequest.ProtoReflect.Descriptor instead.
func (*SaveSkuPricesRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{30}
}

func (x *SaveSkuPricesRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SaveSkuPricesRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SaveSkuPricesRequest) GetValue() []*SWsSkuPrice {
	if x != nil {
		return x.Value
	}
	return nil
}

// 商品批发价
type SWsSkuPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 需要数量以上
	RequireNum int32 `protobuf:"varint,2,opt,name=requireNum,proto3" json:"requireNum"`
	// 批发价
	WholesalePrice int64 `protobuf:"varint,3,opt,name=wholesalePrice,proto3" json:"wholesalePrice"`
}

func (x *SWsSkuPrice) Reset() {
	*x = SWsSkuPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWsSkuPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWsSkuPrice) ProtoMessage() {}

func (x *SWsSkuPrice) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWsSkuPrice.ProtoReflect.Descriptor instead.
func (*SWsSkuPrice) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{31}
}

func (x *SWsSkuPrice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SWsSkuPrice) GetRequireNum() int32 {
	if x != nil {
		return x.RequireNum
	}
	return 0
}

func (x *SWsSkuPrice) GetWholesalePrice() int64 {
	if x != nil {
		return x.WholesalePrice
	}
	return 0
}

type SWsItemDiscountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SWsItemDiscount `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *SWsItemDiscountListResponse) Reset() {
	*x = SWsItemDiscountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWsItemDiscountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWsItemDiscountListResponse) ProtoMessage() {}

func (x *SWsItemDiscountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWsItemDiscountListResponse.ProtoReflect.Descriptor instead.
func (*SWsItemDiscountListResponse) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{32}
}

func (x *SWsItemDiscountListResponse) GetValue() []*SWsItemDiscount {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetWsDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	// 买家分组编号
	GroupId int64 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
}

func (x *GetWsDiscountRequest) Reset() {
	*x = GetWsDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWsDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWsDiscountRequest) ProtoMessage() {}

func (x *GetWsDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWsDiscountRequest.ProtoReflect.Descriptor instead.
func (*GetWsDiscountRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{33}
}

func (x *GetWsDiscountRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetWsDiscountRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type SaveItemDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  int64              `protobuf:"varint,1,opt,name=itemId,proto3" json:"itemId"`
	GroupId int64              `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId"`
	Value   []*SWsItemDiscount `protobuf:"bytes,3,rep,name=value,proto3" json:"value"`
}

func (x *SaveItemDiscountRequest) Reset() {
	*x = SaveItemDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveItemDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveItemDiscountRequest) ProtoMessage() {}

func (x *SaveItemDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveItemDiscountRequest.ProtoReflect.Descriptor instead.
func (*SaveItemDiscountRequest) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{34}
}

func (x *SaveItemDiscountRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SaveItemDiscountRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SaveItemDiscountRequest) GetValue() []*SWsItemDiscount {
	if x != nil {
		return x.Value
	}
	return nil
}

// 批发商品折扣
type SWsItemDiscount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 客户分组
	BuyerGroupId int64 `protobuf:"varint,2,opt,name=buyerGroupId,proto3" json:"buyerGroupId"`
	// 要求金额，默认为0
	RequireAmount int64 `protobuf:"varint,3,opt,name=requireAmount,proto3" json:"requireAmount"`
	// 折扣率
	DiscountRate int64 `protobuf:"varint,4,opt,name=discountRate,proto3" json:"discountRate"`
}

func (x *SWsItemDiscount) Reset() {
	*x = SWsItemDiscount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_item_dto_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWsItemDiscount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWsItemDiscount) ProtoMessage() {}

func (x *SWsItemDiscount) ProtoReflect() protoreflect.Message {
	mi := &file_message_item_dto_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWsItemDiscount.ProtoReflect.Descriptor instead.
func (*SWsItemDiscount) Descriptor() ([]byte, []int) {
	return file_message_item_dto_proto_rawDescGZIP(), []int{35}
}

func (x *SWsItemDiscount) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SWsItemDiscount) GetBuyerGroupId() int64 {
	if x != nil {
		return x.BuyerGroupId
	}
	return 0
}

func (x *SWsItemDiscount) GetRequireAmount() int64 {
	if x != nil {
		return x.RequireAmount
	}
	return 0
}

func (x *SWsItemDiscount) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

var File_message_item_dto_proto protoreflect.FileDescriptor

var file_message_item_dto_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x05, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x22,
	0x6e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22,
	0x52, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x55, 0x6e,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x87, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x77, 0x68, 0x65, 0x72, 0x65, 0x22, 0x9e, 0x04, 0x0a, 0x06, 0x53, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x05, 0x53, 0x41, 0x74, 0x74,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72, 0x57, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x72, 0x57, 0x6f, 0x72,
	0x64, 0x22, 0xf2, 0x02, 0x0a, 0x04, 0x53, 0x53, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b,
	0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x6c, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x62, 0x75, 0x6c, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x86, 0x06, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x08,
	0x66, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x66, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x53, 0x6b, 0x75, 0x52,
	0x08, 0x73, 0x6b, 0x75, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x0b, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x53, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x22,
	0xca, 0x07, 0x0a, 0x11, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x65,
	0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x64, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x1a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x41, 0x74, 0x74, 0x72, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x53, 0x6b, 0x75,
	0x52, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x70,
	0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x53, 0x53, 0x70, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x6c,
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53,
	0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x66, 0x6c,
	0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xc3, 0x02, 0x0a,
	0x0d, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24,
	0x0a, 0x0d, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x53, 0x68,
	0x65, 0x6c, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x47, 0x69, 0x66, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x47, 0x69, 0x66, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x46, 0x72,
	0x65, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73,
	0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x22, 0xdb, 0x07, 0x0a, 0x10, 0x53, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56,
	0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x49, 0x74, 0x65,
	0x6d, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x64, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x53, 0x6b, 0x75,
	0x52, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x0b, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x53, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x76, 0x69,
	0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53,
	0x49, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x76, 0x69,
	0x65, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56,
	0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x69, 0x65, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6b, 0x75, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6b, 0x75, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x4a, 0x73, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4a, 0x73, 0x6f, 0x6e,
	0x22, 0x78, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x3a, 0x0a, 0x15, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x53, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x9b, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x6b, 0x75, 0x48, 0x74, 0x6d, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53, 0x6b,
	0x75, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x53,
	0x6b, 0x75, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x53, 0x6b, 0x75, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x96, 0x07, 0x0a, 0x14,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b,
	0x75, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x08, 0x73,
	0x6b, 0x75, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x53, 0x53, 0x6b, 0x75, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2e,
	0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x19, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x53, 0x70, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6b, 0x75, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6b, 0x75, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x6c, 0x61, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x49, 0x74,
	0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b,
	0x75, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75,
	0x48, 0x74, 0x6d, 0x6c, 0x22, 0x5e, 0x0a, 0x0a, 0x53, 0x41, 0x74, 0x74, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74,
	0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74,
	0x74, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x53, 0x53, 0x70, 0x65, 0x63, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x53, 0x70, 0x65, 0x63, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x53, 0x0a, 0x0f, 0x53, 0x53, 0x70, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xc2, 0x02, 0x0a, 0x0e, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x6b, 0x75, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x53, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x5c, 0x0a,
	0x10, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x44, 0x0a, 0x12, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x64, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73,
	0x44, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x57, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x53, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x53, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x4f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x4f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x3d, 0x0a, 0x17, 0x53, 0x57, 0x73, 0x53, 0x6b, 0x75, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x53, 0x57, 0x73, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x68, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x53, 0x6b, 0x75, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x57, 0x73, 0x53,
	0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65,
	0x0a, 0x0b, 0x53, 0x57, 0x73, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a,
	0x0e, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x1b, 0x53, 0x57, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x57, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x57, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x57, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0f,
	0x53, 0x57, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x2a, 0x31, 0x0a,
	0x0e, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x49, 0x54, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x54, 0x5f, 0x57, 0x48, 0x4f, 0x4c, 0x45, 0x53, 0x41, 0x4c, 0x45, 0x10, 0x01,
	0x2a, 0xa5, 0x01, 0x0a, 0x09, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x0e,
	0x0a, 0x0a, 0x5f, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x65, 0x6c, 0x66, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x46, 0x72, 0x65, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04,
	0x47, 0x69, 0x66, 0x74, 0x10, 0x10, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69,
	0x61, 0x74, 0x65, 0x10, 0x20, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x53, 0x68,
	0x65, 0x6c, 0x76, 0x65, 0x10, 0x40, 0x12, 0x0d, 0x0a, 0x08, 0x48, 0x6f, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x10, 0x80, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x10, 0x80, 0x02, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a,
	0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_message_item_dto_proto_rawDescOnce sync.Once
	file_message_item_dto_proto_rawDescData = file_message_item_dto_proto_rawDesc
)

func file_message_item_dto_proto_rawDescGZIP() []byte {
	file_message_item_dto_proto_rawDescOnce.Do(func() {
		file_message_item_dto_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_item_dto_proto_rawDescData)
	})
	return file_message_item_dto_proto_rawDescData
}

var file_message_item_dto_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_item_dto_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_message_item_dto_proto_goTypes = []interface{}{
	(EItemSalesType)(0),                 // 0: EItemSalesType
	(EItemFlag)(0),                      // 1: EItemFlag
	(*SkuId)(nil),                       // 2: SkuId
	(*GetItemsByLabelRequest)(nil),      // 3: GetItemsByLabelRequest
	(*PagingGoodsResponse)(nil),         // 4: PagingGoodsResponse
	(*GetItemRequest)(nil),              // 5: GetItemRequest
	(*GetItemsRequest)(nil),             // 6: GetItemsRequest
	(*SGoods)(nil),                      // 7: SGoods
	(*SAttr)(nil),                       // 8: SAttr
	(*SSku)(nil),                        // 9: SSku
	(*SaveItemRequest)(nil),             // 10: SaveItemRequest
	(*SItemDataResponse)(nil),           // 11: SItemDataResponse
	(*SItemFlagData)(nil),               // 12: SItemFlagData
	(*SUnifiedViewItem)(nil),            // 13: SUnifiedViewItem
	(*SItemViewData)(nil),               // 14: SItemViewData
	(*SaveItemResponse)(nil),            // 15: SaveItemResponse
	(*ItemLabelListResponse)(nil),       // 16: ItemLabelListResponse
	(*SItemLabel)(nil),                  // 17: SItemLabel
	(*GetItemAndSnapshotRequest)(nil),   // 18: GetItemAndSnapshotRequest
	(*ItemSnapshotResponse)(nil),        // 19: ItemSnapshotResponse
	(*SAttrValue)(nil),                  // 20: SAttrValue
	(*SSpecOption)(nil),                 // 21: SSpecOption
	(*SSpecOptionItem)(nil),             // 22: SSpecOptionItem
	(*STradeSnapshot)(nil),              // 23: STradeSnapshot
	(*SLevelPrice)(nil),                 // 24: SLevelPrice
	(*ItemBySkuRequest)(nil),            // 25: ItemBySkuRequest
	(*ItemIllegalRequest)(nil),          // 26: ItemIllegalRequest
	(*RecycleItemRequest)(nil),          // 27: RecycleItemRequest
	(*ItemReviewRequest)(nil),           // 28: ItemReviewRequest
	(*SaveLevelPriceRequest)(nil),       // 29: SaveLevelPriceRequest
	(*ShelveStateRequest)(nil),          // 30: ShelveStateRequest
	(*SWsSkuPriceListResponse)(nil),     // 31: SWsSkuPriceListResponse
	(*SaveSkuPricesRequest)(nil),        // 32: SaveSkuPricesRequest
	(*SWsSkuPrice)(nil),                 // 33: SWsSkuPrice
	(*SWsItemDiscountListResponse)(nil), // 34: SWsItemDiscountListResponse
	(*GetWsDiscountRequest)(nil),        // 35: GetWsDiscountRequest
	(*SaveItemDiscountRequest)(nil),     // 36: SaveItemDiscountRequest
	(*SWsItemDiscount)(nil),             // 37: SWsItemDiscount
	nil,                                 // 38: SUnifiedViewItem.DataEntry
}
var file_message_item_dto_proto_depIdxs = []int32{
	13, // 0: PagingGoodsResponse.data:type_name -> SUnifiedViewItem
	12, // 1: SaveItemRequest.flagData:type_name -> SItemFlagData
	9,  // 2: SaveItemRequest.skuArray:type_name -> SSku
	24, // 3: SaveItemRequest.levelPrices:type_name -> SLevelPrice
	8,  // 4: SItemDataResponse.attrArray:type_name -> SAttr
	9,  // 5: SItemDataResponse.skuArray:type_name -> SSku
	21, // 6: SItemDataResponse.specOptions:type_name -> SSpecOption
	12, // 7: SItemDataResponse.flagData:type_name -> SItemFlagData
	24, // 8: SItemDataResponse.levelPrices:type_name -> SLevelPrice
	12, // 9: SUnifiedViewItem.flagData:type_name -> SItemFlagData
	9,  // 10: SUnifiedViewItem.skuArray:type_name -> SSku
	24, // 11: SUnifiedViewItem.levelPrices:type_name -> SLevelPrice
	14, // 12: SUnifiedViewItem.viewData:type_name -> SItemViewData
	38, // 13: SUnifiedViewItem.data:type_name -> SUnifiedViewItem.DataEntry
	17, // 14: ItemLabelListResponse.value:type_name -> SItemLabel
	20, // 15: ItemSnapshotResponse.attrArray:type_name -> SAttrValue
	9,  // 16: ItemSnapshotResponse.skuArray:type_name -> SSku
	21, // 17: ItemSnapshotResponse.specOptions:type_name -> SSpecOption
	12, // 18: ItemSnapshotResponse.flagData:type_name -> SItemFlagData
	24, // 19: ItemSnapshotResponse.levelPrices:type_name -> SLevelPrice
	22, // 20: SSpecOption.items:type_name -> SSpecOptionItem
	24, // 21: SaveLevelPriceRequest.value:type_name -> SLevelPrice
	0,  // 22: ShelveStateRequest.itemType:type_name -> EItemSalesType
	33, // 23: SWsSkuPriceListResponse.value:type_name -> SWsSkuPrice
	33, // 24: SaveSkuPricesRequest.value:type_name -> SWsSkuPrice
	37, // 25: SWsItemDiscountListResponse.value:type_name -> SWsItemDiscount
	37, // 26: SaveItemDiscountRequest.value:type_name -> SWsItemDiscount
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_message_item_dto_proto_init() }
func file_message_item_dto_proto_init() {
	if File_message_item_dto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_item_dto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemsByLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingGoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SItemDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SItemFlagData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SUnifiedViewItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SItemViewData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemLabelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SItemLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemAndSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAttrValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSpecOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSpecOptionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STradeSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLevelPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBySkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemIllegalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveLevelPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShelveStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWsSkuPriceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveSkuPricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWsSkuPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWsItemDiscountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWsDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveItemDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_item_dto_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWsItemDiscount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_item_dto_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_item_dto_proto_goTypes,
		DependencyIndexes: file_message_item_dto_proto_depIdxs,
		EnumInfos:         file_message_item_dto_proto_enumTypes,
		MessageInfos:      file_message_item_dto_proto_msgTypes,
	}.Build()
	File_message_item_dto_proto = out.File
	file_message_item_dto_proto_rawDesc = nil
	file_message_item_dto_proto_goTypes = nil
	file_message_item_dto_proto_depIdxs = nil
}
