//*
// Copyright (C) 2007-2024 fze.NET, All rights reserved.
//
// name: approval_service.proto
// author: jarrysix (jarrysix#gmail.com)
// date: 2024-08-17 18:06:28
// description: 审批服务
// history:

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: approval_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApprovalFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId int64 `protobuf:"varint,1,opt,name=flowId,proto3" json:"flowId"`
}

func (x *ApprovalFlowRequest) Reset() {
	*x = ApprovalFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approval_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalFlowRequest) ProtoMessage() {}

func (x *ApprovalFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approval_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalFlowRequest.ProtoReflect.Descriptor instead.
func (*ApprovalFlowRequest) Descriptor() ([]byte, []int) {
	return file_approval_service_proto_rawDescGZIP(), []int{0}
}

func (x *ApprovalFlowRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

// 审批流
type SApprovalFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审批流ID
	FlowId int64 `protobuf:"varint,1,opt,name=flowId,proto3" json:"flowId"`
	// 审批流名称
	FlowName string `protobuf:"bytes,2,opt,name=flowName,proto3" json:"flowName"`
	// 审批流描述
	FlowDesc string `protobuf:"bytes,3,opt,name=flowDesc,proto3" json:"flowDesc"`
	// 审批流节点
	Nodes []*SApprovalNode `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes"`
}

func (x *SApprovalFlow) Reset() {
	*x = SApprovalFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approval_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SApprovalFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SApprovalFlow) ProtoMessage() {}

func (x *SApprovalFlow) ProtoReflect() protoreflect.Message {
	mi := &file_approval_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SApprovalFlow.ProtoReflect.Descriptor instead.
func (*SApprovalFlow) Descriptor() ([]byte, []int) {
	return file_approval_service_proto_rawDescGZIP(), []int{1}
}

func (x *SApprovalFlow) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SApprovalFlow) GetFlowName() string {
	if x != nil {
		return x.FlowName
	}
	return ""
}

func (x *SApprovalFlow) GetFlowDesc() string {
	if x != nil {
		return x.FlowDesc
	}
	return ""
}

func (x *SApprovalFlow) GetNodes() []*SApprovalNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// 审批流节点
type SApprovalNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 节点ID
	NodeId int64 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId"`
	// 节点名称
	NodeName string `protobuf:"bytes,2,opt,name=nodeName,proto3" json:"nodeName"`
	// 节点类型
	NodeType int32 `protobuf:"varint,3,opt,name=nodeType,proto3" json:"nodeType"`
	// 节点KEY
	NodeKey string `protobuf:"bytes,4,opt,name=nodeKey,proto3" json:"nodeKey"`
	// 节点描述
	NodeDesc string `protobuf:"bytes,5,opt,name=nodeDesc,proto3" json:"nodeDesc"`
}

func (x *SApprovalNode) Reset() {
	*x = SApprovalNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approval_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SApprovalNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SApprovalNode) ProtoMessage() {}

func (x *SApprovalNode) ProtoReflect() protoreflect.Message {
	mi := &file_approval_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SApprovalNode.ProtoReflect.Descriptor instead.
func (*SApprovalNode) Descriptor() ([]byte, []int) {
	return file_approval_service_proto_rawDescGZIP(), []int{2}
}

func (x *SApprovalNode) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SApprovalNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *SApprovalNode) GetNodeType() int32 {
	if x != nil {
		return x.NodeType
	}
	return 0
}

func (x *SApprovalNode) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

func (x *SApprovalNode) GetNodeDesc() string {
	if x != nil {
		return x.NodeDesc
	}
	return ""
}

// 审批通过
type ApprovalApproveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审批ID
	ApprovalId int64 `protobuf:"varint,1,opt,name=approvalId,proto3" json:"approvalId"`
	// 审批人ID
	ApprovalUserId int64 `protobuf:"varint,2,opt,name=approvalUserId,proto3" json:"approvalUserId"`
}

func (x *ApprovalApproveRequest) Reset() {
	*x = ApprovalApproveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approval_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalApproveRequest) ProtoMessage() {}

func (x *ApprovalApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approval_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalApproveRequest.ProtoReflect.Descriptor instead.
func (*ApprovalApproveRequest) Descriptor() ([]byte, []int) {
	return file_approval_service_proto_rawDescGZIP(), []int{3}
}

func (x *ApprovalApproveRequest) GetApprovalId() int64 {
	if x != nil {
		return x.ApprovalId
	}
	return 0
}

func (x *ApprovalApproveRequest) GetApprovalUserId() int64 {
	if x != nil {
		return x.ApprovalUserId
	}
	return 0
}

// 审批拒绝
type ApprovalRejectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审批ID
	ApprovalId int64 `protobuf:"varint,1,opt,name=approvalId,proto3" json:"approvalId"`
	// 审批人ID
	ApprovalUserId int64 `protobuf:"varint,2,opt,name=approvalUserId,proto3" json:"approvalUserId"`
	// 审批拒绝原因
	RejectReason string `protobuf:"bytes,3,opt,name=rejectReason,proto3" json:"rejectReason"`
}

func (x *ApprovalRejectRequest) Reset() {
	*x = ApprovalRejectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approval_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalRejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalRejectRequest) ProtoMessage() {}

func (x *ApprovalRejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approval_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalRejectRequest.ProtoReflect.Descriptor instead.
func (*ApprovalRejectRequest) Descriptor() ([]byte, []int) {
	return file_approval_service_proto_rawDescGZIP(), []int{4}
}

func (x *ApprovalRejectRequest) GetApprovalId() int64 {
	if x != nil {
		return x.ApprovalId
	}
	return 0
}

func (x *ApprovalRejectRequest) GetApprovalUserId() int64 {
	if x != nil {
		return x.ApprovalUserId
	}
	return 0
}

func (x *ApprovalRejectRequest) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

// 分配审批人
type ApprovalAssignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审批ID
	ApprovalId int64 `protobuf:"varint,1,opt,name=approvalId,proto3" json:"approvalId"`
	// 审批人ID
	ApprovalUserId int64 `protobuf:"varint,2,opt,name=approvalUserId,proto3" json:"approvalUserId"`
	// 审批人名称
	ApprovalUsername string `protobuf:"bytes,3,opt,name=approvalUsername,proto3" json:"approvalUsername"`
}

func (x *ApprovalAssignRequest) Reset() {
	*x = ApprovalAssignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_approval_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalAssignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalAssignRequest) ProtoMessage() {}

func (x *ApprovalAssignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_approval_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalAssignRequest.ProtoReflect.Descriptor instead.
func (*ApprovalAssignRequest) Descriptor() ([]byte, []int) {
	return file_approval_service_proto_rawDescGZIP(), []int{5}
}

func (x *ApprovalAssignRequest) GetApprovalId() int64 {
	if x != nil {
		return x.ApprovalId
	}
	return 0
}

func (x *ApprovalAssignRequest) GetApprovalUserId() int64 {
	if x != nil {
		return x.ApprovalUserId
	}
	return 0
}

func (x *ApprovalAssignRequest) GetApprovalUsername() string {
	if x != nil {
		return x.ApprovalUsername
	}
	return ""
}

var File_approval_service_proto protoreflect.FileDescriptor

var file_approval_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66,
	0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x53, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x12, 0x24, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x95, 0x01,
	0x0a, 0x0d, 0x53, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x22, 0x60, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x8b, 0x01,
	0x0a, 0x15, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xd3, 0x01, 0x0a, 0x0f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0e, 0x2e, 0x53, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x77,
	0x22, 0x00, 0x12, 0x2f, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x17, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x2e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_approval_service_proto_rawDescOnce sync.Once
	file_approval_service_proto_rawDescData = file_approval_service_proto_rawDesc
)

func file_approval_service_proto_rawDescGZIP() []byte {
	file_approval_service_proto_rawDescOnce.Do(func() {
		file_approval_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_approval_service_proto_rawDescData)
	})
	return file_approval_service_proto_rawDescData
}

var file_approval_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_approval_service_proto_goTypes = []interface{}{
	(*ApprovalFlowRequest)(nil),    // 0: ApprovalFlowRequest
	(*SApprovalFlow)(nil),          // 1: SApprovalFlow
	(*SApprovalNode)(nil),          // 2: SApprovalNode
	(*ApprovalApproveRequest)(nil), // 3: ApprovalApproveRequest
	(*ApprovalRejectRequest)(nil),  // 4: ApprovalRejectRequest
	(*ApprovalAssignRequest)(nil),  // 5: ApprovalAssignRequest
	(*TxResult)(nil),               // 6: TxResult
}
var file_approval_service_proto_depIdxs = []int32{
	2, // 0: SApprovalFlow.nodes:type_name -> SApprovalNode
	0, // 1: ApprovalService.GetFlow:input_type -> ApprovalFlowRequest
	3, // 2: ApprovalService.Approve:input_type -> ApprovalApproveRequest
	4, // 3: ApprovalService.Reject:input_type -> ApprovalRejectRequest
	5, // 4: ApprovalService.Assign:input_type -> ApprovalAssignRequest
	1, // 5: ApprovalService.GetFlow:output_type -> SApprovalFlow
	6, // 6: ApprovalService.Approve:output_type -> TxResult
	6, // 7: ApprovalService.Reject:output_type -> TxResult
	6, // 8: ApprovalService.Assign:output_type -> TxResult
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_approval_service_proto_init() }
func file_approval_service_proto_init() {
	if File_approval_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_approval_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approval_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SApprovalFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approval_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SApprovalNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approval_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalApproveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approval_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalRejectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_approval_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalAssignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_approval_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_approval_service_proto_goTypes,
		DependencyIndexes: file_approval_service_proto_depIdxs,
		MessageInfos:      file_approval_service_proto_msgTypes,
	}.Build()
	File_approval_service_proto = out.File
	file_approval_service_proto_rawDesc = nil
	file_approval_service_proto_goTypes = nil
	file_approval_service_proto_depIdxs = nil
}
