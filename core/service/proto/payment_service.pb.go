// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: payment_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * 支付方式的位值
type EPayMethod int32

const (
	EPayMethod__4 EPayMethod = 0
	// * 余额抵扣
	EPayMethod_Balance EPayMethod = 1
	// * 钱包支付
	EPayMethod_Wallet EPayMethod = 2
	// * 积分兑换
	EPayMethod_Integral EPayMethod = 4
	// * 用户卡
	EPayMethod_UserCard EPayMethod = 8
	// * 用户券
	EPayMethod_UserCoupon EPayMethod = 16
	// * 现金支付
	EPayMethod_Cash EPayMethod = 32
	// * 银行卡支付
	EPayMethod_BankCard EPayMethod = 64
	// * 第三方支付,如支付宝等
	EPayMethod_PaySP EPayMethod = 128
	// * 卖家支付通道
	EPayMethod_SellerPay EPayMethod = 256
	// * 系统支付通道
	EPayMethod_SystemPay EPayMethod = 512
)

// Enum value maps for EPayMethod.
var (
	EPayMethod_name = map[int32]string{
		0:   "_4",
		1:   "Balance",
		2:   "Wallet",
		4:   "Integral",
		8:   "UserCard",
		16:  "UserCoupon",
		32:  "Cash",
		64:  "BankCard",
		128: "PaySP",
		256: "SellerPay",
		512: "SystemPay",
	}
	EPayMethod_value = map[string]int32{
		"_4":         0,
		"Balance":    1,
		"Wallet":     2,
		"Integral":   4,
		"UserCard":   8,
		"UserCoupon": 16,
		"Cash":       32,
		"BankCard":   64,
		"PaySP":      128,
		"SellerPay":  256,
		"SystemPay":  512,
	}
)

func (x EPayMethod) Enum() *EPayMethod {
	p := new(EPayMethod)
	*p = x
	return p
}

func (x EPayMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPayMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_service_proto_enumTypes[0].Descriptor()
}

func (EPayMethod) Type() protoreflect.EnumType {
	return &file_payment_service_proto_enumTypes[0]
}

func (x EPayMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EPayMethod.Descriptor instead.
func (EPayMethod) EnumDescriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{0}
}

type AdjustOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentNo string `protobuf:"bytes,1,opt,name=paymentNo,proto3" json:"paymentNo"`
	Amount    int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
}

func (x *AdjustOrderRequest) Reset() {
	*x = AdjustOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustOrderRequest) ProtoMessage() {}

func (x *AdjustOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustOrderRequest.ProtoReflect.Descriptor instead.
func (*AdjustOrderRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{0}
}

func (x *AdjustOrderRequest) GetPaymentNo() string {
	if x != nil {
		return x.PaymentNo
	}
	return ""
}

func (x *AdjustOrderRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DiscountBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int32  `protobuf:"zigzag32,1,opt,name=orderId,proto3" json:"orderId"`
	Remark  string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *DiscountBalanceRequest) Reset() {
	*x = DiscountBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountBalanceRequest) ProtoMessage() {}

func (x *DiscountBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountBalanceRequest.ProtoReflect.Descriptor instead.
func (*DiscountBalanceRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{1}
}

func (x *DiscountBalanceRequest) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DiscountBalanceRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DiscountIntegralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   int32 `protobuf:"zigzag32,1,opt,name=orderId,proto3" json:"orderId"`
	Integral  int64 `protobuf:"zigzag64,2,opt,name=integral,proto3" json:"integral"`
	IgnoreOut bool  `protobuf:"varint,3,opt,name=ignoreOut,proto3" json:"ignoreOut"`
}

func (x *DiscountIntegralRequest) Reset() {
	*x = DiscountIntegralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountIntegralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountIntegralRequest) ProtoMessage() {}

func (x *DiscountIntegralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountIntegralRequest.ProtoReflect.Descriptor instead.
func (*DiscountIntegralRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{2}
}

func (x *DiscountIntegralRequest) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *DiscountIntegralRequest) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *DiscountIntegralRequest) GetIgnoreOut() bool {
	if x != nil {
		return x.IgnoreOut
	}
	return false
}

type WalletPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付交易单号
	TradeNo  string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	MergePay bool   `protobuf:"varint,2,opt,name=mergePay,proto3" json:"mergePay"`
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
}

func (x *WalletPaymentRequest) Reset() {
	*x = WalletPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletPaymentRequest) ProtoMessage() {}

func (x *WalletPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletPaymentRequest.ProtoReflect.Descriptor instead.
func (*WalletPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{3}
}

func (x *WalletPaymentRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *WalletPaymentRequest) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

func (x *WalletPaymentRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type HyperPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付交易单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 备注
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
}

func (x *HyperPaymentRequest) Reset() {
	*x = HyperPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperPaymentRequest) ProtoMessage() {}

func (x *HyperPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperPaymentRequest.ProtoReflect.Descriptor instead.
func (*HyperPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{4}
}

func (x *HyperPaymentRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *HyperPaymentRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 完成交易请求
type FinishPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	PaymentOrderNo string `protobuf:"bytes,1,opt,name=paymentOrderNo,proto3" json:"paymentOrderNo"`
	// 支付方名称
	SpName string `protobuf:"bytes,2,opt,name=spName,proto3" json:"spName"`
	// 支付方交易流水号
	SpTradeNo string `protobuf:"bytes,3,opt,name=spTradeNo,proto3" json:"spTradeNo"`
}

func (x *FinishPaymentRequest) Reset() {
	*x = FinishPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishPaymentRequest) ProtoMessage() {}

func (x *FinishPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishPaymentRequest.ProtoReflect.Descriptor instead.
func (*FinishPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{5}
}

func (x *FinishPaymentRequest) GetPaymentOrderNo() string {
	if x != nil {
		return x.PaymentOrderNo
	}
	return ""
}

func (x *FinishPaymentRequest) GetSpName() string {
	if x != nil {
		return x.SpName
	}
	return ""
}

func (x *FinishPaymentRequest) GetSpTradeNo() string {
	if x != nil {
		return x.SpTradeNo
	}
	return ""
}

// 申请获取集成支付参数
type IntegrateParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	PayOrderNo string `protobuf:"bytes,1,opt,name=payOrderNo,proto3" json:"payOrderNo"`
	// 支付应用ID
	AppId int32 `protobuf:"varint,2,opt,name=appId,proto3" json:"appId"`
}

func (x *IntegrateParamsRequest) Reset() {
	*x = IntegrateParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrateParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrateParamsRequest) ProtoMessage() {}

func (x *IntegrateParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrateParamsRequest.ProtoReflect.Descriptor instead.
func (*IntegrateParamsRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{6}
}

func (x *IntegrateParamsRequest) GetPayOrderNo() string {
	if x != nil {
		return x.PayOrderNo
	}
	return ""
}

func (x *IntegrateParamsRequest) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

// 集成支付参数响应
type IntegrateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 支付应用ID
	AppId int32 `protobuf:"varint,3,opt,name=appId,proto3" json:"appId"`
	// 支付应用名称
	AppName string `protobuf:"bytes,4,opt,name=appName,proto3" json:"appName"`
	// 支付应用请求地址
	AppUrl string `protobuf:"bytes,5,opt,name=appUrl,proto3" json:"appUrl"`
	// 服务,默认为pay
	Service string `protobuf:"bytes,6,opt,name=service,proto3" json:"service"`
	// 支付单号
	OrderNo string `protobuf:"bytes,7,opt,name=orderNo,proto3" json:"orderNo"`
	// 订单金额
	OrderAmount int32 `protobuf:"varint,8,opt,name=orderAmount,proto3" json:"orderAmount"`
	// 支付描述
	Subject string `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject"`
}

func (x *IntegrateParamsResponse) Reset() {
	*x = IntegrateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrateParamsResponse) ProtoMessage() {}

func (x *IntegrateParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrateParamsResponse.ProtoReflect.Descriptor instead.
func (*IntegrateParamsResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{7}
}

func (x *IntegrateParamsResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *IntegrateParamsResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *IntegrateParamsResponse) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *IntegrateParamsResponse) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *IntegrateParamsResponse) GetAppUrl() string {
	if x != nil {
		return x.AppUrl
	}
	return ""
}

func (x *IntegrateParamsResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *IntegrateParamsResponse) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *IntegrateParamsResponse) GetOrderAmount() int32 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *IntegrateParamsResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

// * 支付网关请求
type PayGatewayV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 交易号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// * 是否合并支付
	MergePay bool `protobuf:"varint,2,opt,name=mergePay,proto3" json:"mergePay"`
	// * 钱包抵扣
	WalletDiscount bool `protobuf:"varint,3,opt,name=walletDiscount,proto3" json:"walletDiscount"`
	// * 支付方式
	PayMethod int32 `protobuf:"varint,4,opt,name=payMethod,proto3" json:"payMethod"`
	// * 支付SP
	SpName string `protobuf:"bytes,5,opt,name=spName,proto3" json:"spName"`
}

func (x *PayGatewayV2Request) Reset() {
	*x = PayGatewayV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayGatewayV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayGatewayV2Request) ProtoMessage() {}

func (x *PayGatewayV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayGatewayV2Request.ProtoReflect.Descriptor instead.
func (*PayGatewayV2Request) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{8}
}

func (x *PayGatewayV2Request) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayGatewayV2Request) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

func (x *PayGatewayV2Request) GetWalletDiscount() bool {
	if x != nil {
		return x.WalletDiscount
	}
	return false
}

func (x *PayGatewayV2Request) GetPayMethod() int32 {
	if x != nil {
		return x.PayMethod
	}
	return 0
}

func (x *PayGatewayV2Request) GetSpName() string {
	if x != nil {
		return x.SpName
	}
	return ""
}

// * 支付网关响应
type PayGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 代码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// * 消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// * 交易单号
	TradeNo string `protobuf:"bytes,3,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 是否已完成交易
	IsFinished bool `protobuf:"varint,4,opt,name=isFinished,proto3" json:"isFinished"`
	// 总金额
	TotalAmount int64 `protobuf:"varint,5,opt,name=totalAmount,proto3" json:"totalAmount"`
	// 交易费用
	TransactionFee int64 `protobuf:"varint,6,opt,name=transactionFee,proto3" json:"transactionFee"`
	// 金额
	FinalAmount int64 `protobuf:"varint,7,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 支付表单
	PaymentForm string `protobuf:"bytes,8,opt,name=paymentForm,proto3" json:"paymentForm"`
}

func (x *PayGatewayResponse) Reset() {
	*x = PayGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayGatewayResponse) ProtoMessage() {}

func (x *PayGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayGatewayResponse.ProtoReflect.Descriptor instead.
func (*PayGatewayResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{9}
}

func (x *PayGatewayResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *PayGatewayResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *PayGatewayResponse) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayGatewayResponse) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

func (x *PayGatewayResponse) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PayGatewayResponse) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *PayGatewayResponse) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *PayGatewayResponse) GetPaymentForm() string {
	if x != nil {
		return x.PaymentForm
	}
	return ""
}

type OrderInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo  string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	MergePay bool   `protobuf:"varint,2,opt,name=mergePay,proto3" json:"mergePay"`
}

func (x *OrderInfoRequest) Reset() {
	*x = OrderInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderInfoRequest) ProtoMessage() {}

func (x *OrderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderInfoRequest.ProtoReflect.Descriptor instead.
func (*OrderInfoRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{10}
}

func (x *OrderInfoRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *OrderInfoRequest) GetMergePay() bool {
	if x != nil {
		return x.MergePay
	}
	return false
}

type MixedPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeNo string             `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	Data    []*SRequestPayData `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *MixedPaymentRequest) Reset() {
	*x = MixedPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MixedPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MixedPaymentRequest) ProtoMessage() {}

func (x *MixedPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MixedPaymentRequest.ProtoReflect.Descriptor instead.
func (*MixedPaymentRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{11}
}

func (x *MixedPaymentRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *MixedPaymentRequest) GetData() []*SRequestPayData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PayGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string            `protobuf:"bytes,1,opt,name=action,proto3" json:"action"`
	UserId int64             `protobuf:"zigzag64,2,opt,name=userId,proto3" json:"userId"`
	Data   map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PayGatewayRequest) Reset() {
	*x = PayGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayGatewayRequest) ProtoMessage() {}

func (x *PayGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayGatewayRequest.ProtoReflect.Descriptor instead.
func (*PayGatewayRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{12}
}

func (x *PayGatewayRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PayGatewayRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayGatewayRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// * 支付单
type SPaymentOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 交易号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// * 卖家编号
	SellerId int32 `protobuf:"zigzag32,2,opt,name=sellerId,proto3" json:"sellerId"`
	// * 交易类型
	TradeType string `protobuf:"bytes,3,opt,name=tradeType,proto3" json:"tradeType"`
	// * 合并支付交单单号
	MergeTradeNo string `protobuf:"bytes,4,opt,name=mergeTradeNo,proto3" json:"mergeTradeNo"`
	// * 支付单详情
	Subject string `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject"`
	// * 是否为子订单
	SubOrder bool `protobuf:"varint,6,opt,name=subOrder,proto3" json:"subOrder"`
	// * 支付单的类型，如购物或其他
	OrderType int32 `protobuf:"zigzag32,7,opt,name=orderType,proto3" json:"orderType"`
	// * 关联订单号
	OutOrderNo string `protobuf:"bytes,8,opt,name=outOrderNo,proto3" json:"outOrderNo"`
	// * 买家编号
	BuyerId int64 `protobuf:"varint,9,opt,name=buyerId,proto3" json:"buyerId"`
	// * 支付用户编号
	PayerId int64 `protobuf:"varint,10,opt,name=payerId,proto3" json:"payerId"`
	// * 调整金额
	AdjustAmount int64 `protobuf:"varint,13,opt,name=adjustAmount,proto3" json:"adjustAmount"`
	// * 抵扣金额
	DeductAmount int64 `protobuf:"varint,14,opt,name=deductAmount,proto3" json:"deductAmount"`
	// * 共计金额
	TotalAmount int64 `protobuf:"varint,15,opt,name=totalAmount,proto3" json:"totalAmount"`
	// * 手续费
	TransactionFee int64 `protobuf:"varint,16,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 实付金额
	PaidAmount int64 `protobuf:"varint,17,opt,name=paidAmount,proto3" json:"paidAmount"`
	// * 最终应付金额
	FinalAmount int64 `protobuf:"varint,18,opt,name=finalAmount,proto3" json:"finalAmount"`
	// * 可⽤支付方式
	PayFlag int32 `protobuf:"varint,19,opt,name=payFlag,proto3" json:"payFlag"`
	// * 实际使用支付方式
	FinalFlag int32 `protobuf:"zigzag32,20,opt,name=finalFlag,proto3" json:"finalFlag"`
	// * 其他支付信息
	ExtraData string `protobuf:"bytes,21,opt,name=extraData,proto3" json:"extraData"`
	// * 订单状态
	State int32 `protobuf:"zigzag32,22,opt,name=state,proto3" json:"state"`
	// * 提交时间
	SubmitTime int64 `protobuf:"zigzag64,23,opt,name=submitTime,proto3" json:"submitTime"`
	// * 过期时间
	ExpiresTime int64 `protobuf:"zigzag64,24,opt,name=expiresTime,proto3" json:"expiresTime"`
	// * 支付时间
	PaidTime int64 `protobuf:"zigzag64,25,opt,name=paidTime,proto3" json:"paidTime"`
	// * 交易数据
	TradeData []*STradeChanData `protobuf:"bytes,26,rep,name=tradeData,proto3" json:"tradeData"`
	// * 编号
	Id int32 `protobuf:"zigzag32,27,opt,name=id,proto3" json:"id"`
}

func (x *SPaymentOrder) Reset() {
	*x = SPaymentOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPaymentOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPaymentOrder) ProtoMessage() {}

func (x *SPaymentOrder) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPaymentOrder.ProtoReflect.Descriptor instead.
func (*SPaymentOrder) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{13}
}

func (x *SPaymentOrder) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *SPaymentOrder) GetSellerId() int32 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *SPaymentOrder) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *SPaymentOrder) GetMergeTradeNo() string {
	if x != nil {
		return x.MergeTradeNo
	}
	return ""
}

func (x *SPaymentOrder) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SPaymentOrder) GetSubOrder() bool {
	if x != nil {
		return x.SubOrder
	}
	return false
}

func (x *SPaymentOrder) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *SPaymentOrder) GetOutOrderNo() string {
	if x != nil {
		return x.OutOrderNo
	}
	return ""
}

func (x *SPaymentOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SPaymentOrder) GetPayerId() int64 {
	if x != nil {
		return x.PayerId
	}
	return 0
}

func (x *SPaymentOrder) GetAdjustAmount() int64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SPaymentOrder) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SPaymentOrder) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SPaymentOrder) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SPaymentOrder) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *SPaymentOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SPaymentOrder) GetPayFlag() int32 {
	if x != nil {
		return x.PayFlag
	}
	return 0
}

func (x *SPaymentOrder) GetFinalFlag() int32 {
	if x != nil {
		return x.FinalFlag
	}
	return 0
}

func (x *SPaymentOrder) GetExtraData() string {
	if x != nil {
		return x.ExtraData
	}
	return ""
}

func (x *SPaymentOrder) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SPaymentOrder) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

func (x *SPaymentOrder) GetExpiresTime() int64 {
	if x != nil {
		return x.ExpiresTime
	}
	return 0
}

func (x *SPaymentOrder) GetPaidTime() int64 {
	if x != nil {
		return x.PaidTime
	}
	return 0
}

func (x *SPaymentOrder) GetTradeData() []*STradeChanData {
	if x != nil {
		return x.TradeData
	}
	return nil
}

func (x *SPaymentOrder) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取支付单请求
type PaymentOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 支付单号
	TradeNo string `protobuf:"bytes,1,opt,name=tradeNo,proto3" json:"tradeNo"`
	// 允许在多店下单后需单独支付的支付单进行拆分
	AllowBreak bool `protobuf:"varint,2,opt,name=allowBreak,proto3" json:"allowBreak"`
}

func (x *PaymentOrderRequest) Reset() {
	*x = PaymentOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentOrderRequest) ProtoMessage() {}

func (x *PaymentOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentOrderRequest.ProtoReflect.Descriptor instead.
func (*PaymentOrderRequest) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{14}
}

func (x *PaymentOrderRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PaymentOrderRequest) GetAllowBreak() bool {
	if x != nil {
		return x.AllowBreak
	}
	return false
}

// * 请求支付数据
type SRequestPayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 支付方式
	Method int32 `protobuf:"zigzag32,1,opt,name=method,proto3" json:"method"`
	// * 支付方式代码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// * 支付金额
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
}

func (x *SRequestPayData) Reset() {
	*x = SRequestPayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRequestPayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRequestPayData) ProtoMessage() {}

func (x *SRequestPayData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRequestPayData.ProtoReflect.Descriptor instead.
func (*SRequestPayData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{15}
}

func (x *SRequestPayData) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *SRequestPayData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SRequestPayData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// * 交易方式数据
type STradeChanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 支付途径
	ChanId int32 `protobuf:"zigzag32,1,opt,name=chanId,proto3" json:"chanId"`
	// 方式描述
	ChanName string `protobuf:"bytes,2,opt,name=chanName,proto3" json:"chanName"`
	// * 交易代码
	ChanCode string `protobuf:"bytes,3,opt,name=chanCode,proto3" json:"chanCode"`
	// * 支付金额
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount"`
	// * 外部交易单号
	OutTradeNo string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo"`
}

func (x *STradeChanData) Reset() {
	*x = STradeChanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STradeChanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STradeChanData) ProtoMessage() {}

func (x *STradeChanData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STradeChanData.ProtoReflect.Descriptor instead.
func (*STradeChanData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{16}
}

func (x *STradeChanData) GetChanId() int32 {
	if x != nil {
		return x.ChanId
	}
	return 0
}

func (x *STradeChanData) GetChanName() string {
	if x != nil {
		return x.ChanName
	}
	return ""
}

func (x *STradeChanData) GetChanCode() string {
	if x != nil {
		return x.ChanCode
	}
	return ""
}

func (x *STradeChanData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *STradeChanData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

// * 支付单预交易数据
type SPrepareTradeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 错误码
	ErrCode int32 `protobuf:"zigzag32,1,opt,name=errCode,proto3" json:"errCode"`
	// * 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// * 交易号
	TradeNo string `protobuf:"bytes,3,opt,name=tradeNo,proto3" json:"tradeNo"`
	// * 支付标志
	PayFlag int32 `protobuf:"zigzag32,4,opt,name=payFlag,proto3" json:"payFlag"`
	// * 交易状态
	TradeState int32 `protobuf:"zigzag32,5,opt,name=tradeState,proto3" json:"tradeState"`
	// * 交易订单
	TradeOrders []*SPaymentOrderData `protobuf:"bytes,6,rep,name=tradeOrders,proto3" json:"tradeOrders"`
	// * 累计金额
	TotalAmount int64 `protobuf:"varint,7,opt,name=totalAmount,proto3" json:"totalAmount"`
	// * 手续费
	TransactionFee int64 `protobuf:"varint,8,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 最终支付金额
	FinalAmount int64 `protobuf:"varint,9,opt,name=finalAmount,proto3" json:"finalAmount"`
}

func (x *SPrepareTradeData) Reset() {
	*x = SPrepareTradeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPrepareTradeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPrepareTradeData) ProtoMessage() {}

func (x *SPrepareTradeData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPrepareTradeData.ProtoReflect.Descriptor instead.
func (*SPrepareTradeData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{17}
}

func (x *SPrepareTradeData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SPrepareTradeData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SPrepareTradeData) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *SPrepareTradeData) GetPayFlag() int32 {
	if x != nil {
		return x.PayFlag
	}
	return 0
}

func (x *SPrepareTradeData) GetTradeState() int32 {
	if x != nil {
		return x.TradeState
	}
	return 0
}

func (x *SPrepareTradeData) GetTradeOrders() []*SPaymentOrderData {
	if x != nil {
		return x.TradeOrders
	}
	return nil
}

func (x *SPrepareTradeData) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SPrepareTradeData) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SPrepareTradeData) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

// * 支付单数据
type SPaymentOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 交易订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// * 标题
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject"`
	// * 交易类型
	TradeType string `protobuf:"bytes,3,opt,name=tradeType,proto3" json:"tradeType"`
	// * 状态
	State int32 `protobuf:"zigzag32,4,opt,name=state,proto3" json:"state"`
	// * 手续费
	TransactionFee int64 `protobuf:"varint,5,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 最终支付金额
	FinalAmount int64 `protobuf:"varint,6,opt,name=finalAmount,proto3" json:"finalAmount"`
}

func (x *SPaymentOrderData) Reset() {
	*x = SPaymentOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPaymentOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPaymentOrderData) ProtoMessage() {}

func (x *SPaymentOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPaymentOrderData.ProtoReflect.Descriptor instead.
func (*SPaymentOrderData) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{18}
}

func (x *SPaymentOrderData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SPaymentOrderData) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SPaymentOrderData) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *SPaymentOrderData) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SPaymentOrderData) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SPaymentOrderData) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

// * 集成支付应用编号
type PayIntegrateAppId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *PayIntegrateAppId) Reset() {
	*x = PayIntegrateAppId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayIntegrateAppId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayIntegrateAppId) ProtoMessage() {}

func (x *PayIntegrateAppId) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayIntegrateAppId.ProtoReflect.Descriptor instead.
func (*PayIntegrateAppId) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{19}
}

func (x *PayIntegrateAppId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// * 查询集成支付应用响应
type QueryIntegrateAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SIntegrateApp `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *QueryIntegrateAppResponse) Reset() {
	*x = QueryIntegrateAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIntegrateAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIntegrateAppResponse) ProtoMessage() {}

func (x *QueryIntegrateAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIntegrateAppResponse.ProtoReflect.Descriptor instead.
func (*QueryIntegrateAppResponse) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{20}
}

func (x *QueryIntegrateAppResponse) GetValue() []*SIntegrateApp {
	if x != nil {
		return x.Value
	}
	return nil
}

// * 集成支付应用
type SIntegrateApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 编号
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 支付应用名称
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName"`
	// * 支付应用接口
	AppUrl string `protobuf:"bytes,3,opt,name=appUrl,proto3" json:"appUrl"`
	// * 集成类型: 1:API调用(密码验证) 2: 跳转 3:直接唤起
	IntegrateType int32 `protobuf:"varint,4,opt,name=integrateType,proto3" json:"integrateType"`
	// * 显示顺序
	SortNumber int32 `protobuf:"varint,5,opt,name=sortNumber,proto3" json:"sortNumber"`
	// * 是否启用
	Enabled int32 `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled"`
	// * 支付提示信息
	Hint string `protobuf:"bytes,7,opt,name=hint,proto3" json:"hint"`
	// * 是否高亮显示
	Highlight int32 `protobuf:"varint,8,opt,name=highlight,proto3" json:"highlight"`
}

func (x *SIntegrateApp) Reset() {
	*x = SIntegrateApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payment_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SIntegrateApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SIntegrateApp) ProtoMessage() {}

func (x *SIntegrateApp) ProtoReflect() protoreflect.Message {
	mi := &file_payment_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SIntegrateApp.ProtoReflect.Descriptor instead.
func (*SIntegrateApp) Descriptor() ([]byte, []int) {
	return file_payment_service_proto_rawDescGZIP(), []int{21}
}

func (x *SIntegrateApp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SIntegrateApp) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *SIntegrateApp) GetAppUrl() string {
	if x != nil {
		return x.AppUrl
	}
	return ""
}

func (x *SIntegrateApp) GetIntegrateType() int32 {
	if x != nil {
		return x.IntegrateType
	}
	return 0
}

func (x *SIntegrateApp) GetSortNumber() int32 {
	if x != nil {
		return x.SortNumber
	}
	return 0
}

func (x *SIntegrateApp) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SIntegrateApp) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *SIntegrateApp) GetHighlight() int32 {
	if x != nil {
		return x.Highlight
	}
	return 0
}

var File_payment_service_proto protoreflect.FileDescriptor

var file_payment_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x4a, 0x0a, 0x16, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x6d, 0x0a,
	0x17, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x64, 0x0a, 0x14,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x47, 0x0a, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x74, 0x0a, 0x14, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x22, 0x4e, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x22, 0x83, 0x02, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x22, 0x48, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x22, 0x55,
	0x0a, 0x13, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x61, 0x79, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x06, 0x0a, 0x0d, 0x53, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x70, 0x61,
	0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x22, 0x55, 0x0a, 0x0f, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x98, 0x01,
	0x0a, 0x0e, 0x53, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x11, 0x53, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x53, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x29,
	0x0a, 0x11, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe3, 0x01, 0x0a,
	0x0d, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x55,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x2a, 0x9d, 0x01, 0x0a, 0x0a, 0x45, 0x50, 0x61, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x06, 0x0a, 0x02, 0x5f, 0x34, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x10, 0x04,
	0x12, 0x0c, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x10, 0x08, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x10, 0x10, 0x12, 0x08,
	0x0a, 0x04, 0x43, 0x61, 0x73, 0x68, 0x10, 0x20, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b,
	0x43, 0x61, 0x72, 0x64, 0x10, 0x40, 0x12, 0x0a, 0x0a, 0x05, 0x50, 0x61, 0x79, 0x53, 0x50, 0x10,
	0x80, 0x01, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x79, 0x10,
	0x80, 0x02, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x79, 0x10,
	0x80, 0x04, 0x32, 0x84, 0x07, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x53, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0e, 0x2e, 0x53, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x2d, 0x0a, 0x0b, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x13, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x12, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x18, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0d, 0x48, 0x79, 0x62,
	0x72, 0x69, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2a,
	0x0a, 0x09, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x56, 0x31, 0x12, 0x12, 0x2e, 0x50, 0x61,
	0x79, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x56, 0x32, 0x12, 0x14, 0x2e, 0x50, 0x61, 0x79, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x50, 0x61, 0x79, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0c, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x2e, 0x53, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x17, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x12, 0x2e, 0x50, 0x61, 0x79,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_payment_service_proto_rawDescOnce sync.Once
	file_payment_service_proto_rawDescData = file_payment_service_proto_rawDesc
)

func file_payment_service_proto_rawDescGZIP() []byte {
	file_payment_service_proto_rawDescOnce.Do(func() {
		file_payment_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_payment_service_proto_rawDescData)
	})
	return file_payment_service_proto_rawDescData
}

var file_payment_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_payment_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_payment_service_proto_goTypes = []interface{}{
	(EPayMethod)(0),                   // 0: EPayMethod
	(*AdjustOrderRequest)(nil),        // 1: AdjustOrderRequest
	(*DiscountBalanceRequest)(nil),    // 2: DiscountBalanceRequest
	(*DiscountIntegralRequest)(nil),   // 3: DiscountIntegralRequest
	(*WalletPaymentRequest)(nil),      // 4: WalletPaymentRequest
	(*HyperPaymentRequest)(nil),       // 5: HyperPaymentRequest
	(*FinishPaymentRequest)(nil),      // 6: FinishPaymentRequest
	(*IntegrateParamsRequest)(nil),    // 7: IntegrateParamsRequest
	(*IntegrateParamsResponse)(nil),   // 8: IntegrateParamsResponse
	(*PayGatewayV2Request)(nil),       // 9: PayGatewayV2Request
	(*PayGatewayResponse)(nil),        // 10: PayGatewayResponse
	(*OrderInfoRequest)(nil),          // 11: OrderInfoRequest
	(*MixedPaymentRequest)(nil),       // 12: MixedPaymentRequest
	(*PayGatewayRequest)(nil),         // 13: PayGatewayRequest
	(*SPaymentOrder)(nil),             // 14: SPaymentOrder
	(*PaymentOrderRequest)(nil),       // 15: PaymentOrderRequest
	(*SRequestPayData)(nil),           // 16: SRequestPayData
	(*STradeChanData)(nil),            // 17: STradeChanData
	(*SPrepareTradeData)(nil),         // 18: SPrepareTradeData
	(*SPaymentOrderData)(nil),         // 19: SPaymentOrderData
	(*PayIntegrateAppId)(nil),         // 20: PayIntegrateAppId
	(*QueryIntegrateAppResponse)(nil), // 21: QueryIntegrateAppResponse
	(*SIntegrateApp)(nil),             // 22: SIntegrateApp
	nil,                               // 23: PayGatewayRequest.DataEntry
	(*Empty)(nil),                     // 24: Empty
	(*Result)(nil),                    // 25: Result
}
var file_payment_service_proto_depIdxs = []int32{
	16, // 0: MixedPaymentRequest.data:type_name -> SRequestPayData
	23, // 1: PayGatewayRequest.data:type_name -> PayGatewayRequest.DataEntry
	17, // 2: SPaymentOrder.tradeData:type_name -> STradeChanData
	19, // 3: SPrepareTradeData.tradeOrders:type_name -> SPaymentOrderData
	22, // 4: QueryIntegrateAppResponse.value:type_name -> SIntegrateApp
	14, // 5: PaymentService.SubmitPaymentOrder:input_type -> SPaymentOrder
	15, // 6: PaymentService.GetPaymentOrder:input_type -> PaymentOrderRequest
	1,  // 7: PaymentService.AdjustOrder:input_type -> AdjustOrderRequest
	2,  // 8: PaymentService.DiscountByBalance:input_type -> DiscountBalanceRequest
	3,  // 9: PaymentService.DiscountByIntegral:input_type -> DiscountIntegralRequest
	4,  // 10: PaymentService.PaymentByWallet:input_type -> WalletPaymentRequest
	5,  // 11: PaymentService.HybridPayment:input_type -> HyperPaymentRequest
	6,  // 12: PaymentService.FinishPayment:input_type -> FinishPaymentRequest
	13, // 13: PaymentService.GatewayV1:input_type -> PayGatewayRequest
	11, // 14: PaymentService.GetPreparePaymentInfo:input_type -> OrderInfoRequest
	9,  // 15: PaymentService.GatewayV2:input_type -> PayGatewayV2Request
	12, // 16: PaymentService.MixedPayment:input_type -> MixedPaymentRequest
	22, // 17: PaymentService.SaveIntegrateApp:input_type -> SIntegrateApp
	24, // 18: PaymentService.QueryIntegrateAppList:input_type -> Empty
	7,  // 19: PaymentService.PrepareIntegrateParams:input_type -> IntegrateParamsRequest
	20, // 20: PaymentService.DeleteIntegrateApp:input_type -> PayIntegrateAppId
	25, // 21: PaymentService.SubmitPaymentOrder:output_type -> Result
	14, // 22: PaymentService.GetPaymentOrder:output_type -> SPaymentOrder
	25, // 23: PaymentService.AdjustOrder:output_type -> Result
	25, // 24: PaymentService.DiscountByBalance:output_type -> Result
	25, // 25: PaymentService.DiscountByIntegral:output_type -> Result
	25, // 26: PaymentService.PaymentByWallet:output_type -> Result
	25, // 27: PaymentService.HybridPayment:output_type -> Result
	25, // 28: PaymentService.FinishPayment:output_type -> Result
	25, // 29: PaymentService.GatewayV1:output_type -> Result
	18, // 30: PaymentService.GetPreparePaymentInfo:output_type -> SPrepareTradeData
	10, // 31: PaymentService.GatewayV2:output_type -> PayGatewayResponse
	25, // 32: PaymentService.MixedPayment:output_type -> Result
	25, // 33: PaymentService.SaveIntegrateApp:output_type -> Result
	21, // 34: PaymentService.QueryIntegrateAppList:output_type -> QueryIntegrateAppResponse
	8,  // 35: PaymentService.PrepareIntegrateParams:output_type -> IntegrateParamsResponse
	25, // 36: PaymentService.DeleteIntegrateApp:output_type -> Result
	21, // [21:37] is the sub-list for method output_type
	5,  // [5:21] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_payment_service_proto_init() }
func file_payment_service_proto_init() {
	if File_payment_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_payment_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountIntegralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyperPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrateParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayGatewayV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MixedPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPaymentOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRequestPayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STradeChanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPrepareTradeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPaymentOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayIntegrateAppId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIntegrateAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payment_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SIntegrateApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payment_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_service_proto_goTypes,
		DependencyIndexes: file_payment_service_proto_depIdxs,
		EnumInfos:         file_payment_service_proto_enumTypes,
		MessageInfos:      file_payment_service_proto_msgTypes,
	}.Build()
	File_payment_service_proto = out.File
	file_payment_service_proto_rawDesc = nil
	file_payment_service_proto_goTypes = nil
	file_payment_service_proto_depIdxs = nil
}
