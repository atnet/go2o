// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: message/order_dto.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * 订单状态
type EOrderStatus int32

const (
	EOrderStatus__3 EOrderStatus = 0 //***** 在履行前,订单可以取消申请退款  *****
	// * 等待支付
	EOrderStatus_StatAwaitingPayment EOrderStatus = 1
	// * 等待确认
	EOrderStatus_StatAwaitingConfirm EOrderStatus = 2
	// * 等待备货
	EOrderStatus_StatAwaitingPickup EOrderStatus = 3
	// * 等待发货
	EOrderStatus_StatAwaitingShipment EOrderStatus = 4
	// * 系统取消
	EOrderStatus_StatCancelled EOrderStatus = 11
	// * 买家申请取消,等待卖家确认
	EOrderStatus_StatAwaitingCancel EOrderStatus = 12
	// * 卖家谢绝订单,由于无货等原因
	EOrderStatus_StatDeclined EOrderStatus = 13
	// * 已退款,完成取消
	EOrderStatus_StatRefunded EOrderStatus = 14
	// * 部分发货(将订单商品分多个包裹发货)
	EOrderStatus_PartiallyShipped EOrderStatus = 5
	// * 完成发货
	EOrderStatus_StatShipped EOrderStatus = 6
	// * 订单已拆分
	EOrderStatus_StatBreak EOrderStatus = 7
	// * 订单完成
	EOrderStatus_StatCompleted EOrderStatus = 8
	// * 已退货
	EOrderStatus_StatGoodsRefunded EOrderStatus = 15
)

// Enum value maps for EOrderStatus.
var (
	EOrderStatus_name = map[int32]string{
		0:  "_3",
		1:  "StatAwaitingPayment",
		2:  "StatAwaitingConfirm",
		3:  "StatAwaitingPickup",
		4:  "StatAwaitingShipment",
		11: "StatCancelled",
		12: "StatAwaitingCancel",
		13: "StatDeclined",
		14: "StatRefunded",
		5:  "PartiallyShipped",
		6:  "StatShipped",
		7:  "StatBreak",
		8:  "StatCompleted",
		15: "StatGoodsRefunded",
	}
	EOrderStatus_value = map[string]int32{
		"_3":                   0,
		"StatAwaitingPayment":  1,
		"StatAwaitingConfirm":  2,
		"StatAwaitingPickup":   3,
		"StatAwaitingShipment": 4,
		"StatCancelled":        11,
		"StatAwaitingCancel":   12,
		"StatDeclined":         13,
		"StatRefunded":         14,
		"PartiallyShipped":     5,
		"StatShipped":          6,
		"StatBreak":            7,
		"StatCompleted":        8,
		"StatGoodsRefunded":    15,
	}
)

func (x EOrderStatus) Enum() *EOrderStatus {
	p := new(EOrderStatus)
	*p = x
	return p
}

func (x EOrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EOrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_message_order_dto_proto_enumTypes[0].Descriptor()
}

func (EOrderStatus) Type() protoreflect.EnumType {
	return &file_message_order_dto_proto_enumTypes[0]
}

func (x EOrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EOrderStatus.Descriptor instead.
func (EOrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{0}
}

// 订单商品项
type SOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 商品快照编号
	SnapshotId int64 `protobuf:"varint,2,opt,name=snapshotId,proto3" json:"snapshotId"`
	// Sku编号
	SkuId int64 `protobuf:"varint,3,opt,name=skuId,proto3" json:"skuId"`
	// 商品编号
	ItemId int64 `protobuf:"varint,4,opt,name=itemId,proto3" json:"itemId"`
	// 商品标题
	ItemTitle string `protobuf:"bytes,5,opt,name=itemTitle,proto3" json:"itemTitle"`
	// 商品图片
	Image string `protobuf:"bytes,6,opt,name=image,proto3" json:"image"`
	// 商品单价
	Price int64 `protobuf:"varint,7,opt,name=price,proto3" json:"price"`
	// 商品实际单价
	FinalPrice int64 `protobuf:"varint,8,opt,name=finalPrice,proto3" json:"finalPrice"`
	// 商品规格
	SpecWord string `protobuf:"bytes,9,opt,name=specWord,proto3" json:"specWord"`
	// 商品数量
	Quantity int32 `protobuf:"varint,10,opt,name=quantity,proto3" json:"quantity"`
	// 退货数量
	ReturnQuantity int32 `protobuf:"varint,11,opt,name=returnQuantity,proto3" json:"returnQuantity"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,12,opt,name=itemAmount,proto3" json:"itemAmount"`
	// 商品实际总金额
	FinalAmount int64 `protobuf:"varint,13,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 是否已发货
	IsShipped bool `protobuf:"varint,14,opt,name=isShipped,proto3" json:"isShipped"`
	// 其他信息
	Data map[string]string `protobuf:"bytes,15,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SOrderItem) Reset() {
	*x = SOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOrderItem) ProtoMessage() {}

func (x *SOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOrderItem.ProtoReflect.Descriptor instead.
func (*SOrderItem) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{0}
}

func (x *SOrderItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SOrderItem) GetSnapshotId() int64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SOrderItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SOrderItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SOrderItem) GetItemTitle() string {
	if x != nil {
		return x.ItemTitle
	}
	return ""
}

func (x *SOrderItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SOrderItem) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SOrderItem) GetFinalPrice() int64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *SOrderItem) GetSpecWord() string {
	if x != nil {
		return x.SpecWord
	}
	return ""
}

func (x *SOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SOrderItem) GetReturnQuantity() int32 {
	if x != nil {
		return x.ReturnQuantity
	}
	return 0
}

func (x *SOrderItem) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SOrderItem) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SOrderItem) GetIsShipped() bool {
	if x != nil {
		return x.IsShipped
	}
	return false
}

func (x *SOrderItem) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SParentOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 买家
	BuyerId int64 `protobuf:"varint,1,opt,name=buyerId,proto3" json:"buyerId"`
	// 买家用户名
	BuyerUser string `protobuf:"bytes,2,opt,name=buyerUser,proto3" json:"buyerUser"`
	// 订单号
	OrderNo string `protobuf:"bytes,3,opt,name=orderNo,proto3" json:"orderNo"`
	// 商品
	ItemCount int64 `protobuf:"varint,4,opt,name=itemCount,proto3" json:"itemCount"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,5,opt,name=itemAmount,proto3" json:"itemAmount"`
	// 抵扣金额
	DiscountAmount int64 `protobuf:"varint,6,opt,name=discountAmount,proto3" json:"discountAmount"`
	// 优惠金额
	DeductAmount int64 `protobuf:"varint,7,opt,name=deductAmount,proto3" json:"deductAmount"`
	// 快递费
	ExpressFee int64 `protobuf:"varint,8,opt,name=expressFee,proto3" json:"expressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,9,opt,name=packageFee,proto3" json:"packageFee"`
	// 最终金额
	FinalAmount int64 `protobuf:"varint,10,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 收货人
	Consignee *SConsigneeInfo `protobuf:"bytes,18,opt,name=consignee,proto3" json:"consignee"`
	// 子订单
	SubOrders []*SSubOrder `protobuf:"bytes,11,rep,name=subOrders,proto3" json:"subOrders"`
	// 是否支付
	IsPaid bool `protobuf:"varint,12,opt,name=isPaid,proto3" json:"isPaid"`
	// 状态
	Status int32 `protobuf:"varint,13,opt,name=status,proto3" json:"status"`
	// 状态文本
	StatusText string `protobuf:"bytes,14,opt,name=statusText,proto3" json:"statusText"`
	// 下单时间
	CreateTime int64 `protobuf:"zigzag64,15,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SParentOrder) Reset() {
	*x = SParentOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SParentOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SParentOrder) ProtoMessage() {}

func (x *SParentOrder) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SParentOrder.ProtoReflect.Descriptor instead.
func (*SParentOrder) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{1}
}

func (x *SParentOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SParentOrder) GetBuyerUser() string {
	if x != nil {
		return x.BuyerUser
	}
	return ""
}

func (x *SParentOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SParentOrder) GetItemCount() int64 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

func (x *SParentOrder) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SParentOrder) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SParentOrder) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SParentOrder) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SParentOrder) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SParentOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SParentOrder) GetConsignee() *SConsigneeInfo {
	if x != nil {
		return x.Consignee
	}
	return nil
}

func (x *SParentOrder) GetSubOrders() []*SSubOrder {
	if x != nil {
		return x.SubOrders
	}
	return nil
}

func (x *SParentOrder) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *SParentOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SParentOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *SParentOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 子订单
type SSubOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// 店铺编号
	ShopId int64 `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId"`
	// 店铺名称
	ShopName string `protobuf:"bytes,3,opt,name=shopName,proto3" json:"shopName"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,4,opt,name=itemAmount,proto3" json:"itemAmount"`
	// 优惠金额
	DiscountAmount int64 `protobuf:"varint,5,opt,name=discountAmount,proto3" json:"discountAmount"`
	// 抵扣金额
	DeductAmount int64 `protobuf:"varint,6,opt,name=deductAmount,proto3" json:"deductAmount"`
	// 调整金额
	AdjustAmount int64 `protobuf:"varint,7,opt,name=adjustAmount,proto3" json:"adjustAmount"`
	// 配送费
	ExpressFee int64 `protobuf:"varint,8,opt,name=expressFee,proto3" json:"expressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,9,opt,name=packageFee,proto3" json:"packageFee"`
	// 手续费
	TransactionFee int64 `protobuf:"varint,10,opt,name=transactionFee,proto3" json:"transactionFee"`
	// 订单总金额
	TotalAmount int64 `protobuf:"varint,11,opt,name=totalAmount,proto3" json:"totalAmount"`
	// 最终金额
	FinalAmount int64 `protobuf:"varint,12,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 买家留言
	BuyerComment string `protobuf:"bytes,13,opt,name=buyerComment,proto3" json:"buyerComment"`
	// 状态
	Status int32 `protobuf:"varint,14,opt,name=status,proto3" json:"status"`
	// 商品列表
	Items []*SOrderItem `protobuf:"bytes,15,rep,name=items,proto3" json:"items"`
	// 支付时间
	PaymentTime int64 `protobuf:"varint,16,opt,name=paymentTime,proto3" json:"paymentTime"`
	// 关闭时间
	CloseTime int64 `protobuf:"varint,17,opt,name=closeTime,proto3" json:"closeTime"`
	// 状态文本
	StatusText string `protobuf:"bytes,18,opt,name=statusText,proto3" json:"statusText"`
}

func (x *SSubOrder) Reset() {
	*x = SSubOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSubOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSubOrder) ProtoMessage() {}

func (x *SSubOrder) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSubOrder.ProtoReflect.Descriptor instead.
func (*SSubOrder) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{2}
}

func (x *SSubOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SSubOrder) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SSubOrder) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *SSubOrder) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SSubOrder) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SSubOrder) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SSubOrder) GetAdjustAmount() int64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SSubOrder) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SSubOrder) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SSubOrder) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SSubOrder) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SSubOrder) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SSubOrder) GetBuyerComment() string {
	if x != nil {
		return x.BuyerComment
	}
	return ""
}

func (x *SSubOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SSubOrder) GetItems() []*SOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SSubOrder) GetPaymentTime() int64 {
	if x != nil {
		return x.PaymentTime
	}
	return 0
}

func (x *SSubOrder) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *SSubOrder) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

// 子订单
type SSingleOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单编号
	OrderId int64 `protobuf:"varint,1,opt,name=orderId,proto3" json:"orderId"`
	// 订单类型
	OrderType int32 `protobuf:"varint,2,opt,name=orderType,proto3" json:"orderType"`
	// 订单号
	OrderNo string `protobuf:"bytes,3,opt,name=orderNo,proto3" json:"orderNo"`
	// 买家编号
	BuyerId int64 `protobuf:"varint,4,opt,name=buyerId,proto3" json:"buyerId"`
	// 卖家编号
	SellerId int64 `protobuf:"varint,5,opt,name=sellerId,proto3" json:"sellerId"`
	// 卖家名称
	SellerName string `protobuf:"bytes,6,opt,name=sellerName,proto3" json:"sellerName"`
	// 订单商品项
	Items []*SOrderItem `protobuf:"bytes,7,rep,name=items,proto3" json:"items"`
	// 商品总金额
	ItemAmount int32 `protobuf:"zigzag32,8,opt,name=itemAmount,proto3" json:"itemAmount"`
	// 优惠金额
	DiscountAmount int32 `protobuf:"zigzag32,9,opt,name=discountAmount,proto3" json:"discountAmount"`
	// 配送费
	ExpressFee int32 `protobuf:"zigzag32,10,opt,name=expressFee,proto3" json:"expressFee"`
	// 包装费
	PackageFee int32 `protobuf:"zigzag32,11,opt,name=packageFee,proto3" json:"packageFee"`
	// 订单总金额
	TotalAmount int32 `protobuf:"zigzag32,12,opt,name=totalAmount,proto3" json:"totalAmount"`
	// 抵扣金额
	DeductAmount int32 `protobuf:"zigzag32,13,opt,name=deductAmount,proto3" json:"deductAmount"`
	// 手续费
	TransactionFee int32 `protobuf:"zigzag32,14,opt,name=transactionFee,proto3" json:"transactionFee"`
	// 调整金额
	AdjustAmount int32 `protobuf:"varint,15,opt,name=adjustAmount,proto3" json:"adjustAmount"`
	// 最终金额(订单总金额-抵扣金额+手续费+调整金额)
	FinalAmount int32 `protobuf:"zigzag32,16,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 买家留言
	BuyerComment string `protobuf:"bytes,17,opt,name=buyerComment,proto3" json:"buyerComment"`
	// 收货人
	Consignee *SConsigneeInfo `protobuf:"bytes,18,opt,name=consignee,proto3" json:"consignee"`
	// 下单时间
	SubmitTime int64 `protobuf:"zigzag64,19,opt,name=submitTime,proto3" json:"submitTime"`
	// 订单状态
	Status int32 `protobuf:"zigzag32,20,opt,name=status,proto3" json:"status"`
	// 订单状态描述
	StateDesc string `protobuf:"bytes,21,opt,name=stateDesc,proto3" json:"stateDesc"`
	// 过期时间
	ExpiresTime int64 `protobuf:"zigzag64,22,opt,name=expiresTime,proto3" json:"expiresTime"`
	// 支付时间
	PaymentTime int64 `protobuf:"zigzag64,23,opt,name=paymentTime,proto3" json:"paymentTime"`
	// 支付方式
	TradeData []*SOrderPayChanData `protobuf:"bytes,24,rep,name=tradeData,proto3" json:"tradeData"`
	// 发货时间
	ShipTime int64 `protobuf:"zigzag64,25,opt,name=shipTime,proto3" json:"shipTime"`
	// 快递单号
	ShipLogisticCode string `protobuf:"bytes,26,opt,name=shipLogisticCode,proto3" json:"shipLogisticCode"`
	// 快递名称
	ShipExpressName string `protobuf:"bytes,27,opt,name=shipExpressName,proto3" json:"shipExpressName"`
	// 扩展信息
	Data map[string]string `protobuf:"bytes,28,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SSingleOrder) Reset() {
	*x = SSingleOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSingleOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSingleOrder) ProtoMessage() {}

func (x *SSingleOrder) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSingleOrder.ProtoReflect.Descriptor instead.
func (*SSingleOrder) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{3}
}

func (x *SSingleOrder) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SSingleOrder) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *SSingleOrder) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SSingleOrder) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SSingleOrder) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *SSingleOrder) GetSellerName() string {
	if x != nil {
		return x.SellerName
	}
	return ""
}

func (x *SSingleOrder) GetItems() []*SOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SSingleOrder) GetItemAmount() int32 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SSingleOrder) GetDiscountAmount() int32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SSingleOrder) GetExpressFee() int32 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SSingleOrder) GetPackageFee() int32 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *SSingleOrder) GetTotalAmount() int32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *SSingleOrder) GetDeductAmount() int32 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *SSingleOrder) GetTransactionFee() int32 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SSingleOrder) GetAdjustAmount() int32 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SSingleOrder) GetFinalAmount() int32 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *SSingleOrder) GetBuyerComment() string {
	if x != nil {
		return x.BuyerComment
	}
	return ""
}

func (x *SSingleOrder) GetConsignee() *SConsigneeInfo {
	if x != nil {
		return x.Consignee
	}
	return nil
}

func (x *SSingleOrder) GetSubmitTime() int64 {
	if x != nil {
		return x.SubmitTime
	}
	return 0
}

func (x *SSingleOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SSingleOrder) GetStateDesc() string {
	if x != nil {
		return x.StateDesc
	}
	return ""
}

func (x *SSingleOrder) GetExpiresTime() int64 {
	if x != nil {
		return x.ExpiresTime
	}
	return 0
}

func (x *SSingleOrder) GetPaymentTime() int64 {
	if x != nil {
		return x.PaymentTime
	}
	return 0
}

func (x *SSingleOrder) GetTradeData() []*SOrderPayChanData {
	if x != nil {
		return x.TradeData
	}
	return nil
}

func (x *SSingleOrder) GetShipTime() int64 {
	if x != nil {
		return x.ShipTime
	}
	return 0
}

func (x *SSingleOrder) GetShipLogisticCode() string {
	if x != nil {
		return x.ShipLogisticCode
	}
	return ""
}

func (x *SSingleOrder) GetShipExpressName() string {
	if x != nil {
		return x.ShipExpressName
	}
	return ""
}

func (x *SSingleOrder) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 收货人信息
type SConsigneeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 收货人
	ConsigneeName string `protobuf:"bytes,1,opt,name=consigneeName,proto3" json:"consigneeName"`
	// 收货电话
	ConsigneePhone string `protobuf:"bytes,2,opt,name=consigneePhone,proto3" json:"consigneePhone"`
	// 配送地址
	ShippingAddress string `protobuf:"bytes,3,opt,name=shippingAddress,proto3" json:"shippingAddress"`
	// 收货人是否已更改
	IsModified bool `protobuf:"varint,4,opt,name=isModified,proto3" json:"isModified"`
}

func (x *SConsigneeInfo) Reset() {
	*x = SConsigneeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SConsigneeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SConsigneeInfo) ProtoMessage() {}

func (x *SConsigneeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SConsigneeInfo.ProtoReflect.Descriptor instead.
func (*SConsigneeInfo) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{4}
}

func (x *SConsigneeInfo) GetConsigneeName() string {
	if x != nil {
		return x.ConsigneeName
	}
	return ""
}

func (x *SConsigneeInfo) GetConsigneePhone() string {
	if x != nil {
		return x.ConsigneePhone
	}
	return ""
}

func (x *SConsigneeInfo) GetShippingAddress() string {
	if x != nil {
		return x.ShippingAddress
	}
	return ""
}

func (x *SConsigneeInfo) GetIsModified() bool {
	if x != nil {
		return x.IsModified
	}
	return false
}

// * 交易方式数据
type SOrderPayChanData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 支付途径
	ChanId int32 `protobuf:"zigzag32,1,opt,name=chanId,proto3" json:"chanId"`
	// 方式描述
	ChanName string `protobuf:"bytes,2,opt,name=chanName,proto3" json:"chanName"`
	// * 交易代码
	ChanCode string `protobuf:"bytes,3,opt,name=chanCode,proto3" json:"chanCode"`
	// * 支付金额
	Amount int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount"`
	// * 外部交易单号
	OutTradeNo string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo"`
}

func (x *SOrderPayChanData) Reset() {
	*x = SOrderPayChanData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SOrderPayChanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SOrderPayChanData) ProtoMessage() {}

func (x *SOrderPayChanData) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SOrderPayChanData.ProtoReflect.Descriptor instead.
func (*SOrderPayChanData) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{5}
}

func (x *SOrderPayChanData) GetChanId() int32 {
	if x != nil {
		return x.ChanId
	}
	return 0
}

func (x *SOrderPayChanData) GetChanName() string {
	if x != nil {
		return x.ChanName
	}
	return ""
}

func (x *SOrderPayChanData) GetChanCode() string {
	if x != nil {
		return x.ChanCode
	}
	return ""
}

func (x *SOrderPayChanData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SOrderPayChanData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

// 更改订单收货人请求
type ChangeOrderAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=sub,proto3" json:"sub"`
	// 地址信息
	AddressId int64 `protobuf:"varint,3,opt,name=addressId,proto3" json:"addressId"`
}

func (x *ChangeOrderAddressRequest) Reset() {
	*x = ChangeOrderAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeOrderAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeOrderAddressRequest) ProtoMessage() {}

func (x *ChangeOrderAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeOrderAddressRequest.ProtoReflect.Descriptor instead.
func (*ChangeOrderAddressRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeOrderAddressRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *ChangeOrderAddressRequest) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

func (x *ChangeOrderAddressRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

// todo: 批发的参数改为属性而不是map
type SubmitOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单类型
	OrderType int32 `protobuf:"varint,1,opt,name=orderType,proto3" json:"orderType"`
	// 买家编号
	BuyerId int64 `protobuf:"varint,2,opt,name=buyerId,proto3" json:"buyerId"`
	// 收货地址编号
	AddressId int64 `protobuf:"varint,3,opt,name=addressId,proto3" json:"addressId"`
	// 订单标题
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject"`
	// 优惠券
	CouponCode string `protobuf:"bytes,5,opt,name=couponCode,proto3" json:"couponCode"`
	// 推广返利用户代码
	AffiliateCode string `protobuf:"bytes,6,opt,name=affiliateCode,proto3" json:"affiliateCode"`
	// 是否使用余额抵扣
	BalanceDeduct bool `protobuf:"varint,7,opt,name=balanceDeduct,proto3" json:"balanceDeduct"`
	// 是否使用钱包抵扣
	WalletDeduct bool `protobuf:"varint,8,opt,name=walletDeduct,proto3" json:"walletDeduct"`
	// 其他数据
	Data map[string]string `protobuf:"bytes,9,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 交易类订单请求参数
	TradeOrder *TradeOrderRequest `protobuf:"bytes,10,opt,name=tradeOrder,proto3" json:"tradeOrder"`
}

func (x *SubmitOrderRequest) Reset() {
	*x = SubmitOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitOrderRequest) ProtoMessage() {}

func (x *SubmitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitOrderRequest) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *SubmitOrderRequest) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SubmitOrderRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *SubmitOrderRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SubmitOrderRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *SubmitOrderRequest) GetAffiliateCode() string {
	if x != nil {
		return x.AffiliateCode
	}
	return ""
}

func (x *SubmitOrderRequest) GetBalanceDeduct() bool {
	if x != nil {
		return x.BalanceDeduct
	}
	return false
}

func (x *SubmitOrderRequest) GetWalletDeduct() bool {
	if x != nil {
		return x.WalletDeduct
	}
	return false
}

func (x *SubmitOrderRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubmitOrderRequest) GetTradeOrder() *TradeOrderRequest {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

// 交易订单请求参数
type TradeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 店铺编号
	StoreId int64 `protobuf:"varint,1,opt,name=storeId,proto3" json:"storeId"`
	// 交易金额
	TradeAmount int64 `protobuf:"varint,2,opt,name=tradeAmount,proto3" json:"tradeAmount"`
	// 优惠比例
	Discount float32 `protobuf:"fixed32,3,opt,name=discount,proto3" json:"discount"`
}

func (x *TradeOrderRequest) Reset() {
	*x = TradeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOrderRequest) ProtoMessage() {}

func (x *TradeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOrderRequest.ProtoReflect.Descriptor instead.
func (*TradeOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{8}
}

func (x *TradeOrderRequest) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *TradeOrderRequest) GetTradeAmount() int64 {
	if x != nil {
		return x.TradeAmount
	}
	return 0
}

func (x *TradeOrderRequest) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

// 提交订单请求
type SubmitNormalOrderV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 买家编号
	BuyerId int64 `protobuf:"varint,1,opt,name=buyerId,proto3" json:"buyerId"`
	// 购物车编码
	CartCode string `protobuf:"bytes,2,opt,name=cartCode,proto3" json:"cartCode"`
	// 收货地址编号
	AddressId int64 `protobuf:"varint,3,opt,name=addressId,proto3" json:"addressId"`
	// 订单标题
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject"`
	// 优惠券
	CouponCode string `protobuf:"bytes,5,opt,name=couponCode,proto3" json:"couponCode"`
	// 是否使用余额抵扣
	BalanceDeduct bool `protobuf:"varint,6,opt,name=balanceDeduct,proto3" json:"balanceDeduct"`
	// 是否使用钱包抵扣
	WalletDeduct bool `protobuf:"varint,7,opt,name=walletDeduct,proto3" json:"walletDeduct"`
	// 推广返利用户代码
	AffiliateCode string `protobuf:"bytes,8,opt,name=affiliateCode,proto3" json:"affiliateCode"`
}

func (x *SubmitNormalOrderV2Request) Reset() {
	*x = SubmitNormalOrderV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitNormalOrderV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitNormalOrderV2Request) ProtoMessage() {}

func (x *SubmitNormalOrderV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitNormalOrderV2Request.ProtoReflect.Descriptor instead.
func (*SubmitNormalOrderV2Request) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitNormalOrderV2Request) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *SubmitNormalOrderV2Request) GetCartCode() string {
	if x != nil {
		return x.CartCode
	}
	return ""
}

func (x *SubmitNormalOrderV2Request) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *SubmitNormalOrderV2Request) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SubmitNormalOrderV2Request) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *SubmitNormalOrderV2Request) GetBalanceDeduct() bool {
	if x != nil {
		return x.BalanceDeduct
	}
	return false
}

func (x *SubmitNormalOrderV2Request) GetWalletDeduct() bool {
	if x != nil {
		return x.WalletDeduct
	}
	return false
}

func (x *SubmitNormalOrderV2Request) GetAffiliateCode() string {
	if x != nil {
		return x.AffiliateCode
	}
	return ""
}

// 订单提交返回数据
type OrderSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 订单号，多个订单号，用","分割
	OrderNo string `protobuf:"bytes,3,opt,name=orderNo,proto3" json:"orderNo"`
	// 是否已支付
	IsPayFinish bool `protobuf:"varint,4,opt,name=isPayFinish,proto3" json:"isPayFinish"`
	// 合并支付
	IsMergePay bool `protobuf:"varint,5,opt,name=isMergePay,proto3" json:"isMergePay"`
	// 支付单号
	PaymentOrderNo string `protobuf:"bytes,6,opt,name=paymentOrderNo,proto3" json:"paymentOrderNo"`
	// 交易金额
	TradeAmount int64 `protobuf:"varint,7,opt,name=tradeAmount,proto3" json:"tradeAmount"`
}

func (x *OrderSubmitResponse) Reset() {
	*x = OrderSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSubmitResponse) ProtoMessage() {}

func (x *OrderSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSubmitResponse.ProtoReflect.Descriptor instead.
func (*OrderSubmitResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{10}
}

func (x *OrderSubmitResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *OrderSubmitResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *OrderSubmitResponse) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderSubmitResponse) GetIsPayFinish() bool {
	if x != nil {
		return x.IsPayFinish
	}
	return false
}

func (x *OrderSubmitResponse) GetIsMergePay() bool {
	if x != nil {
		return x.IsMergePay
	}
	return false
}

func (x *OrderSubmitResponse) GetPaymentOrderNo() string {
	if x != nil {
		return x.PaymentOrderNo
	}
	return ""
}

func (x *OrderSubmitResponse) GetTradeAmount() int64 {
	if x != nil {
		return x.TradeAmount
	}
	return 0
}

// 获取订单请求
type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// 是否为子订单
	SubOrder bool `protobuf:"varint,2,opt,name=subOrder,proto3" json:"subOrder"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *GetOrderRequest) GetSubOrder() bool {
	if x != nil {
		return x.SubOrder
	}
	return false
}

// 提交交易类订单请求
type TradeOrderSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单
	Order *SSingleOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order"`
	// 优惠比例
	Rate float64 `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate"`
}

func (x *TradeOrderSubmitRequest) Reset() {
	*x = TradeOrderSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeOrderSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOrderSubmitRequest) ProtoMessage() {}

func (x *TradeOrderSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOrderSubmitRequest.ProtoReflect.Descriptor instead.
func (*TradeOrderSubmitRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{12}
}

func (x *TradeOrderSubmitRequest) GetOrder() *SSingleOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *TradeOrderSubmitRequest) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

// 提交交易类订单凭据
type TradeOrderTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64  `protobuf:"zigzag64,1,opt,name=orderId,proto3" json:"orderId"`
	Image   string `protobuf:"bytes,2,opt,name=image,proto3" json:"image"`
}

func (x *TradeOrderTicketRequest) Reset() {
	*x = TradeOrderTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeOrderTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeOrderTicketRequest) ProtoMessage() {}

func (x *TradeOrderTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeOrderTicketRequest.ProtoReflect.Descriptor instead.
func (*TradeOrderTicketRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{13}
}

func (x *TradeOrderTicketRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *TradeOrderTicketRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type ComplexItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SOrderItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *ComplexItemsResponse) Reset() {
	*x = ComplexItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplexItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplexItemsResponse) ProtoMessage() {}

func (x *ComplexItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplexItemsResponse.ProtoReflect.Descriptor instead.
func (*ComplexItemsResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{14}
}

func (x *ComplexItemsResponse) GetValue() []*SOrderItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// 订单编号
type OrderId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *OrderId) Reset() {
	*x = OrderId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderId) ProtoMessage() {}

func (x *OrderId) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderId.ProtoReflect.Descriptor instead.
func (*OrderId) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{15}
}

func (x *OrderId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 订单号
type OrderNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=sub,proto3" json:"sub"`
}

func (x *OrderNo) Reset() {
	*x = OrderNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderNo) ProtoMessage() {}

func (x *OrderNo) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderNo.ProtoReflect.Descriptor instead.
func (*OrderNo) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{16}
}

func (x *OrderNo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderNo) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

// 订单号
type OrderNoV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value"`
}

func (x *OrderNoV2) Reset() {
	*x = OrderNoV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderNoV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderNoV2) ProtoMessage() {}

func (x *OrderNoV2) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderNoV2.ProtoReflect.Descriptor instead.
func (*OrderNoV2) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{17}
}

func (x *OrderNoV2) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type OrderIdOrNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 订单号
	OrderNo string `protobuf:"bytes,2,opt,name=orderNo,proto3" json:"orderNo"`
}

func (x *OrderIdOrNo) Reset() {
	*x = OrderIdOrNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderIdOrNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderIdOrNo) ProtoMessage() {}

func (x *OrderIdOrNo) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderIdOrNo.ProtoReflect.Descriptor instead.
func (*OrderIdOrNo) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{18}
}

func (x *OrderIdOrNo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderIdOrNo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=sub,proto3" json:"sub"`
	// 是否为买家取消
	IsBuyerCancel bool `protobuf:"varint,3,opt,name=isBuyerCancel,proto3" json:"isBuyerCancel"`
	// 取消原因
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason"`
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{19}
}

func (x *CancelOrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *CancelOrderRequest) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

func (x *CancelOrderRequest) GetIsBuyerCancel() bool {
	if x != nil {
		return x.IsBuyerCancel
	}
	return false
}

func (x *CancelOrderRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type OrderShipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 订单号
	OrderNo string `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo"`
	// 是否为子订单
	Sub bool `protobuf:"varint,2,opt,name=sub,proto3" json:"sub"`
	// 快递编号
	ProviderId int64 `protobuf:"varint,3,opt,name=providerId,proto3" json:"providerId"`
	// 发货单号
	ShipOrderNo string `protobuf:"bytes,4,opt,name=shipOrderNo,proto3" json:"shipOrderNo"`
}

func (x *OrderShipmentRequest) Reset() {
	*x = OrderShipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderShipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderShipmentRequest) ProtoMessage() {}

func (x *OrderShipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderShipmentRequest.ProtoReflect.Descriptor instead.
func (*OrderShipmentRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{20}
}

func (x *OrderShipmentRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderShipmentRequest) GetSub() bool {
	if x != nil {
		return x.Sub
	}
	return false
}

func (x *OrderShipmentRequest) GetProviderId() int64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *OrderShipmentRequest) GetShipOrderNo() string {
	if x != nil {
		return x.ShipOrderNo
	}
	return ""
}

// 预生成订单商品项
type RPrepareOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"zigzag64,1,opt,name=itemId,proto3" json:"itemId"`
	// SKU编号
	SkuId int64 `protobuf:"zigzag64,2,opt,name=skuId,proto3" json:"skuId"`
	// 数量
	Quantity int32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity"`
}

func (x *RPrepareOrderItem) Reset() {
	*x = RPrepareOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPrepareOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPrepareOrderItem) ProtoMessage() {}

func (x *RPrepareOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPrepareOrderItem.ProtoReflect.Descriptor instead.
func (*RPrepareOrderItem) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{21}
}

func (x *RPrepareOrderItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *RPrepareOrderItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *RPrepareOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// * 预生成订单请求
type PrepareOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 买家编号
	BuyerId int64 `protobuf:"varint,1,opt,name=buyerId,proto3" json:"buyerId"`
	// * 购物车编码
	CartCode string `protobuf:"bytes,2,opt,name=cartCode,proto3" json:"cartCode"`
	// * 收货地址
	AddressId int64 `protobuf:"varint,3,opt,name=addressId,proto3" json:"addressId"`
	// * 支付方式
	PaymentFlag int32 `protobuf:"varint,4,opt,name=paymentFlag,proto3" json:"paymentFlag"`
	// * 优惠券
	CouponCode string `protobuf:"bytes,5,opt,name=couponCode,proto3" json:"couponCode"`
	// 订单主题(可选)
	Subject string `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject"`
	// 预生成订单商品,如果传空,则默认使用购物车标记为结算的商品
	Item *RPrepareOrderItem `protobuf:"bytes,7,opt,name=item,proto3" json:"item"`
}

func (x *PrepareOrderRequest) Reset() {
	*x = PrepareOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareOrderRequest) ProtoMessage() {}

func (x *PrepareOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareOrderRequest.ProtoReflect.Descriptor instead.
func (*PrepareOrderRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{22}
}

func (x *PrepareOrderRequest) GetBuyerId() int64 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

func (x *PrepareOrderRequest) GetCartCode() string {
	if x != nil {
		return x.CartCode
	}
	return ""
}

func (x *PrepareOrderRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *PrepareOrderRequest) GetPaymentFlag() int32 {
	if x != nil {
		return x.PaymentFlag
	}
	return 0
}

func (x *PrepareOrderRequest) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *PrepareOrderRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PrepareOrderRequest) GetItem() *RPrepareOrderItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// * 预生成订单响应
type PrepareOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 订单类型
	OrderType int32 `protobuf:"varint,3,opt,name=orderType,proto3" json:"orderType"`
	// 订单项目
	Sellers []*SPrepareOrderGroup `protobuf:"bytes,4,rep,name=sellers,proto3" json:"sellers"`
	// 配送地址编号
	ShipmentAddressId int64 `protobuf:"varint,5,opt,name=shipmentAddressId,proto3" json:"shipmentAddressId"`
	// 收货人
	Consignee *SConsigneeInfo `protobuf:"bytes,6,opt,name=consignee,proto3" json:"consignee"`
	// 商品总金额
	ItemAmount int64 `protobuf:"varint,7,opt,name=itemAmount,proto3" json:"itemAmount"`
	// 优惠金额
	DiscountAmount int64 `protobuf:"varint,8,opt,name=discountAmount,proto3" json:"discountAmount"`
	// 抵扣金额
	DeductAmount int64 `protobuf:"varint,9,opt,name=deductAmount,proto3" json:"deductAmount"`
	// 调整金额
	AdjustAmount int64 `protobuf:"varint,10,opt,name=adjustAmount,proto3" json:"adjustAmount"`
	// 配送费
	ExpressFee int64 `protobuf:"varint,11,opt,name=expressFee,proto3" json:"expressFee"`
	// 包装费
	PackageFee int64 `protobuf:"varint,12,opt,name=packageFee,proto3" json:"packageFee"`
	// 手续费
	TransactionFee int32 `protobuf:"varint,13,opt,name=transactionFee,proto3" json:"transactionFee"`
	// 订单总金额
	TotalAmount int32 `protobuf:"varint,14,opt,name=totalAmount,proto3" json:"totalAmount"`
	// 最终金额
	FinalAmount int64 `protobuf:"varint,15,opt,name=finalAmount,proto3" json:"finalAmount"`
	// 积分
	BuyerIntegral int64 `protobuf:"zigzag64,16,opt,name=buyerIntegral,proto3" json:"buyerIntegral"`
	// 商城余额
	BuyerBalance int64 `protobuf:"zigzag64,17,opt,name=buyerBalance,proto3" json:"buyerBalance"`
	// 钱包余额
	BuyerWallet int64 `protobuf:"zigzag64,18,opt,name=buyerWallet,proto3" json:"buyerWallet"`
}

func (x *PrepareOrderResponse) Reset() {
	*x = PrepareOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareOrderResponse) ProtoMessage() {}

func (x *PrepareOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareOrderResponse.ProtoReflect.Descriptor instead.
func (*PrepareOrderResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{23}
}

func (x *PrepareOrderResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *PrepareOrderResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *PrepareOrderResponse) GetOrderType() int32 {
	if x != nil {
		return x.OrderType
	}
	return 0
}

func (x *PrepareOrderResponse) GetSellers() []*SPrepareOrderGroup {
	if x != nil {
		return x.Sellers
	}
	return nil
}

func (x *PrepareOrderResponse) GetShipmentAddressId() int64 {
	if x != nil {
		return x.ShipmentAddressId
	}
	return 0
}

func (x *PrepareOrderResponse) GetConsignee() *SConsigneeInfo {
	if x != nil {
		return x.Consignee
	}
	return nil
}

func (x *PrepareOrderResponse) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetDeductAmount() int64 {
	if x != nil {
		return x.DeductAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetAdjustAmount() int64 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetPackageFee() int64 {
	if x != nil {
		return x.PackageFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetTransactionFee() int32 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *PrepareOrderResponse) GetTotalAmount() int32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *PrepareOrderResponse) GetBuyerIntegral() int64 {
	if x != nil {
		return x.BuyerIntegral
	}
	return 0
}

func (x *PrepareOrderResponse) GetBuyerBalance() int64 {
	if x != nil {
		return x.BuyerBalance
	}
	return 0
}

func (x *PrepareOrderResponse) GetBuyerWallet() int64 {
	if x != nil {
		return x.BuyerWallet
	}
	return 0
}

// 预生成订单店铺分组
type SPrepareOrderGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 供货商编号
	SellerId int64 `protobuf:"zigzag64,1,opt,name=sellerId,proto3" json:"sellerId"`
	// 店铺编号
	ShopId int64 `protobuf:"zigzag64,2,opt,name=shopId,proto3" json:"shopId"`
	// 店铺名称
	ShopName string `protobuf:"bytes,3,opt,name=shopName,proto3" json:"shopName"`
	// 商品
	Items []*SPrepareOrderItem `protobuf:"bytes,5,rep,name=items,proto3" json:"items"`
}

func (x *SPrepareOrderGroup) Reset() {
	*x = SPrepareOrderGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPrepareOrderGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPrepareOrderGroup) ProtoMessage() {}

func (x *SPrepareOrderGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPrepareOrderGroup.ProtoReflect.Descriptor instead.
func (*SPrepareOrderGroup) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{24}
}

func (x *SPrepareOrderGroup) GetSellerId() int64 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *SPrepareOrderGroup) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SPrepareOrderGroup) GetShopName() string {
	if x != nil {
		return x.ShopName
	}
	return ""
}

func (x *SPrepareOrderGroup) GetItems() []*SPrepareOrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 预生成订单店铺商品
type SPrepareOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品编号
	ItemId int64 `protobuf:"zigzag64,1,opt,name=itemId,proto3" json:"itemId"`
	// SKU编号
	SkuId int64 `protobuf:"zigzag64,2,opt,name=skuId,proto3" json:"skuId"`
	// 商品标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	// 商品图片
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image"`
	// 规格文本
	SpecWord string `protobuf:"bytes,5,opt,name=specWord,proto3" json:"specWord"`
	// 销售价
	Price float64 `protobuf:"fixed64,8,opt,name=price,proto3" json:"price"`
	// 数量
	Quantity int32 `protobuf:"zigzag32,9,opt,name=quantity,proto3" json:"quantity"`
}

func (x *SPrepareOrderItem) Reset() {
	*x = SPrepareOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPrepareOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPrepareOrderItem) ProtoMessage() {}

func (x *SPrepareOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPrepareOrderItem.ProtoReflect.Descriptor instead.
func (*SPrepareOrderItem) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{25}
}

func (x *SPrepareOrderItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SPrepareOrderItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SPrepareOrderItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SPrepareOrderItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SPrepareOrderItem) GetSpecWord() string {
	if x != nil {
		return x.SpecWord
	}
	return ""
}

func (x *SPrepareOrderItem) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SPrepareOrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// * 查询订单返利请求
type QueryRebateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRebateListRequest) Reset() {
	*x = QueryRebateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRebateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRebateListRequest) ProtoMessage() {}

func (x *QueryRebateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRebateListRequest.ProtoReflect.Descriptor instead.
func (*QueryRebateListRequest) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{26}
}

// * 查询订单返利响应
type QueryRebateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*SRebateList `protobuf:"bytes,1,rep,name=value,proto3" json:"value"`
}

func (x *QueryRebateListResponse) Reset() {
	*x = QueryRebateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRebateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRebateListResponse) ProtoMessage() {}

func (x *QueryRebateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRebateListResponse.ProtoReflect.Descriptor instead.
func (*QueryRebateListResponse) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{27}
}

func (x *QueryRebateListResponse) GetValue() []*SRebateList {
	if x != nil {
		return x.Value
	}
	return nil
}

// * 订单返利
type SRebateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 返利方案Id
	PlanId int32 `protobuf:"varint,2,opt,name=planId,proto3" json:"planId"`
	// * 成交人Id
	TraderId int64 `protobuf:"varint,3,opt,name=traderId,proto3" json:"traderId"`
	// * 分享码
	AffiliateCode string `protobuf:"bytes,4,opt,name=affiliateCode,proto3" json:"affiliateCode"`
	// * 订单号
	OrderNo string `protobuf:"bytes,5,opt,name=orderNo,proto3" json:"orderNo"`
	// * 订单标题
	OrderSubject string `protobuf:"bytes,6,opt,name=orderSubject,proto3" json:"orderSubject"`
	// * 订单金额
	OrderAmount int64 `protobuf:"varint,7,opt,name=orderAmount,proto3" json:"orderAmount"`
	// * 返利金额
	RebaseAmount int64 `protobuf:"varint,8,opt,name=rebaseAmount,proto3" json:"rebaseAmount"`
	// * 返利状态
	Status int32 `protobuf:"varint,9,opt,name=status,proto3" json:"status"`
	// * 创建时间
	CreateTime int64 `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime"`
	// * 更新时间
	UpdateTime int64 `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SRebateList) Reset() {
	*x = SRebateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRebateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRebateList) ProtoMessage() {}

func (x *SRebateList) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRebateList.ProtoReflect.Descriptor instead.
func (*SRebateList) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{28}
}

func (x *SRebateList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRebateList) GetPlanId() int32 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *SRebateList) GetTraderId() int64 {
	if x != nil {
		return x.TraderId
	}
	return 0
}

func (x *SRebateList) GetAffiliateCode() string {
	if x != nil {
		return x.AffiliateCode
	}
	return ""
}

func (x *SRebateList) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SRebateList) GetOrderSubject() string {
	if x != nil {
		return x.OrderSubject
	}
	return ""
}

func (x *SRebateList) GetOrderAmount() int64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *SRebateList) GetRebaseAmount() int64 {
	if x != nil {
		return x.RebaseAmount
	}
	return 0
}

func (x *SRebateList) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SRebateList) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SRebateList) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// * 订单返利详情
type SRebateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 编号
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// * 返利单Id
	DebateId int64 `protobuf:"varint,2,opt,name=debateId,proto3" json:"debateId"`
	// * 商品编号
	ItemId int64 `protobuf:"varint,3,opt,name=itemId,proto3" json:"itemId"`
	// * 商品名称
	ItemName string `protobuf:"bytes,4,opt,name=itemName,proto3" json:"itemName"`
	// * 商品图片
	ItemImage string `protobuf:"bytes,5,opt,name=itemImage,proto3" json:"itemImage"`
	// * 商品金额
	ItemAmount int64 `protobuf:"varint,6,opt,name=itemAmount,proto3" json:"itemAmount"`
	// * 返利金额
	RebateAmount int64 `protobuf:"varint,7,opt,name=rebateAmount,proto3" json:"rebateAmount"`
}

func (x *SRebateItem) Reset() {
	*x = SRebateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_order_dto_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRebateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRebateItem) ProtoMessage() {}

func (x *SRebateItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_order_dto_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRebateItem.ProtoReflect.Descriptor instead.
func (*SRebateItem) Descriptor() ([]byte, []int) {
	return file_message_order_dto_proto_rawDescGZIP(), []int{29}
}

func (x *SRebateItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRebateItem) GetDebateId() int64 {
	if x != nil {
		return x.DebateId
	}
	return 0
}

func (x *SRebateItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SRebateItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *SRebateItem) GetItemImage() string {
	if x != nil {
		return x.ItemImage
	}
	return ""
}

func (x *SRebateItem) GetItemAmount() int64 {
	if x != nil {
		return x.ItemAmount
	}
	return 0
}

func (x *SRebateItem) GetRebateAmount() int64 {
	if x != nil {
		return x.RebateAmount
	}
	return 0
}

var File_message_order_dto_proto protoreflect.FileDescriptor

var file_message_order_dto_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x03, 0x0a, 0x0a, 0x53, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x95, 0x04, 0x0a, 0x0c, 0x53, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x09, 0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x50, 0x61, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x50, 0x61, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd4, 0x04, 0x0a,
	0x09, 0x53, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x74,
	0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x8c, 0x08, 0x0a, 0x0c, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x46, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68,
	0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x73, 0x68,
	0x69, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68, 0x69,
	0x70, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x53, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x9b, 0x01,
	0x0a, 0x11, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x65, 0x0a, 0x19, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x73, 0x75, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x22, 0xb4, 0x03, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x50, 0x61, 0x79,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x50, 0x61, 0x79, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x17,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x22, 0x49, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x35, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x75, 0x62, 0x22, 0x21,
	0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x56, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x37, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x4f, 0x72, 0x4e, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0x7e, 0x0a, 0x12, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x73, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x22, 0x5d, 0x0a, 0x11, 0x52, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x73,
	0x6b, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0xed, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x9a, 0x05, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x07, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x46, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0c, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x8e, 0x01,
	0x0a, 0x12, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbb,
	0x01, 0x0a, 0x11, 0x53, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x18, 0x0a, 0x16,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x53, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd3, 0x02, 0x0a, 0x0b, 0x53, 0x52, 0x65, 0x62, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0b,
	0x53, 0x52, 0x65, 0x62, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x65, 0x62, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69,
	0x74, 0x65, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x62,
	0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x72, 0x65, 0x62, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0xa9, 0x02,
	0x0a, 0x0c, 0x45, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06,
	0x0a, 0x02, 0x5f, 0x33, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77,
	0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74,
	0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x0b, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x74, 0x61, 0x74, 0x41, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x44, 0x65, 0x63,
	0x6c, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x0d, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x0e, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x10, 0x05, 0x12,
	0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x10, 0x06,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x10, 0x07, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x0f, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_message_order_dto_proto_rawDescOnce sync.Once
	file_message_order_dto_proto_rawDescData = file_message_order_dto_proto_rawDesc
)

func file_message_order_dto_proto_rawDescGZIP() []byte {
	file_message_order_dto_proto_rawDescOnce.Do(func() {
		file_message_order_dto_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_order_dto_proto_rawDescData)
	})
	return file_message_order_dto_proto_rawDescData
}

var file_message_order_dto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_message_order_dto_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_message_order_dto_proto_goTypes = []interface{}{
	(EOrderStatus)(0),                  // 0: EOrderStatus
	(*SOrderItem)(nil),                 // 1: SOrderItem
	(*SParentOrder)(nil),               // 2: SParentOrder
	(*SSubOrder)(nil),                  // 3: SSubOrder
	(*SSingleOrder)(nil),               // 4: SSingleOrder
	(*SConsigneeInfo)(nil),             // 5: SConsigneeInfo
	(*SOrderPayChanData)(nil),          // 6: SOrderPayChanData
	(*ChangeOrderAddressRequest)(nil),  // 7: ChangeOrderAddressRequest
	(*SubmitOrderRequest)(nil),         // 8: SubmitOrderRequest
	(*TradeOrderRequest)(nil),          // 9: TradeOrderRequest
	(*SubmitNormalOrderV2Request)(nil), // 10: SubmitNormalOrderV2Request
	(*OrderSubmitResponse)(nil),        // 11: OrderSubmitResponse
	(*GetOrderRequest)(nil),            // 12: GetOrderRequest
	(*TradeOrderSubmitRequest)(nil),    // 13: TradeOrderSubmitRequest
	(*TradeOrderTicketRequest)(nil),    // 14: TradeOrderTicketRequest
	(*ComplexItemsResponse)(nil),       // 15: ComplexItemsResponse
	(*OrderId)(nil),                    // 16: OrderId
	(*OrderNo)(nil),                    // 17: OrderNo
	(*OrderNoV2)(nil),                  // 18: OrderNoV2
	(*OrderIdOrNo)(nil),                // 19: OrderIdOrNo
	(*CancelOrderRequest)(nil),         // 20: CancelOrderRequest
	(*OrderShipmentRequest)(nil),       // 21: OrderShipmentRequest
	(*RPrepareOrderItem)(nil),          // 22: RPrepareOrderItem
	(*PrepareOrderRequest)(nil),        // 23: PrepareOrderRequest
	(*PrepareOrderResponse)(nil),       // 24: PrepareOrderResponse
	(*SPrepareOrderGroup)(nil),         // 25: SPrepareOrderGroup
	(*SPrepareOrderItem)(nil),          // 26: SPrepareOrderItem
	(*QueryRebateListRequest)(nil),     // 27: QueryRebateListRequest
	(*QueryRebateListResponse)(nil),    // 28: QueryRebateListResponse
	(*SRebateList)(nil),                // 29: SRebateList
	(*SRebateItem)(nil),                // 30: SRebateItem
	nil,                                // 31: SOrderItem.DataEntry
	nil,                                // 32: SSingleOrder.DataEntry
	nil,                                // 33: SubmitOrderRequest.DataEntry
}
var file_message_order_dto_proto_depIdxs = []int32{
	31, // 0: SOrderItem.data:type_name -> SOrderItem.DataEntry
	5,  // 1: SParentOrder.consignee:type_name -> SConsigneeInfo
	3,  // 2: SParentOrder.subOrders:type_name -> SSubOrder
	1,  // 3: SSubOrder.items:type_name -> SOrderItem
	1,  // 4: SSingleOrder.items:type_name -> SOrderItem
	5,  // 5: SSingleOrder.consignee:type_name -> SConsigneeInfo
	6,  // 6: SSingleOrder.tradeData:type_name -> SOrderPayChanData
	32, // 7: SSingleOrder.data:type_name -> SSingleOrder.DataEntry
	33, // 8: SubmitOrderRequest.data:type_name -> SubmitOrderRequest.DataEntry
	9,  // 9: SubmitOrderRequest.tradeOrder:type_name -> TradeOrderRequest
	4,  // 10: TradeOrderSubmitRequest.order:type_name -> SSingleOrder
	1,  // 11: ComplexItemsResponse.value:type_name -> SOrderItem
	22, // 12: PrepareOrderRequest.item:type_name -> RPrepareOrderItem
	25, // 13: PrepareOrderResponse.sellers:type_name -> SPrepareOrderGroup
	5,  // 14: PrepareOrderResponse.consignee:type_name -> SConsigneeInfo
	26, // 15: SPrepareOrderGroup.items:type_name -> SPrepareOrderItem
	29, // 16: QueryRebateListResponse.value:type_name -> SRebateList
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_message_order_dto_proto_init() }
func file_message_order_dto_proto_init() {
	if File_message_order_dto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_order_dto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SParentOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSubOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSingleOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SConsigneeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SOrderPayChanData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeOrderAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitNormalOrderV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeOrderSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeOrderTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplexItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderNoV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderIdOrNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderShipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPrepareOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPrepareOrderGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPrepareOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRebateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRebateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRebateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_order_dto_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRebateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_order_dto_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_order_dto_proto_goTypes,
		DependencyIndexes: file_message_order_dto_proto_depIdxs,
		EnumInfos:         file_message_order_dto_proto_enumTypes,
		MessageInfos:      file_message_order_dto_proto_msgTypes,
	}.Build()
	File_message_order_dto_proto = out.File
	file_message_order_dto_proto_rawDesc = nil
	file_message_order_dto_proto_goTypes = nil
	file_message_order_dto_proto_depIdxs = nil
}
