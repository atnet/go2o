// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: rbac_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户登录
type RbacLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户名
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	// md5密码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	// IP地址
	IpAddress string `protobuf:"bytes,3,opt,name=ipAddress,proto3" json:"ipAddress"`
}

func (x *RbacLoginRequest) Reset() {
	*x = RbacLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacLoginRequest) ProtoMessage() {}

func (x *RbacLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacLoginRequest.ProtoReflect.Descriptor instead.
func (*RbacLoginRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{0}
}

func (x *RbacLoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RbacLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RbacLoginRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// 用户登录响应
type RbacLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误编码,0为成功
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// 用户编号
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId"`
	// 访问令牌
	AccessToken string `protobuf:"bytes,4,opt,name=accessToken,proto3" json:"accessToken"`
	// 角色编号
	Roles []string `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles"`
}

func (x *RbacLoginResponse) Reset() {
	*x = RbacLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacLoginResponse) ProtoMessage() {}

func (x *RbacLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacLoginResponse.ProtoReflect.Descriptor instead.
func (*RbacLoginResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{1}
}

func (x *RbacLoginResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *RbacLoginResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *RbacLoginResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RbacLoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RbacLoginResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 检查令牌请求
type RbacCheckTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 访问令牌
	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken"`
	// 检测过期时间,在此时间内过期,将生成返回新的令牌
	CheckExpireTime int64 `protobuf:"varint,2,opt,name=checkExpireTime,proto3" json:"checkExpireTime"`
	// 新生成令牌的有效时间
	RenewExpiresTime int64 `protobuf:"varint,3,opt,name=renewExpiresTime,proto3" json:"renewExpiresTime"`
}

func (x *RbacCheckTokenRequest) Reset() {
	*x = RbacCheckTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacCheckTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacCheckTokenRequest) ProtoMessage() {}

func (x *RbacCheckTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacCheckTokenRequest.ProtoReflect.Descriptor instead.
func (*RbacCheckTokenRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{2}
}

func (x *RbacCheckTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RbacCheckTokenRequest) GetCheckExpireTime() int64 {
	if x != nil {
		return x.CheckExpireTime
	}
	return 0
}

func (x *RbacCheckTokenRequest) GetRenewExpiresTime() int64 {
	if x != nil {
		return x.RenewExpiresTime
	}
	return 0
}

// 检查令牌响应
type RbacCheckTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 错误信息
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	// 会员编号
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	// 是否过期
	IsExpires bool `protobuf:"varint,3,opt,name=isExpires,proto3" json:"isExpires"`
	// 令牌过期时间
	TokenExpiresTime int64 `protobuf:"varint,4,opt,name=tokenExpiresTime,proto3" json:"tokenExpiresTime"`
	// 重新生成的令牌
	RenewAccessToken string `protobuf:"bytes,5,opt,name=renewAccessToken,proto3" json:"renewAccessToken"`
}

func (x *RbacCheckTokenResponse) Reset() {
	*x = RbacCheckTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacCheckTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacCheckTokenResponse) ProtoMessage() {}

func (x *RbacCheckTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacCheckTokenResponse.ProtoReflect.Descriptor instead.
func (*RbacCheckTokenResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{3}
}

func (x *RbacCheckTokenResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RbacCheckTokenResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RbacCheckTokenResponse) GetIsExpires() bool {
	if x != nil {
		return x.IsExpires
	}
	return false
}

func (x *RbacCheckTokenResponse) GetTokenExpiresTime() int64 {
	if x != nil {
		return x.TokenExpiresTime
	}
	return 0
}

func (x *RbacCheckTokenResponse) GetRenewAccessToken() string {
	if x != nil {
		return x.RenewAccessToken
	}
	return ""
}

// 用户资源响应,如果无用户则默认为超级管理员
type RbacUserResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色编号
	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles"`
	// 菜单(区分应用)
	Menu []*SUserMenu `protobuf:"bytes,3,rep,name=menu,proto3" json:"menu"`
	// 权限Key数组(不用区分应用)
	ResourceKeys []string `protobuf:"bytes,4,rep,name=resourceKeys,proto3" json:"resourceKeys"`
}

func (x *RbacUserResourceResponse) Reset() {
	*x = RbacUserResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacUserResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacUserResourceResponse) ProtoMessage() {}

func (x *RbacUserResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacUserResourceResponse.ProtoReflect.Descriptor instead.
func (*RbacUserResourceResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{4}
}

func (x *RbacUserResourceResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RbacUserResourceResponse) GetMenu() []*SUserMenu {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *RbacUserResourceResponse) GetResourceKeys() []string {
	if x != nil {
		return x.ResourceKeys
	}
	return nil
}

// 用户菜单
type SUserMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id"`
	// 资源键
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key"`
	// 资源名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 深度/层级
	Depth int32 `protobuf:"zigzag32,4,opt,name=depth,proto3" json:"depth"`
	// 资源路径
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path"`
	// 图标
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon"`
	// 序号
	SortNum int32 `protobuf:"zigzag32,7,opt,name=sortNum,proto3" json:"sortNum"`
	// 子资源
	Children []*SUserMenu `protobuf:"bytes,8,rep,name=children,proto3" json:"children"`
	// 组件名称
	ComponentName string `protobuf:"bytes,9,opt,name=componentName,proto3" json:"componentName"`
}

func (x *SUserMenu) Reset() {
	*x = SUserMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SUserMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SUserMenu) ProtoMessage() {}

func (x *SUserMenu) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SUserMenu.ProtoReflect.Descriptor instead.
func (*SUserMenu) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{5}
}

func (x *SUserMenu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SUserMenu) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SUserMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SUserMenu) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *SUserMenu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SUserMenu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SUserMenu) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SUserMenu) GetChildren() []*SUserMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *SUserMenu) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

type RoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *RoleId) Reset() {
	*x = RoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleId) ProtoMessage() {}

func (x *RoleId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleId.ProtoReflect.Descriptor instead.
func (*RoleId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{6}
}

func (x *RoleId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{7}
}

func (x *UserId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SRbacTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Label    string       `protobuf:"bytes,2,opt,name=label,proto3" json:"label"`
	Children []*SRbacTree `protobuf:"bytes,3,rep,name=children,proto3" json:"children"`
}

func (x *SRbacTree) Reset() {
	*x = SRbacTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRbacTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRbacTree) ProtoMessage() {}

func (x *SRbacTree) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRbacTree.ProtoReflect.Descriptor instead.
func (*SRbacTree) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{8}
}

func (x *SRbacTree) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRbacTree) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SRbacTree) GetChildren() []*SRbacTree {
	if x != nil {
		return x.Children
	}
	return nil
}

type SaveDepartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid"`
	// 部门编码
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`
	// 状态
	Enabled int32 `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SaveDepartRequest) Reset() {
	*x = SaveDepartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDepartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDepartRequest) ProtoMessage() {}

func (x *SaveDepartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDepartRequest.ProtoReflect.Descriptor instead.
func (*SaveDepartRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{9}
}

func (x *SaveDepartRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveDepartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveDepartRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SaveDepartRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SaveDepartRequest) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SaveDepartRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 保存部门结果
type SaveDepartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *SaveDepartResponse) Reset() {
	*x = SaveDepartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDepartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDepartResponse) ProtoMessage() {}

func (x *SaveDepartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDepartResponse.ProtoReflect.Descriptor instead.
func (*SaveDepartResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{10}
}

func (x *SaveDepartResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveDepartResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveDepartResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RbacDepartId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *RbacDepartId) Reset() {
	*x = RbacDepartId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacDepartId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacDepartId) ProtoMessage() {}

func (x *RbacDepartId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacDepartId.ProtoReflect.Descriptor instead.
func (*RbacDepartId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{11}
}

func (x *RbacDepartId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SPermDept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 上级部门
	Pid int64 `protobuf:"varint,3,opt,name=pid,proto3" json:"pid"`
	// 部门编码;
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`
	// 状态
	Enabled int32 `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SPermDept) Reset() {
	*x = SPermDept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPermDept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPermDept) ProtoMessage() {}

func (x *SPermDept) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPermDept.ProtoReflect.Descriptor instead.
func (*SPermDept) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{12}
}

func (x *SPermDept) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SPermDept) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SPermDept) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SPermDept) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SPermDept) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SPermDept) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type QueryPermDeptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPermDeptRequest) Reset() {
	*x = QueryPermDeptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermDeptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermDeptRequest) ProtoMessage() {}

func (x *QueryPermDeptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermDeptRequest.ProtoReflect.Descriptor instead.
func (*QueryPermDeptRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{13}
}

type QueryPermDeptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SPermDept `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *QueryPermDeptResponse) Reset() {
	*x = QueryPermDeptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermDeptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermDeptResponse) ProtoMessage() {}

func (x *QueryPermDeptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermDeptResponse.ProtoReflect.Descriptor instead.
func (*QueryPermDeptResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{14}
}

func (x *QueryPermDeptResponse) GetList() []*SPermDept {
	if x != nil {
		return x.List
	}
	return nil
}

type SaveJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 岗位名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled"`
	// 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort"`
	// 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=deptId,proto3" json:"deptId"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SaveJobRequest) Reset() {
	*x = SaveJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveJobRequest) ProtoMessage() {}

func (x *SaveJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveJobRequest.ProtoReflect.Descriptor instead.
func (*SaveJobRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{15}
}

func (x *SaveJobRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveJobRequest) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SaveJobRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SaveJobRequest) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SaveJobRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type SaveJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *SaveJobResponse) Reset() {
	*x = SaveJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveJobResponse) ProtoMessage() {}

func (x *SaveJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveJobResponse.ProtoReflect.Descriptor instead.
func (*SaveJobResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{16}
}

func (x *SaveJobResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveJobResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveJobResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RbacJobId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *RbacJobId) Reset() {
	*x = RbacJobId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacJobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacJobId) ProtoMessage() {}

func (x *RbacJobId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacJobId.ProtoReflect.Descriptor instead.
func (*RbacJobId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{17}
}

func (x *RbacJobId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SRbacJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 岗位名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled"`
	// 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort"`
	// 部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=deptId,proto3" json:"deptId"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SRbacJob) Reset() {
	*x = SRbacJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRbacJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRbacJob) ProtoMessage() {}

func (x *SRbacJob) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRbacJob.ProtoReflect.Descriptor instead.
func (*SRbacJob) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{18}
}

func (x *SRbacJob) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRbacJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SRbacJob) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SRbacJob) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SRbacJob) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SRbacJob) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 查询岗位请求
type QueryJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部门编号,默认为0. 该部门下的岗位也会查询出来
	DepartId int64 `protobuf:"varint,1,opt,name=departId,proto3" json:"departId"`
}

func (x *QueryJobRequest) Reset() {
	*x = QueryJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobRequest) ProtoMessage() {}

func (x *QueryJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobRequest.ProtoReflect.Descriptor instead.
func (*QueryJobRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{19}
}

func (x *QueryJobRequest) GetDepartId() int64 {
	if x != nil {
		return x.DepartId
	}
	return 0
}

// 查询岗位响应
type QueryJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SRbacJob `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *QueryJobResponse) Reset() {
	*x = QueryJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobResponse) ProtoMessage() {}

func (x *QueryJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobResponse.ProtoReflect.Descriptor instead.
func (*QueryJobResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{20}
}

func (x *QueryJobResponse) GetList() []*SRbacJob {
	if x != nil {
		return x.List
	}
	return nil
}

// 岗位列表
type PagingJobList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 岗位名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 岗位状态
	Enabled int32 `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled"`
	// 岗位排序
	Sort int32 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort"`
	// 部门名称
	DeptName string `protobuf:"bytes,5,opt,name=deptName,proto3" json:"deptName"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime"`
}

func (x *PagingJobList) Reset() {
	*x = PagingJobList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingJobList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingJobList) ProtoMessage() {}

func (x *PagingJobList) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingJobList.ProtoReflect.Descriptor instead.
func (*PagingJobList) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{21}
}

func (x *PagingJobList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingJobList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PagingJobList) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *PagingJobList) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PagingJobList) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *PagingJobList) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type RbacJobPagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *RbacJobPagingRequest) Reset() {
	*x = RbacJobPagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacJobPagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacJobPagingRequest) ProtoMessage() {}

func (x *RbacJobPagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacJobPagingRequest.ProtoReflect.Descriptor instead.
func (*RbacJobPagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{22}
}

func (x *RbacJobPagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingRbacJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Value []*PagingJobList `protobuf:"bytes,2,rep,name=value,proto3" json:"value"`
}

func (x *PagingRbacJobResponse) Reset() {
	*x = PagingRbacJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingRbacJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRbacJobResponse) ProtoMessage() {}

func (x *PagingRbacJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRbacJobResponse.ProtoReflect.Descriptor instead.
func (*PagingRbacJobResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{23}
}

func (x *PagingRbacJobResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingRbacJobResponse) GetValue() []*PagingJobList {
	if x != nil {
		return x.Value
	}
	return nil
}

type SaveRbacUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	// 密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	// 标志
	Flag int32 `protobuf:"varint,4,opt,name=flag,proto3" json:"flag"`
	// 头像
	ProfilePhoto string `protobuf:"bytes,5,opt,name=profilePhoto,proto3" json:"profilePhoto"`
	// 昵称
	Nickname string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname"`
	// 性别
	Gender int32 `protobuf:"varint,7,opt,name=gender,proto3" json:"gender"`
	// 邮箱
	Email string `protobuf:"bytes,8,opt,name=email,proto3" json:"email"`
	// 手机号码
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone"`
	// 部门编号
	DeptId int64 `protobuf:"varint,10,opt,name=deptId,proto3" json:"deptId"`
	// 岗位编号
	JobId int64 `protobuf:"varint,11,opt,name=jobId,proto3" json:"jobId"`
	// 状态：1启用、0禁用
	Enabled int32 `protobuf:"varint,12,opt,name=enabled,proto3" json:"enabled"`
	// 最后登录的日期
	LastLogin int64 `protobuf:"varint,13,opt,name=lastLogin,proto3" json:"lastLogin"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime"`
	// 用户角色
	Roles []int64 `protobuf:"varint,15,rep,packed,name=roles,proto3" json:"roles"`
}

func (x *SaveRbacUserRequest) Reset() {
	*x = SaveRbacUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRbacUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRbacUserRequest) ProtoMessage() {}

func (x *SaveRbacUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRbacUserRequest.ProtoReflect.Descriptor instead.
func (*SaveRbacUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{24}
}

func (x *SaveRbacUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveRbacUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SaveRbacUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SaveRbacUserRequest) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SaveRbacUserRequest) GetProfilePhoto() string {
	if x != nil {
		return x.ProfilePhoto
	}
	return ""
}

func (x *SaveRbacUserRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SaveRbacUserRequest) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SaveRbacUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveRbacUserRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SaveRbacUserRequest) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SaveRbacUserRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SaveRbacUserRequest) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SaveRbacUserRequest) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *SaveRbacUserRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SaveRbacUserRequest) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SaveRbacUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *SaveRbacUserResponse) Reset() {
	*x = SaveRbacUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRbacUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRbacUserResponse) ProtoMessage() {}

func (x *SaveRbacUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRbacUserResponse.ProtoReflect.Descriptor instead.
func (*SaveRbacUserResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{25}
}

func (x *SaveRbacUserResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveRbacUserResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveRbacUserResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RbacUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *RbacUserId) Reset() {
	*x = RbacUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacUserId) ProtoMessage() {}

func (x *RbacUserId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacUserId.ProtoReflect.Descriptor instead.
func (*RbacUserId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{26}
}

func (x *RbacUserId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SRbacUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	// 密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	// 标志
	Flag int32 `protobuf:"varint,4,opt,name=flag,proto3" json:"flag"`
	// 头像
	ProfilePhoto string `protobuf:"bytes,5,opt,name=profilePhoto,proto3" json:"profilePhoto"`
	// Nickname
	Nickname string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname"`
	// Gender
	Gender int32 `protobuf:"varint,7,opt,name=gender,proto3" json:"gender"`
	// 邮箱
	Email string `protobuf:"bytes,8,opt,name=email,proto3" json:"email"`
	// 手机号码
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone"`
	// 部门编号
	DeptId int64 `protobuf:"varint,10,opt,name=deptId,proto3" json:"deptId"`
	// 岗位编号
	JobId int64 `protobuf:"varint,11,opt,name=jobId,proto3" json:"jobId"`
	// 状态：1启用、0禁用
	Enabled int32 `protobuf:"varint,12,opt,name=enabled,proto3" json:"enabled"`
	// 最后登录的日期
	LastLogin int64 `protobuf:"varint,13,opt,name=lastLogin,proto3" json:"lastLogin"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime"`
	// 用户角色
	Roles []int64 `protobuf:"varint,15,rep,packed,name=roles,proto3" json:"roles"`
}

func (x *SRbacUser) Reset() {
	*x = SRbacUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRbacUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRbacUser) ProtoMessage() {}

func (x *SRbacUser) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRbacUser.ProtoReflect.Descriptor instead.
func (*SRbacUser) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{27}
}

func (x *SRbacUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRbacUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SRbacUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SRbacUser) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *SRbacUser) GetProfilePhoto() string {
	if x != nil {
		return x.ProfilePhoto
	}
	return ""
}

func (x *SRbacUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *SRbacUser) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SRbacUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SRbacUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SRbacUser) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SRbacUser) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SRbacUser) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *SRbacUser) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *SRbacUser) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SRbacUser) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type QueryPermUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryPermUserRequest) Reset() {
	*x = QueryPermUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermUserRequest) ProtoMessage() {}

func (x *QueryPermUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermUserRequest.ProtoReflect.Descriptor instead.
func (*QueryPermUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{28}
}

type QueryPermUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SRbacUser `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *QueryPermUserResponse) Reset() {
	*x = QueryPermUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPermUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPermUserResponse) ProtoMessage() {}

func (x *QueryPermUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPermUserResponse.ProtoReflect.Descriptor instead.
func (*QueryPermUserResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{29}
}

func (x *QueryPermUserResponse) GetList() []*SRbacUser {
	if x != nil {
		return x.List
	}
	return nil
}

type PagingUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	// 密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password"`
	// 标志
	Flag int32 `protobuf:"varint,4,opt,name=flag,proto3" json:"flag"`
	// 头像
	ProfilePhoto string `protobuf:"bytes,5,opt,name=profilePhoto,proto3" json:"profilePhoto"`
	// 昵称
	Nickname string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname"`
	// 性别
	Gender string `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender"`
	// 邮箱
	Email string `protobuf:"bytes,8,opt,name=email,proto3" json:"email"`
	// 手机号码
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone"`
	// 部门编号
	DeptId int64 `protobuf:"varint,10,opt,name=deptId,proto3" json:"deptId"`
	// 岗位编号
	JobId int64 `protobuf:"varint,11,opt,name=jobId,proto3" json:"jobId"`
	// 状态：1启用、0禁用
	Enabled int32 `protobuf:"varint,12,opt,name=enabled,proto3" json:"enabled"`
	// 最后登录的日期
	LastLogin int64 `protobuf:"varint,13,opt,name=lastLogin,proto3" json:"lastLogin"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime"`
}

func (x *PagingUser) Reset() {
	*x = PagingUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingUser) ProtoMessage() {}

func (x *PagingUser) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingUser.ProtoReflect.Descriptor instead.
func (*PagingUser) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{30}
}

func (x *PagingUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PagingUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PagingUser) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *PagingUser) GetProfilePhoto() string {
	if x != nil {
		return x.ProfilePhoto
	}
	return ""
}

func (x *PagingUser) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PagingUser) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *PagingUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PagingUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *PagingUser) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *PagingUser) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *PagingUser) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *PagingUser) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *PagingUser) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type PagingRbacUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 部门编号,默认为0. 该部门下的用户也会查询出来
	DepartId int64 `protobuf:"varint,1,opt,name=departId,proto3" json:"departId"`
	// 分页参数
	Params *SPagingParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (x *PagingRbacUserRequest) Reset() {
	*x = PagingRbacUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingRbacUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRbacUserRequest) ProtoMessage() {}

func (x *PagingRbacUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRbacUserRequest.ProtoReflect.Descriptor instead.
func (*PagingRbacUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{31}
}

func (x *PagingRbacUserRequest) GetDepartId() int64 {
	if x != nil {
		return x.DepartId
	}
	return 0
}

func (x *PagingRbacUserRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingRbacUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Value []*PagingUser `protobuf:"bytes,2,rep,name=value,proto3" json:"value"`
}

func (x *PagingRbacUserResponse) Reset() {
	*x = PagingRbacUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingRbacUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRbacUserResponse) ProtoMessage() {}

func (x *PagingRbacUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRbacUserResponse.ProtoReflect.Descriptor instead.
func (*PagingRbacUserResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{32}
}

func (x *PagingRbacUserResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingRbacUserResponse) GetValue() []*PagingUser {
	if x != nil {
		return x.Value
	}
	return nil
}

// 保存角色请求
type SaveRbacRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 角色代码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 角色级别
	Level int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	// 数据权限
	DataScope string `protobuf:"bytes,5,opt,name=dataScope,proto3" json:"dataScope"`
	// 备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime"`
}

func (x *SaveRbacRoleRequest) Reset() {
	*x = SaveRbacRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRbacRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRbacRoleRequest) ProtoMessage() {}

func (x *SaveRbacRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRbacRoleRequest.ProtoReflect.Descriptor instead.
func (*SaveRbacRoleRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{33}
}

func (x *SaveRbacRoleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveRbacRoleRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SaveRbacRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveRbacRoleRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SaveRbacRoleRequest) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SaveRbacRoleRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SaveRbacRoleRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 更新角色资源请求
type UpdateRoleResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色编号
	RoleId int64 `protobuf:"varint,1,opt,name=roleId,proto3" json:"roleId"`
	// 资源
	Resources []*SRolePermPair `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources"`
}

func (x *UpdateRoleResRequest) Reset() {
	*x = UpdateRoleResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResRequest) ProtoMessage() {}

func (x *UpdateRoleResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateRoleResRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleResRequest) GetResources() []*SRolePermPair {
	if x != nil {
		return x.Resources
	}
	return nil
}

type SaveRbacRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *SaveRbacRoleResponse) Reset() {
	*x = SaveRbacRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRbacRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRbacRoleResponse) ProtoMessage() {}

func (x *SaveRbacRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRbacRoleResponse.ProtoReflect.Descriptor instead.
func (*SaveRbacRoleResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{35}
}

func (x *SaveRbacRoleResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveRbacRoleResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveRbacRoleResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RbacRoleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *RbacRoleId) Reset() {
	*x = RbacRoleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacRoleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacRoleId) ProtoMessage() {}

func (x *RbacRoleId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacRoleId.ProtoReflect.Descriptor instead.
func (*RbacRoleId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{36}
}

func (x *RbacRoleId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 角色权限
type SRolePermPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源编号
	ResId int64 `protobuf:"zigzag64,1,opt,name=resId,proto3" json:"resId"`
	// 权限值
	PermFlag int32 `protobuf:"zigzag32,2,opt,name=permFlag,proto3" json:"permFlag"`
}

func (x *SRolePermPair) Reset() {
	*x = SRolePermPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRolePermPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRolePermPair) ProtoMessage() {}

func (x *SRolePermPair) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRolePermPair.ProtoReflect.Descriptor instead.
func (*SRolePermPair) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{37}
}

func (x *SRolePermPair) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *SRolePermPair) GetPermFlag() int32 {
	if x != nil {
		return x.PermFlag
	}
	return 0
}

type SRbacRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 角色代码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 角色级别
	Level int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	// 数据权限
	DataScope string `protobuf:"bytes,5,opt,name=dataScope,proto3" json:"dataScope"`
	// 备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime"`
	// 关联的资源列表
	ResourceList []*SRolePermPair `protobuf:"bytes,8,rep,name=resourceList,proto3" json:"resourceList"`
}

func (x *SRbacRole) Reset() {
	*x = SRbacRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRbacRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRbacRole) ProtoMessage() {}

func (x *SRbacRole) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRbacRole.ProtoReflect.Descriptor instead.
func (*SRbacRole) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{38}
}

func (x *SRbacRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRbacRole) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SRbacRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SRbacRole) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SRbacRole) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SRbacRole) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SRbacRole) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SRbacRole) GetResourceList() []*SRolePermPair {
	if x != nil {
		return x.ResourceList
	}
	return nil
}

type QueryRbacRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryRbacRoleRequest) Reset() {
	*x = QueryRbacRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRbacRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRbacRoleRequest) ProtoMessage() {}

func (x *QueryRbacRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRbacRoleRequest.ProtoReflect.Descriptor instead.
func (*QueryRbacRoleRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{39}
}

type QueryRbacRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SRbacRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *QueryRbacRoleResponse) Reset() {
	*x = QueryRbacRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRbacRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRbacRoleResponse) ProtoMessage() {}

func (x *QueryRbacRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRbacRoleResponse.ProtoReflect.Descriptor instead.
func (*QueryRbacRoleResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{40}
}

func (x *QueryRbacRoleResponse) GetList() []*SRbacRole {
	if x != nil {
		return x.List
	}
	return nil
}

type PagingPermRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 角色代码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	// 角色级别
	Level int32 `protobuf:"varint,4,opt,name=level,proto3" json:"level"`
	// 数据权限
	DataScope string `protobuf:"bytes,5,opt,name=dataScope,proto3" json:"dataScope"`
	// 备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime"`
}

func (x *PagingPermRole) Reset() {
	*x = PagingPermRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingPermRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingPermRole) ProtoMessage() {}

func (x *PagingPermRole) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingPermRole.ProtoReflect.Descriptor instead.
func (*PagingPermRole) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{41}
}

func (x *PagingPermRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingPermRole) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PagingPermRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PagingPermRole) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PagingPermRole) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *PagingPermRole) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PagingPermRole) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type RbacRolePagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *RbacRolePagingRequest) Reset() {
	*x = RbacRolePagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacRolePagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacRolePagingRequest) ProtoMessage() {}

func (x *RbacRolePagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacRolePagingRequest.ProtoReflect.Descriptor instead.
func (*RbacRolePagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{42}
}

func (x *RbacRolePagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type PagingRbacRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64             `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Value []*PagingPermRole `protobuf:"bytes,2,rep,name=value,proto3" json:"value"`
}

func (x *PagingRbacRoleResponse) Reset() {
	*x = PagingRbacRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingRbacRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingRbacRoleResponse) ProtoMessage() {}

func (x *PagingRbacRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingRbacRoleResponse.ProtoReflect.Descriptor instead.
func (*PagingRbacRoleResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{43}
}

func (x *PagingRbacRoleResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PagingRbacRoleResponse) GetValue() []*PagingPermRole {
	if x != nil {
		return x.Value
	}
	return nil
}

type SaveRbacResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 资源名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 资源类型 1:页面 2:组件 3:资源
	ResType int32 `protobuf:"varint,3,opt,name=resType,proto3" json:"resType"`
	// 上级菜单ID
	Pid int64 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid"`
	// 资源键
	Key string `protobuf:"bytes,5,opt,name=key,proto3" json:"key"`
	// 资源路径
	Path string `protobuf:"bytes,6,opt,name=path,proto3" json:"path"`
	// 图标
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon"`
	// 是否显示到菜单
	IsMenu bool `protobuf:"varint,8,opt,name=isMenu,proto3" json:"isMenu"`
	// 是否启用
	IsEnabled bool `protobuf:"varint,9,opt,name=isEnabled,proto3" json:"isEnabled"`
	// 排序
	SortNum int32 `protobuf:"varint,10,opt,name=sortNum,proto3" json:"sortNum"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime"`
	// 组件名称
	ComponentName string `protobuf:"bytes,12,opt,name=componentName,proto3" json:"componentName"`
	// 应用序号
	AppIndex int32 `protobuf:"varint,13,opt,name=appIndex,proto3" json:"appIndex"`
}

func (x *SaveRbacResRequest) Reset() {
	*x = SaveRbacResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRbacResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRbacResRequest) ProtoMessage() {}

func (x *SaveRbacResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRbacResRequest.ProtoReflect.Descriptor instead.
func (*SaveRbacResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{44}
}

func (x *SaveRbacResRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveRbacResRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveRbacResRequest) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *SaveRbacResRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SaveRbacResRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SaveRbacResRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SaveRbacResRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SaveRbacResRequest) GetIsMenu() bool {
	if x != nil {
		return x.IsMenu
	}
	return false
}

func (x *SaveRbacResRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *SaveRbacResRequest) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SaveRbacResRequest) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SaveRbacResRequest) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *SaveRbacResRequest) GetAppIndex() int32 {
	if x != nil {
		return x.AppIndex
	}
	return 0
}

type SaveRbacResResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
}

func (x *SaveRbacResResponse) Reset() {
	*x = SaveRbacResResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRbacResResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRbacResResponse) ProtoMessage() {}

func (x *SaveRbacResResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRbacResResponse.ProtoReflect.Descriptor instead.
func (*SaveRbacResResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{45}
}

func (x *SaveRbacResResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *SaveRbacResResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *SaveRbacResResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PermResId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *PermResId) Reset() {
	*x = PermResId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermResId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermResId) ProtoMessage() {}

func (x *PermResId) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermResId.ProtoReflect.Descriptor instead.
func (*PermResId) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{46}
}

func (x *PermResId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SRbacRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 资源名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	// 资源类型 1:页面 2:组件 3:资源
	ResType int32 `protobuf:"varint,3,opt,name=resType,proto3" json:"resType"`
	// 上级菜单ID
	Pid int64 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid"`
	// 深度/层级
	Depth int32 `protobuf:"varint,5,opt,name=depth,proto3" json:"depth"`
	// 资源键
	Key string `protobuf:"bytes,6,opt,name=key,proto3" json:"key"`
	// 资源路径
	Path string `protobuf:"bytes,7,opt,name=path,proto3" json:"path"`
	// 图标
	Icon string `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon"`
	// 是否显示到菜单
	IsMenu bool `protobuf:"varint,9,opt,name=isMenu,proto3" json:"isMenu"`
	// 是否启用
	IsEnabled bool `protobuf:"varint,10,opt,name=isEnabled,proto3" json:"isEnabled"`
	// 排序
	SortNum int32 `protobuf:"varint,11,opt,name=sortNum,proto3" json:"sortNum"`
	// 创建日期
	CreateTime int64 `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime"`
	// 组件名称
	ComponentName string `protobuf:"bytes,13,opt,name=componentName,proto3" json:"componentName"`
	// 应用序号
	AppIndex int32 `protobuf:"varint,16,opt,name=appIndex,proto3" json:"appIndex"`
	// 是否为叶子节点
	IsLeaf bool `protobuf:"varint,14,opt,name=isLeaf,proto3" json:"isLeaf"`
	// 子资源
	Children []*SRbacRes `protobuf:"bytes,15,rep,name=children,proto3" json:"children"`
}

func (x *SRbacRes) Reset() {
	*x = SRbacRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SRbacRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SRbacRes) ProtoMessage() {}

func (x *SRbacRes) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SRbacRes.ProtoReflect.Descriptor instead.
func (*SRbacRes) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{47}
}

func (x *SRbacRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SRbacRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SRbacRes) GetResType() int32 {
	if x != nil {
		return x.ResType
	}
	return 0
}

func (x *SRbacRes) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SRbacRes) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

func (x *SRbacRes) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SRbacRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SRbacRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SRbacRes) GetIsMenu() bool {
	if x != nil {
		return x.IsMenu
	}
	return false
}

func (x *SRbacRes) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *SRbacRes) GetSortNum() int32 {
	if x != nil {
		return x.SortNum
	}
	return 0
}

func (x *SRbacRes) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SRbacRes) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *SRbacRes) GetAppIndex() int32 {
	if x != nil {
		return x.AppIndex
	}
	return 0
}

func (x *SRbacRes) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *SRbacRes) GetChildren() []*SRbacRes {
	if x != nil {
		return x.Children
	}
	return nil
}

type RbacUserResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户编号
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	// 应用序号
	AppIndex int32 `protobuf:"varint,2,opt,name=appIndex,proto3" json:"appIndex"`
}

func (x *RbacUserResourceRequest) Reset() {
	*x = RbacUserResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacUserResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacUserResourceRequest) ProtoMessage() {}

func (x *RbacUserResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacUserResourceRequest.ProtoReflect.Descriptor instead.
func (*RbacUserResourceRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{48}
}

func (x *RbacUserResourceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RbacUserResourceRequest) GetAppIndex() int32 {
	if x != nil {
		return x.AppIndex
	}
	return 0
}

type QueryRbacResRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 关键词
	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword"`
	// 是否只显示菜单
	OnlyMenu bool `protobuf:"varint,2,opt,name=onlyMenu,proto3" json:"onlyMenu"`
	// 上级编号
	ParentId int64 `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId"`
	// 初始化数据ID
	InitialId int64 `protobuf:"varint,4,opt,name=initialId,proto3" json:"initialId"`
}

func (x *QueryRbacResRequest) Reset() {
	*x = QueryRbacResRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRbacResRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRbacResRequest) ProtoMessage() {}

func (x *QueryRbacResRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRbacResRequest.ProtoReflect.Descriptor instead.
func (*QueryRbacResRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{49}
}

func (x *QueryRbacResRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QueryRbacResRequest) GetOnlyMenu() bool {
	if x != nil {
		return x.OnlyMenu
	}
	return false
}

func (x *QueryRbacResRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryRbacResRequest) GetInitialId() int64 {
	if x != nil {
		return x.InitialId
	}
	return 0
}

type QueryRbacResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SRbacRes `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	// 返回初始化上级ID列表
	InitialList []int64 `protobuf:"varint,2,rep,packed,name=initialList,proto3" json:"initialList"`
}

func (x *QueryRbacResourceResponse) Reset() {
	*x = QueryRbacResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRbacResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRbacResourceResponse) ProtoMessage() {}

func (x *QueryRbacResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRbacResourceResponse.ProtoReflect.Descriptor instead.
func (*QueryRbacResourceResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{50}
}

func (x *QueryRbacResourceResponse) GetList() []*SRbacRes {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QueryRbacResourceResponse) GetInitialList() []int64 {
	if x != nil {
		return x.InitialList
	}
	return nil
}

// 移动资源顺序
type MoveResourceOrdinalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资源编号
	ResourceId int64 `protobuf:"varint,1,opt,name=resourceId,proto3" json:"resourceId"`
	// 移动方向,0:向上移,1:向下移
	Direction int32 `protobuf:"varint,2,opt,name=direction,proto3" json:"direction"`
}

func (x *MoveResourceOrdinalRequest) Reset() {
	*x = MoveResourceOrdinalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveResourceOrdinalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResourceOrdinalRequest) ProtoMessage() {}

func (x *MoveResourceOrdinalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResourceOrdinalRequest.ProtoReflect.Descriptor instead.
func (*MoveResourceOrdinalRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{51}
}

func (x *MoveResourceOrdinalRequest) GetResourceId() int64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *MoveResourceOrdinalRequest) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

// 用户登录日志分页数据
type PagingLoginLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 用户编号
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	// 用户名
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username"`
	// 昵称
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname"`
	// 登录IP地址
	Ip string `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip"`
	// 是否成功
	IsSuccess int32 `protobuf:"varint,6,opt,name=isSuccess,proto3" json:"isSuccess"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime"`
}

func (x *PagingLoginLog) Reset() {
	*x = PagingLoginLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingLoginLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingLoginLog) ProtoMessage() {}

func (x *PagingLoginLog) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingLoginLog.ProtoReflect.Descriptor instead.
func (*PagingLoginLog) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{52}
}

func (x *PagingLoginLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PagingLoginLog) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PagingLoginLog) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PagingLoginLog) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PagingLoginLog) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PagingLoginLog) GetIsSuccess() int32 {
	if x != nil {
		return x.IsSuccess
	}
	return 0
}

func (x *PagingLoginLog) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 用户登录日志分页请求
type LoginLogPagingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分页参数
	Params *SPagingParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

func (x *LoginLogPagingRequest) Reset() {
	*x = LoginLogPagingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogPagingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogPagingRequest) ProtoMessage() {}

func (x *LoginLogPagingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogPagingRequest.ProtoReflect.Descriptor instead.
func (*LoginLogPagingRequest) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{53}
}

func (x *LoginLogPagingRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

// 用户登录日志分页响应
type LoginLogPagingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	// 数据列表
	Value []*PagingLoginLog `protobuf:"bytes,2,rep,name=value,proto3" json:"value"`
}

func (x *LoginLogPagingResponse) Reset() {
	*x = LoginLogPagingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginLogPagingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginLogPagingResponse) ProtoMessage() {}

func (x *LoginLogPagingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginLogPagingResponse.ProtoReflect.Descriptor instead.
func (*LoginLogPagingResponse) Descriptor() ([]byte, []int) {
	return file_rbac_service_proto_rawDescGZIP(), []int{54}
}

func (x *LoginLogPagingResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LoginLogPagingResponse) GetValue() []*PagingLoginLog {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_rbac_service_proto protoreflect.FileDescriptor

var file_rbac_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x62, 0x61, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x68, 0x0a, 0x10, 0x52, 0x62, 0x61, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x95, 0x01, 0x0a,
	0x11, 0x52, 0x62, 0x61, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x52, 0x62, 0x61, 0x63, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x6e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x52, 0x62, 0x61, 0x63, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x6e,
	0x65, 0x77, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x74, 0x0a, 0x18, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x09,
	0x53, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x59, 0x0a, 0x09, 0x53, 0x52, 0x62, 0x61, 0x63, 0x54, 0x72,
	0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x52, 0x62,
	0x61, 0x63, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x22, 0x97, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x12, 0x53, 0x61,
	0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x52, 0x62, 0x61, 0x63, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x53, 0x50, 0x65,
	0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x44,
	0x65, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72,
	0x6d, 0x44, 0x65, 0x70, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x0e,
	0x53, 0x61, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a,
	0x09, 0x52, 0x62, 0x61, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x94, 0x01, 0x0a, 0x08, 0x53, 0x52, 0x62, 0x61, 0x63, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x52, 0x62, 0x61, 0x63,
	0x4a, 0x6f, 0x62, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x52, 0x62, 0x61,
	0x63, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x53, 0x0a, 0x15, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x62, 0x61, 0x63, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x91,
	0x03, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0a,
	0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x87, 0x03, 0x0a, 0x09, 0x53, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x52, 0x62, 0x61,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf2, 0x02, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x5b, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x51, 0x0a,
	0x16, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb9, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x14, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0a, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x0d, 0x53, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x50, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x08, 0x70, 0x65, 0x72, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xe3, 0x01, 0x0a, 0x09,
	0x53, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x16, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x53, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x62, 0x61,
	0x63, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x16, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xd0, 0x02, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63,
	0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a,
	0x09, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x9b, 0x03, 0x0a, 0x08, 0x53, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65,
	0x70, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x52, 0x62, 0x61,
	0x63, 0x52, 0x65, 0x73, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x4d,
	0x0a, 0x17, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x85, 0x01,
	0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x62,
	0x61, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x53, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xbe, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x3f, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x55, 0x0a, 0x16, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x8d, 0x0c, 0x0a, 0x0b, 0x52, 0x62, 0x61,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x42, 0x41, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x13,
	0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x0a, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0a, 0x2e, 0x53, 0x52, 0x62, 0x61, 0x63, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x12, 0x12, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x12, 0x0d, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x1a, 0x0a, 0x2e, 0x53, 0x50, 0x65, 0x72, 0x6d, 0x44, 0x65, 0x70, 0x74,
	0x22, 0x00, 0x12, 0x28, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x12, 0x0d, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x49,
	0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07,
	0x53, 0x61, 0x76, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x0f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x21, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x0a, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x1a, 0x09, 0x2e, 0x53, 0x52, 0x62, 0x61, 0x63, 0x4a, 0x6f, 0x62, 0x22, 0x00, 0x12,
	0x35, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x10, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x12, 0x0a, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x1a,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0d, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x52, 0x62,
	0x61, 0x63, 0x4a, 0x6f, 0x62, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x62, 0x61, 0x63, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x53, 0x61,
	0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0b, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x0a, 0x2e,
	0x53, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0b, 0x2e, 0x52, 0x62, 0x61, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x16, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x62, 0x61, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61,
	0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x1a,
	0x0a, 0x2e, 0x53, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x16, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x62, 0x61, 0x63, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x13, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x12,
	0x0a, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x53, 0x52,
	0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0a,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x49, 0x64, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x16, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a,
	0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rbac_service_proto_rawDescOnce sync.Once
	file_rbac_service_proto_rawDescData = file_rbac_service_proto_rawDesc
)

func file_rbac_service_proto_rawDescGZIP() []byte {
	file_rbac_service_proto_rawDescOnce.Do(func() {
		file_rbac_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rbac_service_proto_rawDescData)
	})
	return file_rbac_service_proto_rawDescData
}

var file_rbac_service_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_rbac_service_proto_goTypes = []interface{}{
	(*RbacLoginRequest)(nil),           // 0: RbacLoginRequest
	(*RbacLoginResponse)(nil),          // 1: RbacLoginResponse
	(*RbacCheckTokenRequest)(nil),      // 2: RbacCheckTokenRequest
	(*RbacCheckTokenResponse)(nil),     // 3: RbacCheckTokenResponse
	(*RbacUserResourceResponse)(nil),   // 4: RbacUserResourceResponse
	(*SUserMenu)(nil),                  // 5: SUserMenu
	(*RoleId)(nil),                     // 6: RoleId
	(*UserId)(nil),                     // 7: UserId
	(*SRbacTree)(nil),                  // 8: SRbacTree
	(*SaveDepartRequest)(nil),          // 9: SaveDepartRequest
	(*SaveDepartResponse)(nil),         // 10: SaveDepartResponse
	(*RbacDepartId)(nil),               // 11: RbacDepartId
	(*SPermDept)(nil),                  // 12: SPermDept
	(*QueryPermDeptRequest)(nil),       // 13: QueryPermDeptRequest
	(*QueryPermDeptResponse)(nil),      // 14: QueryPermDeptResponse
	(*SaveJobRequest)(nil),             // 15: SaveJobRequest
	(*SaveJobResponse)(nil),            // 16: SaveJobResponse
	(*RbacJobId)(nil),                  // 17: RbacJobId
	(*SRbacJob)(nil),                   // 18: SRbacJob
	(*QueryJobRequest)(nil),            // 19: QueryJobRequest
	(*QueryJobResponse)(nil),           // 20: QueryJobResponse
	(*PagingJobList)(nil),              // 21: PagingJobList
	(*RbacJobPagingRequest)(nil),       // 22: RbacJobPagingRequest
	(*PagingRbacJobResponse)(nil),      // 23: PagingRbacJobResponse
	(*SaveRbacUserRequest)(nil),        // 24: SaveRbacUserRequest
	(*SaveRbacUserResponse)(nil),       // 25: SaveRbacUserResponse
	(*RbacUserId)(nil),                 // 26: RbacUserId
	(*SRbacUser)(nil),                  // 27: SRbacUser
	(*QueryPermUserRequest)(nil),       // 28: QueryPermUserRequest
	(*QueryPermUserResponse)(nil),      // 29: QueryPermUserResponse
	(*PagingUser)(nil),                 // 30: PagingUser
	(*PagingRbacUserRequest)(nil),      // 31: PagingRbacUserRequest
	(*PagingRbacUserResponse)(nil),     // 32: PagingRbacUserResponse
	(*SaveRbacRoleRequest)(nil),        // 33: SaveRbacRoleRequest
	(*UpdateRoleResRequest)(nil),       // 34: UpdateRoleResRequest
	(*SaveRbacRoleResponse)(nil),       // 35: SaveRbacRoleResponse
	(*RbacRoleId)(nil),                 // 36: RbacRoleId
	(*SRolePermPair)(nil),              // 37: SRolePermPair
	(*SRbacRole)(nil),                  // 38: SRbacRole
	(*QueryRbacRoleRequest)(nil),       // 39: QueryRbacRoleRequest
	(*QueryRbacRoleResponse)(nil),      // 40: QueryRbacRoleResponse
	(*PagingPermRole)(nil),             // 41: PagingPermRole
	(*RbacRolePagingRequest)(nil),      // 42: RbacRolePagingRequest
	(*PagingRbacRoleResponse)(nil),     // 43: PagingRbacRoleResponse
	(*SaveRbacResRequest)(nil),         // 44: SaveRbacResRequest
	(*SaveRbacResResponse)(nil),        // 45: SaveRbacResResponse
	(*PermResId)(nil),                  // 46: PermResId
	(*SRbacRes)(nil),                   // 47: SRbacRes
	(*RbacUserResourceRequest)(nil),    // 48: RbacUserResourceRequest
	(*QueryRbacResRequest)(nil),        // 49: QueryRbacResRequest
	(*QueryRbacResourceResponse)(nil),  // 50: QueryRbacResourceResponse
	(*MoveResourceOrdinalRequest)(nil), // 51: MoveResourceOrdinalRequest
	(*PagingLoginLog)(nil),             // 52: PagingLoginLog
	(*LoginLogPagingRequest)(nil),      // 53: LoginLogPagingRequest
	(*LoginLogPagingResponse)(nil),     // 54: LoginLogPagingResponse
	(*SPagingParams)(nil),              // 55: SPagingParams
	(*Empty)(nil),                      // 56: Empty
	(*String)(nil),                     // 57: String
	(*Result)(nil),                     // 58: Result
}
var file_rbac_service_proto_depIdxs = []int32{
	5,  // 0: RbacUserResourceResponse.menu:type_name -> SUserMenu
	5,  // 1: SUserMenu.children:type_name -> SUserMenu
	8,  // 2: SRbacTree.children:type_name -> SRbacTree
	12, // 3: QueryPermDeptResponse.list:type_name -> SPermDept
	18, // 4: QueryJobResponse.list:type_name -> SRbacJob
	55, // 5: RbacJobPagingRequest.params:type_name -> SPagingParams
	21, // 6: PagingRbacJobResponse.value:type_name -> PagingJobList
	27, // 7: QueryPermUserResponse.list:type_name -> SRbacUser
	55, // 8: PagingRbacUserRequest.params:type_name -> SPagingParams
	30, // 9: PagingRbacUserResponse.value:type_name -> PagingUser
	37, // 10: UpdateRoleResRequest.resources:type_name -> SRolePermPair
	37, // 11: SRbacRole.resourceList:type_name -> SRolePermPair
	38, // 12: QueryRbacRoleResponse.list:type_name -> SRbacRole
	55, // 13: RbacRolePagingRequest.params:type_name -> SPagingParams
	41, // 14: PagingRbacRoleResponse.value:type_name -> PagingPermRole
	47, // 15: SRbacRes.children:type_name -> SRbacRes
	47, // 16: QueryRbacResourceResponse.list:type_name -> SRbacRes
	55, // 17: LoginLogPagingRequest.params:type_name -> SPagingParams
	52, // 18: LoginLogPagingResponse.value:type_name -> PagingLoginLog
	0,  // 19: RbacService.UserLogin:input_type -> RbacLoginRequest
	2,  // 20: RbacService.CheckRBACToken:input_type -> RbacCheckTokenRequest
	56, // 21: RbacService.GetJwtToken:input_type -> Empty
	48, // 22: RbacService.GetUserResource:input_type -> RbacUserResourceRequest
	49, // 23: RbacService.QueryRbacResourceList:input_type -> QueryRbacResRequest
	51, // 24: RbacService.MoveResourceOrdinal:input_type -> MoveResourceOrdinalRequest
	56, // 25: RbacService.DepartTree:input_type -> Empty
	9,  // 26: RbacService.SaveDepart:input_type -> SaveDepartRequest
	11, // 27: RbacService.GetDepart:input_type -> RbacDepartId
	11, // 28: RbacService.DeleteDepart:input_type -> RbacDepartId
	15, // 29: RbacService.SaveJob:input_type -> SaveJobRequest
	17, // 30: RbacService.GetJob:input_type -> RbacJobId
	19, // 31: RbacService.QueryJobList:input_type -> QueryJobRequest
	17, // 32: RbacService.DeleteJob:input_type -> RbacJobId
	22, // 33: RbacService.PagingJobList:input_type -> RbacJobPagingRequest
	24, // 34: RbacService.SaveUser:input_type -> SaveRbacUserRequest
	26, // 35: RbacService.GetUser:input_type -> RbacUserId
	26, // 36: RbacService.DeleteUser:input_type -> RbacUserId
	31, // 37: RbacService.PagingUser:input_type -> PagingRbacUserRequest
	33, // 38: RbacService.SavePermRole:input_type -> SaveRbacRoleRequest
	34, // 39: RbacService.UpdateRoleResource:input_type -> UpdateRoleResRequest
	36, // 40: RbacService.GetRole:input_type -> RbacRoleId
	39, // 41: RbacService.QueryPermRoleList:input_type -> QueryRbacRoleRequest
	36, // 42: RbacService.DeletePermRole:input_type -> RbacRoleId
	42, // 43: RbacService.PagingPermRole:input_type -> RbacRolePagingRequest
	44, // 44: RbacService.SaveRbacResource:input_type -> SaveRbacResRequest
	46, // 45: RbacService.GetRbacRes:input_type -> PermResId
	46, // 46: RbacService.DeleteRbacResource:input_type -> PermResId
	53, // 47: RbacService.PagingLoginLog:input_type -> LoginLogPagingRequest
	1,  // 48: RbacService.UserLogin:output_type -> RbacLoginResponse
	3,  // 49: RbacService.CheckRBACToken:output_type -> RbacCheckTokenResponse
	57, // 50: RbacService.GetJwtToken:output_type -> String
	4,  // 51: RbacService.GetUserResource:output_type -> RbacUserResourceResponse
	50, // 52: RbacService.QueryRbacResourceList:output_type -> QueryRbacResourceResponse
	58, // 53: RbacService.MoveResourceOrdinal:output_type -> Result
	8,  // 54: RbacService.DepartTree:output_type -> SRbacTree
	10, // 55: RbacService.SaveDepart:output_type -> SaveDepartResponse
	12, // 56: RbacService.GetDepart:output_type -> SPermDept
	58, // 57: RbacService.DeleteDepart:output_type -> Result
	16, // 58: RbacService.SaveJob:output_type -> SaveJobResponse
	18, // 59: RbacService.GetJob:output_type -> SRbacJob
	20, // 60: RbacService.QueryJobList:output_type -> QueryJobResponse
	58, // 61: RbacService.DeleteJob:output_type -> Result
	23, // 62: RbacService.PagingJobList:output_type -> PagingRbacJobResponse
	25, // 63: RbacService.SaveUser:output_type -> SaveRbacUserResponse
	27, // 64: RbacService.GetUser:output_type -> SRbacUser
	58, // 65: RbacService.DeleteUser:output_type -> Result
	32, // 66: RbacService.PagingUser:output_type -> PagingRbacUserResponse
	35, // 67: RbacService.SavePermRole:output_type -> SaveRbacRoleResponse
	58, // 68: RbacService.UpdateRoleResource:output_type -> Result
	38, // 69: RbacService.GetRole:output_type -> SRbacRole
	40, // 70: RbacService.QueryPermRoleList:output_type -> QueryRbacRoleResponse
	58, // 71: RbacService.DeletePermRole:output_type -> Result
	43, // 72: RbacService.PagingPermRole:output_type -> PagingRbacRoleResponse
	45, // 73: RbacService.SaveRbacResource:output_type -> SaveRbacResResponse
	47, // 74: RbacService.GetRbacRes:output_type -> SRbacRes
	58, // 75: RbacService.DeleteRbacResource:output_type -> Result
	54, // 76: RbacService.PagingLoginLog:output_type -> LoginLogPagingResponse
	48, // [48:77] is the sub-list for method output_type
	19, // [19:48] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_rbac_service_proto_init() }
func file_rbac_service_proto_init() {
	if File_rbac_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rbac_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacCheckTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacCheckTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacUserResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SUserMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRbacTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDepartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDepartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacDepartId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPermDept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermDeptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermDeptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacJobId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRbacJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingJobList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacJobPagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingRbacJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRbacUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRbacUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRbacUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPermUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingRbacUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingRbacUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRbacRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRbacRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacRoleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRolePermPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRbacRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRbacRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRbacRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingPermRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacRolePagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingRbacRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRbacResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRbacResResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermResId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SRbacRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RbacUserResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRbacResRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRbacResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveResourceOrdinalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingLoginLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogPagingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginLogPagingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rbac_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rbac_service_proto_goTypes,
		DependencyIndexes: file_rbac_service_proto_depIdxs,
		MessageInfos:      file_rbac_service_proto_msgTypes,
	}.Build()
	File_rbac_service_proto = out.File
	file_rbac_service_proto_rawDesc = nil
	file_rbac_service_proto_goTypes = nil
	file_rbac_service_proto_depIdxs = nil
}
