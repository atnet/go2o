// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.0
// source: app_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppVersionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *AppVersionId) Reset() {
	*x = AppVersionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionId) ProtoMessage() {}

func (x *AppVersionId) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionId.ProtoReflect.Descriptor instead.
func (*AppVersionId) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{0}
}

func (x *AppVersionId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 检查版本请求
type CheckAppVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 应用名称
	AppName string `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName"`
	// 终端系统, 如: android / ios
	TerminalOS string `protobuf:"bytes,2,opt,name=terminalOS,proto3" json:"terminalOS"`
	// 更新通道, stable|beta|nightly
	TerminalChannel string `protobuf:"bytes,3,opt,name=terminalChannel,proto3" json:"terminalChannel"`
	// 当前版本号
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version"`
}

func (x *CheckAppVersionRequest) Reset() {
	*x = CheckAppVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAppVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAppVersionRequest) ProtoMessage() {}

func (x *CheckAppVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAppVersionRequest.ProtoReflect.Descriptor instead.
func (*CheckAppVersionRequest) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckAppVersionRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *CheckAppVersionRequest) GetTerminalOS() string {
	if x != nil {
		return x.TerminalOS
	}
	return ""
}

func (x *CheckAppVersionRequest) GetTerminalChannel() string {
	if x != nil {
		return x.TerminalChannel
	}
	return ""
}

func (x *CheckAppVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// 检测版本响应结果
type CheckAppVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否有最新版本
	HasNewVersion bool `protobuf:"varint,1,opt,name=hasNewVersion,proto3" json:"hasNewVersion"`
	// 最新版本号
	LatestVersion string `protobuf:"bytes,2,opt,name=latestVersion,proto3" json:"latestVersion"`
	// App更新资源地址
	PackageUrl string `protobuf:"bytes,3,opt,name=packageUrl,proto3" json:"packageUrl"`
	// 版本信息
	VersionInfo string `protobuf:"bytes,4,opt,name=versionInfo,proto3" json:"versionInfo"`
	// 是否强制升级
	ForceUpdate bool `protobuf:"varint,5,opt,name=forceUpdate,proto3" json:"forceUpdate"`
	// 更新模式, 1:包更新  2: 更新通知
	UpdateMode int32 `protobuf:"varint,6,opt,name=updateMode,proto3" json:"updateMode"`
	// 发布时间,如为通知，则存在提前通知的情况，通过发布时间判定
	ReleaseTime int64 `protobuf:"varint,7,opt,name=releaseTime,proto3" json:"releaseTime"`
}

func (x *CheckAppVersionResponse) Reset() {
	*x = CheckAppVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAppVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAppVersionResponse) ProtoMessage() {}

func (x *CheckAppVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAppVersionResponse.ProtoReflect.Descriptor instead.
func (*CheckAppVersionResponse) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{2}
}

func (x *CheckAppVersionResponse) GetHasNewVersion() bool {
	if x != nil {
		return x.HasNewVersion
	}
	return false
}

func (x *CheckAppVersionResponse) GetLatestVersion() string {
	if x != nil {
		return x.LatestVersion
	}
	return ""
}

func (x *CheckAppVersionResponse) GetPackageUrl() string {
	if x != nil {
		return x.PackageUrl
	}
	return ""
}

func (x *CheckAppVersionResponse) GetVersionInfo() string {
	if x != nil {
		return x.VersionInfo
	}
	return ""
}

func (x *CheckAppVersionResponse) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

func (x *CheckAppVersionResponse) GetUpdateMode() int32 {
	if x != nil {
		return x.UpdateMode
	}
	return 0
}

func (x *CheckAppVersionResponse) GetReleaseTime() int64 {
	if x != nil {
		return x.ReleaseTime
	}
	return 0
}

// APP产品编号
type SysAppDistributionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
}

func (x *SysAppDistributionId) Reset() {
	*x = SysAppDistributionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysAppDistributionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysAppDistributionId) ProtoMessage() {}

func (x *SysAppDistributionId) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysAppDistributionId.ProtoReflect.Descriptor instead.
func (*SysAppDistributionId) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{3}
}

func (x *SysAppDistributionId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// APP产品
type SAppDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 产品编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 产品名称
	AppName string `protobuf:"bytes,2,opt,name=appName,proto3" json:"appName"`
	// 应用图标
	AppIcon string `protobuf:"bytes,3,opt,name=appIcon,proto3" json:"appIcon"`
	// 产品描述
	AppDesc string `protobuf:"bytes,4,opt,name=appDesc,proto3" json:"appDesc"`
	// 更新模式, 1:包更新  2: 更新通知
	UpdateMode int32 `protobuf:"varint,5,opt,name=updateMode,proto3" json:"updateMode"`
	// 分发下载页面地址
	DistributeUrl string `protobuf:"bytes,6,opt,name=distributeUrl,proto3" json:"distributeUrl"`
	// 应用分发名称
	DistributeName string `protobuf:"bytes,7,opt,name=distributeName,proto3" json:"distributeName"`
	// 稳定版本
	StableVersion string `protobuf:"bytes,8,opt,name=stableVersion,proto3" json:"stableVersion"`
	// 稳定版下载地址
	StableDownUrl string `protobuf:"bytes,9,opt,name=stableDownUrl,proto3" json:"stableDownUrl"`
	// 测试版本
	BetaVersion string `protobuf:"bytes,10,opt,name=betaVersion,proto3" json:"betaVersion"`
	// 测试版下载地址
	BetaDownUrl string `protobuf:"bytes,11,opt,name=betaDownUrl,proto3" json:"betaDownUrl"`
	// ios下载地址
	IosDownUrl string `protobuf:"bytes,12,opt,name=iosDownUrl,proto3" json:"iosDownUrl"`
	// URL Scheme
	UrlScheme string `protobuf:"bytes,13,opt,name=urlScheme,proto3" json:"urlScheme"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,15,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SAppDistribution) Reset() {
	*x = SAppDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAppDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAppDistribution) ProtoMessage() {}

func (x *SAppDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAppDistribution.ProtoReflect.Descriptor instead.
func (*SAppDistribution) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{4}
}

func (x *SAppDistribution) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SAppDistribution) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *SAppDistribution) GetAppIcon() string {
	if x != nil {
		return x.AppIcon
	}
	return ""
}

func (x *SAppDistribution) GetAppDesc() string {
	if x != nil {
		return x.AppDesc
	}
	return ""
}

func (x *SAppDistribution) GetUpdateMode() int32 {
	if x != nil {
		return x.UpdateMode
	}
	return 0
}

func (x *SAppDistribution) GetDistributeUrl() string {
	if x != nil {
		return x.DistributeUrl
	}
	return ""
}

func (x *SAppDistribution) GetDistributeName() string {
	if x != nil {
		return x.DistributeName
	}
	return ""
}

func (x *SAppDistribution) GetStableVersion() string {
	if x != nil {
		return x.StableVersion
	}
	return ""
}

func (x *SAppDistribution) GetStableDownUrl() string {
	if x != nil {
		return x.StableDownUrl
	}
	return ""
}

func (x *SAppDistribution) GetBetaVersion() string {
	if x != nil {
		return x.BetaVersion
	}
	return ""
}

func (x *SAppDistribution) GetBetaDownUrl() string {
	if x != nil {
		return x.BetaDownUrl
	}
	return ""
}

func (x *SAppDistribution) GetIosDownUrl() string {
	if x != nil {
		return x.IosDownUrl
	}
	return ""
}

func (x *SAppDistribution) GetUrlScheme() string {
	if x != nil {
		return x.UrlScheme
	}
	return ""
}

func (x *SAppDistribution) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SAppDistribution) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// APP版本
type AppVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 产品
	ProductId int64 `protobuf:"varint,2,opt,name=productId,proto3" json:"productId"`
	// 更新通道, stable:0|alpha:1|nightly:2
	Channel int32 `protobuf:"varint,3,opt,name=channel,proto3" json:"channel"`
	// 版本号
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version"`
	// 是否强制升级
	ForceUpdate bool `protobuf:"varint,5,opt,name=forceUpdate,proto3" json:"forceUpdate"`
	// 更新内容
	UpdateContent string `protobuf:"bytes,6,opt,name=updateContent,proto3" json:"updateContent"`
}

func (x *AppVersionRequest) Reset() {
	*x = AppVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionRequest) ProtoMessage() {}

func (x *AppVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionRequest.ProtoReflect.Descriptor instead.
func (*AppVersionRequest) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{5}
}

func (x *AppVersionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AppVersionRequest) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AppVersionRequest) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *AppVersionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AppVersionRequest) GetForceUpdate() bool {
	if x != nil {
		return x.ForceUpdate
	}
	return false
}

func (x *AppVersionRequest) GetUpdateContent() string {
	if x != nil {
		return x.UpdateContent
	}
	return ""
}

// 应用版本
type SAppVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	// 产品编号
	DistributionId int64 `protobuf:"varint,2,opt,name=distributionId,proto3" json:"distributionId"`
	// 版本号
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version"`
	// 版本数字代号
	VersionCode int32 `protobuf:"varint,4,opt,name=versionCode,proto3" json:"versionCode"`
	// 终端系统, 如: android / ios
	TerminalOs string `protobuf:"bytes,5,opt,name=terminalOs,proto3" json:"terminalOs"`
	// 终端通道, stable|beta|nightly
	TerminalChannel string `protobuf:"bytes,6,opt,name=terminalChannel,proto3" json:"terminalChannel"`
	// 开始时间
	StartTime int64 `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime"`
	// 更新模式, 1:包更新  2: 更新通知
	UpdateMode int32 `protobuf:"varint,8,opt,name=updateMode,proto3" json:"updateMode"`
	// 更新内容
	UpdateContent string `protobuf:"bytes,9,opt,name=updateContent,proto3" json:"updateContent"`
	// 下载包地址
	PackageUrl string `protobuf:"bytes,10,opt,name=packageUrl,proto3" json:"packageUrl"`
	// 是否强制更新
	IsForce int32 `protobuf:"varint,11,opt,name=isForce,proto3" json:"isForce"`
	// 是否已完成通知,完成后结束更新
	IsNotified int32 `protobuf:"varint,12,opt,name=isNotified,proto3" json:"isNotified"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime"`
	// 更新时间
	UpdateTime int64 `protobuf:"varint,14,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SAppVersion) Reset() {
	*x = SAppVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SAppVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAppVersion) ProtoMessage() {}

func (x *SAppVersion) ProtoReflect() protoreflect.Message {
	mi := &file_app_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAppVersion.ProtoReflect.Descriptor instead.
func (*SAppVersion) Descriptor() ([]byte, []int) {
	return file_app_service_proto_rawDescGZIP(), []int{6}
}

func (x *SAppVersion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SAppVersion) GetDistributionId() int64 {
	if x != nil {
		return x.DistributionId
	}
	return 0
}

func (x *SAppVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SAppVersion) GetVersionCode() int32 {
	if x != nil {
		return x.VersionCode
	}
	return 0
}

func (x *SAppVersion) GetTerminalOs() string {
	if x != nil {
		return x.TerminalOs
	}
	return ""
}

func (x *SAppVersion) GetTerminalChannel() string {
	if x != nil {
		return x.TerminalChannel
	}
	return ""
}

func (x *SAppVersion) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SAppVersion) GetUpdateMode() int32 {
	if x != nil {
		return x.UpdateMode
	}
	return 0
}

func (x *SAppVersion) GetUpdateContent() string {
	if x != nil {
		return x.UpdateContent
	}
	return ""
}

func (x *SAppVersion) GetPackageUrl() string {
	if x != nil {
		return x.PackageUrl
	}
	return ""
}

func (x *SAppVersion) GetIsForce() int32 {
	if x != nil {
		return x.IsForce
	}
	return 0
}

func (x *SAppVersion) GetIsNotified() int32 {
	if x != nil {
		return x.IsNotified
	}
	return 0
}

func (x *SAppVersion) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SAppVersion) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

var File_app_service_proto protoreflect.FileDescriptor

var file_app_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x24, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x53, 0x12, 0x28, 0x0a, 0x0f,
	0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x8b, 0x02, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x68, 0x61, 0x73, 0x4e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2c,
	0x0a, 0x14, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xec, 0x03, 0x0a,
	0x10, 0x53, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65, 0x74,
	0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x65, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x65, 0x74, 0x61, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x65, 0x74, 0x61, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6f, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6f, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x72, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x72, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x11,
	0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc9, 0x03, 0x0a, 0x0b,
	0x53, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x69, 0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x89, 0x03, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x41, 0x70,
	0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e,
	0x53, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x53, 0x41, 0x70, 0x70, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x09, 0x2e, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x2e, 0x53, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x1a, 0x0c, 0x2e, 0x53, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x1a, 0x09, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x44, 0x0a,
	0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x1f, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x67, 0x6f, 0x32, 0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_service_proto_rawDescOnce sync.Once
	file_app_service_proto_rawDescData = file_app_service_proto_rawDesc
)

func file_app_service_proto_rawDescGZIP() []byte {
	file_app_service_proto_rawDescOnce.Do(func() {
		file_app_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_service_proto_rawDescData)
	})
	return file_app_service_proto_rawDescData
}

var file_app_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_app_service_proto_goTypes = []interface{}{
	(*AppVersionId)(nil),            // 0: AppVersionId
	(*CheckAppVersionRequest)(nil),  // 1: CheckAppVersionRequest
	(*CheckAppVersionResponse)(nil), // 2: CheckAppVersionResponse
	(*SysAppDistributionId)(nil),    // 3: SysAppDistributionId
	(*SAppDistribution)(nil),        // 4: SAppDistribution
	(*AppVersionRequest)(nil),       // 5: AppVersionRequest
	(*SAppVersion)(nil),             // 6: SAppVersion
	(*TxResult)(nil),                // 7: TxResult
}
var file_app_service_proto_depIdxs = []int32{
	4, // 0: AppService.SaveAppDistribution:input_type -> SAppDistribution
	3, // 1: AppService.GetAppDistribution:input_type -> SysAppDistributionId
	3, // 2: AppService.DeleteAppDistribution:input_type -> SysAppDistributionId
	6, // 3: AppService.SaveAppVersion:input_type -> SAppVersion
	0, // 4: AppService.GetAppVersion:input_type -> AppVersionId
	0, // 5: AppService.DeleteAppVersion:input_type -> AppVersionId
	1, // 6: AppService.CheckAppVersion:input_type -> CheckAppVersionRequest
	7, // 7: AppService.SaveAppDistribution:output_type -> TxResult
	4, // 8: AppService.GetAppDistribution:output_type -> SAppDistribution
	7, // 9: AppService.DeleteAppDistribution:output_type -> TxResult
	7, // 10: AppService.SaveAppVersion:output_type -> TxResult
	6, // 11: AppService.GetAppVersion:output_type -> SAppVersion
	7, // 12: AppService.DeleteAppVersion:output_type -> TxResult
	2, // 13: AppService.CheckAppVersion:output_type -> CheckAppVersionResponse
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_app_service_proto_init() }
func file_app_service_proto_init() {
	if File_app_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_app_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAppVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAppVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysAppDistributionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAppDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SAppVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_service_proto_goTypes,
		DependencyIndexes: file_app_service_proto_depIdxs,
		MessageInfos:      file_app_service_proto_msgTypes,
	}.Build()
	File_app_service_proto = out.File
	file_app_service_proto_rawDesc = nil
	file_app_service_proto_goTypes = nil
	file_app_service_proto_depIdxs = nil
}
