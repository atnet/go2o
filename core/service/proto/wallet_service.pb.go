// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v5.26.1
// source: wallet_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * 钱包类型
type EWalletType int32

const (
	EWalletType__6 EWalletType = 0
	// * 个人钱包
	EWalletType_TPerson EWalletType = 1
	// * 商家钱包
	EWalletType_TMerchant EWalletType = 2
)

// Enum value maps for EWalletType.
var (
	EWalletType_name = map[int32]string{
		0: "_6",
		1: "TPerson",
		2: "TMerchant",
	}
	EWalletType_value = map[string]int32{
		"_6":        0,
		"TPerson":   1,
		"TMerchant": 2,
	}
)

func (x EWalletType) Enum() *EWalletType {
	p := new(EWalletType)
	*p = x
	return p
}

func (x EWalletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EWalletType) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_service_proto_enumTypes[0].Descriptor()
}

func (EWalletType) Type() protoreflect.EnumType {
	return &file_wallet_service_proto_enumTypes[0]
}

func (x EWalletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EWalletType.Descriptor instead.
func (EWalletType) EnumDescriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{0}
}

// * 钱包标志
type EWalletFlag int32

const (
	EWalletFlag__7 EWalletFlag = 0
	// * 抵扣
	EWalletFlag_FlagDiscount EWalletFlag = 1
	// * 充值
	EWalletFlag_FlagCharge EWalletFlag = 2
)

// Enum value maps for EWalletFlag.
var (
	EWalletFlag_name = map[int32]string{
		0: "_7",
		1: "FlagDiscount",
		2: "FlagCharge",
	}
	EWalletFlag_value = map[string]int32{
		"_7":           0,
		"FlagDiscount": 1,
		"FlagCharge":   2,
	}
)

func (x EWalletFlag) Enum() *EWalletFlag {
	p := new(EWalletFlag)
	*p = x
	return p
}

func (x EWalletFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EWalletFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_service_proto_enumTypes[1].Descriptor()
}

func (EWalletFlag) Type() protoreflect.EnumType {
	return &file_wallet_service_proto_enumTypes[1]
}

func (x EWalletFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EWalletFlag.Descriptor instead.
func (EWalletFlag) EnumDescriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{1}
}

// * 充值方式
type EChargeKind int32

const (
	EChargeKind__8 EChargeKind = 0
	// * 用户充值
	EChargeKind_CUserCharge EChargeKind = 1
	// * 系统自动充值
	EChargeKind_CSystemCharge EChargeKind = 2
	// * 客服充值
	EChargeKind_CServiceAgentCharge EChargeKind = 3
	// * 退款充值
	EChargeKind_CRefundCharge EChargeKind = 4
)

// Enum value maps for EChargeKind.
var (
	EChargeKind_name = map[int32]string{
		0: "_8",
		1: "CUserCharge",
		2: "CSystemCharge",
		3: "CServiceAgentCharge",
		4: "CRefundCharge",
	}
	EChargeKind_value = map[string]int32{
		"_8":                  0,
		"CUserCharge":         1,
		"CSystemCharge":       2,
		"CServiceAgentCharge": 3,
		"CRefundCharge":       4,
	}
)

func (x EChargeKind) Enum() *EChargeKind {
	p := new(EChargeKind)
	*p = x
	return p
}

func (x EChargeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EChargeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_service_proto_enumTypes[2].Descriptor()
}

func (EChargeKind) Type() protoreflect.EnumType {
	return &file_wallet_service_proto_enumTypes[2]
}

func (x EChargeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EChargeKind.Descriptor instead.
func (EChargeKind) EnumDescriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{2}
}

// * 钱包日志种类
type EWalletLogKind int32

const (
	EWalletLogKind__9 EWalletLogKind = 0
	// * 赠送/充值
	EWalletLogKind_KCharge EWalletLogKind = 1
	// * 钱包收入
	EWalletLogKind_KCarry EWalletLogKind = 2
	// * 失效
	EWalletLogKind_KExpired EWalletLogKind = 3
	// * 客服调整
	EWalletLogKind_KAdjust EWalletLogKind = 4
	// * 消费
	EWalletLogKind_KConsume EWalletLogKind = 5
	// * 扣除
	EWalletLogKind_KDiscount EWalletLogKind = 6
	// * 转入
	EWalletLogKind_KTransferIn EWalletLogKind = 7
	// * 转出
	EWalletLogKind_KTransferOut EWalletLogKind = 8
	// * 冻结
	EWalletLogKind_KFreeze EWalletLogKind = 9
	// * 解冻
	EWalletLogKind_KUnfreeze EWalletLogKind = 10
	// * 转账退款
	EWalletLogKind_KTransferRefund EWalletLogKind = 11
	// * 提现退还到银行卡
	EWalletLogKind_KTakeOutRefund EWalletLogKind = 12
	// * 支付单退款
	EWalletLogKind_KPaymentOrderRefund EWalletLogKind = 13
	// * 提现到银行卡(人工提现)
	EWalletLogKind_KWithdrawalToBankCard EWalletLogKind = 14
	// * 提现到第三方
	EWalletLogKind_KWithdrawalToThirdPart EWalletLogKind = 15
)

// Enum value maps for EWalletLogKind.
var (
	EWalletLogKind_name = map[int32]string{
		0:  "_9",
		1:  "KCharge",
		2:  "KCarry",
		3:  "KExpired",
		4:  "KAdjust",
		5:  "KConsume",
		6:  "KDiscount",
		7:  "KTransferIn",
		8:  "KTransferOut",
		9:  "KFreeze",
		10: "KUnfreeze",
		11: "KTransferRefund",
		12: "KTakeOutRefund",
		13: "KPaymentOrderRefund",
		14: "KWithdrawalToBankCard",
		15: "KWithdrawalToThirdPart",
	}
	EWalletLogKind_value = map[string]int32{
		"_9":                     0,
		"KCharge":                1,
		"KCarry":                 2,
		"KExpired":               3,
		"KAdjust":                4,
		"KConsume":               5,
		"KDiscount":              6,
		"KTransferIn":            7,
		"KTransferOut":           8,
		"KFreeze":                9,
		"KUnfreeze":              10,
		"KTransferRefund":        11,
		"KTakeOutRefund":         12,
		"KPaymentOrderRefund":    13,
		"KWithdrawalToBankCard":  14,
		"KWithdrawalToThirdPart": 15,
	}
)

func (x EWalletLogKind) Enum() *EWalletLogKind {
	p := new(EWalletLogKind)
	*p = x
	return p
}

func (x EWalletLogKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EWalletLogKind) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_service_proto_enumTypes[3].Descriptor()
}

func (EWalletLogKind) Type() protoreflect.EnumType {
	return &file_wallet_service_proto_enumTypes[3]
}

func (x EWalletLogKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EWalletLogKind.Descriptor instead.
func (EWalletLogKind) EnumDescriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{3}
}

type CreateWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户编号
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	// 用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	// 钱包类型
	WalletType int32 `protobuf:"varint,3,opt,name=walletType,proto3" json:"walletType"`
	// 钱包名称
	WalletName string `protobuf:"bytes,4,opt,name=walletName,proto3" json:"walletName"`
	// 钱包标志
	WalletFlag int32 `protobuf:"varint,5,opt,name=walletFlag,proto3" json:"walletFlag"`
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWalletRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateWalletRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateWalletRequest) GetWalletType() int32 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *CreateWalletRequest) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *CreateWalletRequest) GetWalletFlag() int32 {
	if x != nil {
		return x.WalletFlag
	}
	return 0
}

// 获取钱包请求
type GetWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户编号
	UserId int64 `protobuf:"zigzag64,1,opt,name=userId,proto3" json:"userId"`
	// 钱包类型
	WalletType int32 `protobuf:"zigzag32,2,opt,name=walletType,proto3" json:"walletType"`
}

func (x *GetWalletRequest) Reset() {
	*x = GetWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletRequest) ProtoMessage() {}

func (x *GetWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletRequest.ProtoReflect.Descriptor instead.
func (*GetWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetWalletRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletRequest) GetWalletType() int32 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

type WalletLogIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 钱包编号
	WalletId int64 `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	// 钱包流水编号
	Id int64 `protobuf:"zigzag64,2,opt,name=id,proto3" json:"id"`
}

func (x *WalletLogIDRequest) Reset() {
	*x = WalletLogIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletLogIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletLogIDRequest) ProtoMessage() {}

func (x *WalletLogIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletLogIDRequest.ProtoReflect.Descriptor instead.
func (*WalletLogIDRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{2}
}

func (x *WalletLogIDRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *WalletLogIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdjustRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId     int64  `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	Amount       int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	OuterNo      string `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo"`
	Remark       string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
	OperatorUid  int32  `protobuf:"zigzag32,6,opt,name=operatorUid,proto3" json:"operatorUid"`
	OperatorName string `protobuf:"bytes,7,opt,name=operatorName,proto3" json:"operatorName"`
}

func (x *AdjustRequest) Reset() {
	*x = AdjustRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustRequest) ProtoMessage() {}

func (x *AdjustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustRequest.ProtoReflect.Descriptor instead.
func (*AdjustRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{3}
}

func (x *AdjustRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *AdjustRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdjustRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AdjustRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *AdjustRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AdjustRequest) GetOperatorUid() int32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *AdjustRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

type DiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId int64  `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	Amount   int64  `protobuf:"zigzag64,2,opt,name=amount,proto3" json:"amount"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	OuterNo  string `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo"`
	Must     bool   `protobuf:"varint,5,opt,name=must,proto3" json:"must"`
}

func (x *DiscountRequest) Reset() {
	*x = DiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountRequest) ProtoMessage() {}

func (x *DiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountRequest.ProtoReflect.Descriptor instead.
func (*DiscountRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{4}
}

func (x *DiscountRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *DiscountRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DiscountRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DiscountRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *DiscountRequest) GetMust() bool {
	if x != nil {
		return x.Must
	}
	return false
}

// * 冻结请求
type FreezeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 钱包编号
	WalletId int64 `protobuf:"varint,1,opt,name=walletId,proto3" json:"walletId"`
	// * 冻结金额
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	// * 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	// * 外部关联订单号
	OuterNo string `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo"`
	// * 备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
	// * 操作人员编号
	OperatorUid int32 `protobuf:"zigzag32,6,opt,name=operatorUid,proto3" json:"operatorUid"`
	// * 操作人员名称
	OperatorName string `protobuf:"bytes,7,opt,name=operatorName,proto3" json:"operatorName"`
}

func (x *FreezeRequest) Reset() {
	*x = FreezeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeRequest) ProtoMessage() {}

func (x *FreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeRequest.ProtoReflect.Descriptor instead.
func (*FreezeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{5}
}

func (x *FreezeRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *FreezeRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *FreezeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FreezeRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *FreezeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FreezeRequest) GetOperatorUid() int32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *FreezeRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

// * 冻结响应
type FreezeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 错误码
	ErrCode int32 `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	// * 错误消息
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
	// * 日志ID
	LogId int64 `protobuf:"varint,3,opt,name=logId,proto3" json:"logId"`
}

func (x *FreezeResponse) Reset() {
	*x = FreezeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeResponse) ProtoMessage() {}

func (x *FreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeResponse.ProtoReflect.Descriptor instead.
func (*FreezeResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{6}
}

func (x *FreezeResponse) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *FreezeResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *FreezeResponse) GetLogId() int64 {
	if x != nil {
		return x.LogId
	}
	return 0
}

// * 解冻请求
type UnfreezeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 钱包编号
	WalletId int64 `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	// * 冻结金额
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	// * 标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	// * 外部关联订单号
	OuterNo string `protobuf:"bytes,4,opt,name=outerNo,proto3" json:"outerNo"`
	// * 备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
	// * 操作人员编号
	OperatorUid int32 `protobuf:"zigzag32,6,opt,name=operatorUid,proto3" json:"operatorUid"`
	// * 操作人员名称
	OperatorName string `protobuf:"bytes,7,opt,name=operatorName,proto3" json:"operatorName"`
	// 是否退回余额
	IsRefundBalance bool `protobuf:"varint,8,opt,name=isRefundBalance,proto3" json:"isRefundBalance"`
}

func (x *UnfreezeRequest) Reset() {
	*x = UnfreezeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeRequest) ProtoMessage() {}

func (x *UnfreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeRequest.ProtoReflect.Descriptor instead.
func (*UnfreezeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{7}
}

func (x *UnfreezeRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *UnfreezeRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UnfreezeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UnfreezeRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *UnfreezeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UnfreezeRequest) GetOperatorUid() int32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *UnfreezeRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *UnfreezeRequest) GetIsRefundBalance() bool {
	if x != nil {
		return x.IsRefundBalance
	}
	return false
}

type ChargeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 钱包ID
	WalletId     int64  `protobuf:"varint,1,opt,name=walletId,proto3" json:"walletId"`
	Amount       int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	By           int32  `protobuf:"varint,3,opt,name=by,proto3" json:"by"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	OuterNo      string `protobuf:"bytes,5,opt,name=outerNo,proto3" json:"outerNo"`
	Remark       string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`
	OperatorUid  int32  `protobuf:"varint,7,opt,name=operatorUid,proto3" json:"operatorUid"`
	OperatorName string `protobuf:"bytes,8,opt,name=operatorName,proto3" json:"operatorName"`
}

func (x *ChargeRequest) Reset() {
	*x = ChargeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeRequest) ProtoMessage() {}

func (x *ChargeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeRequest.ProtoReflect.Descriptor instead.
func (*ChargeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{8}
}

func (x *ChargeRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *ChargeRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ChargeRequest) GetBy() int32 {
	if x != nil {
		return x.By
	}
	return 0
}

func (x *ChargeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChargeRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *ChargeRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ChargeRequest) GetOperatorUid() int32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *ChargeRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 钱包ID
	WalletId int64 `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	// * 目标钱包ID
	ToWalletId int64 `protobuf:"zigzag64,2,opt,name=toWalletId,proto3" json:"toWalletId"`
	// * 转账金额
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	// * 手续费
	TransactionFee int64 `protobuf:"zigzag64,4,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{9}
}

func (x *TransferRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *TransferRequest) GetToWalletId() int64 {
	if x != nil {
		return x.ToWalletId
	}
	return 0
}

func (x *TransferRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferRequest) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *TransferRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type PagingWalletLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId int64          `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	Params   *SPagingParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (x *PagingWalletLogRequest) Reset() {
	*x = PagingWalletLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PagingWalletLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagingWalletLogRequest) ProtoMessage() {}

func (x *PagingWalletLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagingWalletLogRequest.ProtoReflect.Descriptor instead.
func (*PagingWalletLogRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{10}
}

func (x *PagingWalletLogRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *PagingWalletLogRequest) GetParams() *SPagingParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type FinishWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId      int64  `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	TransactionId int64  `protobuf:"zigzag64,2,opt,name=transactionId,proto3" json:"transactionId"`
	OuterNo       string `protobuf:"bytes,3,opt,name=outerNo,proto3" json:"outerNo"`
}

func (x *FinishWithdrawRequest) Reset() {
	*x = FinishWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishWithdrawRequest) ProtoMessage() {}

func (x *FinishWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishWithdrawRequest.ProtoReflect.Descriptor instead.
func (*FinishWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{11}
}

func (x *FinishWithdrawRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *FinishWithdrawRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *FinishWithdrawRequest) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

// 提现请求
type RequestWithdrawalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 钱包编号
	WalletId int64 `protobuf:"varint,1,opt,name=walletId,proto3" json:"walletId"`
	// 交易描述
	TransactionTitle string `protobuf:"bytes,2,opt,name=transactionTitle,proto3" json:"transactionTitle"`
	// 金额
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	// 手续费
	TransactionFee int32 `protobuf:"varint,4,opt,name=transactionFee,proto3" json:"transactionFee"`
	// 提现方式
	WithdrawKind int32 `protobuf:"zigzag32,5,opt,name=withdrawKind,proto3" json:"withdrawKind"`
	// 银行名称，withdrawKind为32时传入
	BankName string `protobuf:"bytes,6,opt,name=bankName,proto3" json:"bankName"`
	// 账户名称
	AccountName string `protobuf:"bytes,8,opt,name=accountName,proto3" json:"accountName"`
	// 账号
	AccountNo string `protobuf:"bytes,7,opt,name=accountNo,proto3" json:"accountNo"`
}

func (x *RequestWithdrawalRequest) Reset() {
	*x = RequestWithdrawalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWithdrawalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWithdrawalRequest) ProtoMessage() {}

func (x *RequestWithdrawalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWithdrawalRequest.ProtoReflect.Descriptor instead.
func (*RequestWithdrawalRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{12}
}

func (x *RequestWithdrawalRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *RequestWithdrawalRequest) GetTransactionTitle() string {
	if x != nil {
		return x.TransactionTitle
	}
	return ""
}

func (x *RequestWithdrawalRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RequestWithdrawalRequest) GetTransactionFee() int32 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *RequestWithdrawalRequest) GetWithdrawKind() int32 {
	if x != nil {
		return x.WithdrawKind
	}
	return 0
}

func (x *RequestWithdrawalRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *RequestWithdrawalRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *RequestWithdrawalRequest) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

type ReviewWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId      int64  `protobuf:"zigzag64,1,opt,name=walletId,proto3" json:"walletId"`
	TransactionId int64  `protobuf:"zigzag64,2,opt,name=transactionId,proto3" json:"transactionId"`
	ReviewPass    bool   `protobuf:"varint,3,opt,name=reviewPass,proto3" json:"reviewPass"`
	Remark        string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark"`
	OperatorUid   int32  `protobuf:"zigzag32,5,opt,name=operatorUid,proto3" json:"operatorUid"`
	OperatorName  string `protobuf:"bytes,6,opt,name=operatorName,proto3" json:"operatorName"`
}

func (x *ReviewWithdrawRequest) Reset() {
	*x = ReviewWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewWithdrawRequest) ProtoMessage() {}

func (x *ReviewWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewWithdrawRequest.ProtoReflect.Descriptor instead.
func (*ReviewWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{13}
}

func (x *ReviewWithdrawRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *ReviewWithdrawRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ReviewWithdrawRequest) GetReviewPass() bool {
	if x != nil {
		return x.ReviewPass
	}
	return false
}

func (x *ReviewWithdrawRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ReviewWithdrawRequest) GetOperatorUid() int32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *ReviewWithdrawRequest) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

// * 钱包
type SWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 钱包编号
	Id int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id"`
	// * 哈希值
	HashCode string `protobuf:"bytes,2,opt,name=hashCode,proto3" json:"hashCode"`
	// * 节点编号
	NodeId int32 `protobuf:"zigzag32,3,opt,name=nodeId,proto3" json:"nodeId"`
	// * 用户编号
	UserId int64 `protobuf:"zigzag64,4,opt,name=userId,proto3" json:"userId"`
	// * 用户名
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username"`
	// 钱包名称
	WalletName string `protobuf:"bytes,6,opt,name=walletName,proto3" json:"walletName"`
	// * 钱包类型
	WalletType int32 `protobuf:"zigzag32,7,opt,name=walletType,proto3" json:"walletType"`
	// * 钱包标志
	WalletFlag int32 `protobuf:"zigzag32,8,opt,name=walletFlag,proto3" json:"walletFlag"`
	// * 余额
	Balance int32 `protobuf:"zigzag32,9,opt,name=balance,proto3" json:"balance"`
	// * 赠送余额
	PresentBalance int32 `protobuf:"zigzag32,10,opt,name=presentBalance,proto3" json:"presentBalance"`
	// * 调整金额
	AdjustAmount int32 `protobuf:"zigzag32,11,opt,name=adjustAmount,proto3" json:"adjustAmount"`
	// * 冻结余额
	FreezeAmount int32 `protobuf:"zigzag32,12,opt,name=freezeAmount,proto3" json:"freezeAmount"`
	// * 结余金额
	LatestAmount int32 `protobuf:"zigzag32,13,opt,name=latestAmount,proto3" json:"latestAmount"`
	// * 失效账户余额
	ExpiredAmount int32 `protobuf:"zigzag32,14,opt,name=expiredAmount,proto3" json:"expiredAmount"`
	// * 总充值金额
	TotalCharge int32 `protobuf:"zigzag32,15,opt,name=totalCharge,proto3" json:"totalCharge"`
	// * 累计赠送金额
	TotalPresent int32 `protobuf:"zigzag32,16,opt,name=totalPresent,proto3" json:"totalPresent"`
	// * 总支付额
	TotalPay int32 `protobuf:"zigzag32,17,opt,name=totalPay,proto3" json:"totalPay"`
	// * 状态
	State int32 `protobuf:"zigzag32,18,opt,name=state,proto3" json:"state"`
	// * 创建时间
	CreateTime int64 `protobuf:"zigzag64,19,opt,name=createTime,proto3" json:"createTime"`
	// * 更新时间
	UpdateTime int64 `protobuf:"zigzag64,20,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SWallet) Reset() {
	*x = SWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWallet) ProtoMessage() {}

func (x *SWallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWallet.ProtoReflect.Descriptor instead.
func (*SWallet) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{14}
}

func (x *SWallet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SWallet) GetHashCode() string {
	if x != nil {
		return x.HashCode
	}
	return ""
}

func (x *SWallet) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *SWallet) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SWallet) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SWallet) GetWalletName() string {
	if x != nil {
		return x.WalletName
	}
	return ""
}

func (x *SWallet) GetWalletType() int32 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *SWallet) GetWalletFlag() int32 {
	if x != nil {
		return x.WalletFlag
	}
	return 0
}

func (x *SWallet) GetBalance() int32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *SWallet) GetPresentBalance() int32 {
	if x != nil {
		return x.PresentBalance
	}
	return 0
}

func (x *SWallet) GetAdjustAmount() int32 {
	if x != nil {
		return x.AdjustAmount
	}
	return 0
}

func (x *SWallet) GetFreezeAmount() int32 {
	if x != nil {
		return x.FreezeAmount
	}
	return 0
}

func (x *SWallet) GetLatestAmount() int32 {
	if x != nil {
		return x.LatestAmount
	}
	return 0
}

func (x *SWallet) GetExpiredAmount() int32 {
	if x != nil {
		return x.ExpiredAmount
	}
	return 0
}

func (x *SWallet) GetTotalCharge() int32 {
	if x != nil {
		return x.TotalCharge
	}
	return 0
}

func (x *SWallet) GetTotalPresent() int32 {
	if x != nil {
		return x.TotalPresent
	}
	return 0
}

func (x *SWallet) GetTotalPay() int32 {
	if x != nil {
		return x.TotalPay
	}
	return 0
}

func (x *SWallet) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SWallet) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SWallet) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// * 钱包日志
type SWalletLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * 编号
	Id int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id"`
	// * 钱包编号
	WalletId int64 `protobuf:"zigzag64,2,opt,name=walletId,proto3" json:"walletId"`
	// * 钱包用户的用户名
	WalletUser string `protobuf:"bytes,3,opt,name=walletUser,proto3" json:"walletUser"`
	// * 业务类型
	Kind int32 `protobuf:"zigzag32,4,opt,name=kind,proto3" json:"kind"`
	// * 标题
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`
	// * 外部通道
	OuterChan string `protobuf:"bytes,6,opt,name=outerChan,proto3" json:"outerChan"`
	// * 外部订单号
	OuterNo string `protobuf:"bytes,7,opt,name=outerNo,proto3" json:"outerNo"`
	// * 变动金额
	Value int64 `protobuf:"varint,8,opt,name=value,proto3" json:"value"`
	// * 余额
	Balance int64 `protobuf:"varint,9,opt,name=balance,proto3" json:"balance"`
	// * 交易手续费
	TransactionFee int64 `protobuf:"varint,10,opt,name=transactionFee,proto3" json:"transactionFee"`
	// * 操作人员用户编号
	OperatorUid int32 `protobuf:"zigzag32,11,opt,name=operatorUid,proto3" json:"operatorUid"`
	// * 操作人员名称
	OperatorName string `protobuf:"bytes,12,opt,name=operatorName,proto3" json:"operatorName"`
	// * 备注
	Remark string `protobuf:"bytes,13,opt,name=remark,proto3" json:"remark"`
	// * 审核状态
	ReviewStatus int32 `protobuf:"zigzag32,14,opt,name=reviewStatus,proto3" json:"reviewStatus"`
	// * 审核备注
	ReviewRemark string `protobuf:"bytes,15,opt,name=reviewRemark,proto3" json:"reviewRemark"`
	// * 审核时间
	ReviewTime int64 `protobuf:"zigzag64,16,opt,name=reviewTime,proto3" json:"reviewTime"`
	// * 创建时间
	CreateTime int64 `protobuf:"zigzag64,17,opt,name=createTime,proto3" json:"createTime"`
	// * 更新时间
	UpdateTime int64 `protobuf:"zigzag64,18,opt,name=updateTime,proto3" json:"updateTime"`
}

func (x *SWalletLog) Reset() {
	*x = SWalletLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wallet_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWalletLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWalletLog) ProtoMessage() {}

func (x *SWalletLog) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWalletLog.ProtoReflect.Descriptor instead.
func (*SWalletLog) Descriptor() ([]byte, []int) {
	return file_wallet_service_proto_rawDescGZIP(), []int{15}
}

func (x *SWalletLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SWalletLog) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *SWalletLog) GetWalletUser() string {
	if x != nil {
		return x.WalletUser
	}
	return ""
}

func (x *SWalletLog) GetKind() int32 {
	if x != nil {
		return x.Kind
	}
	return 0
}

func (x *SWalletLog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SWalletLog) GetOuterChan() string {
	if x != nil {
		return x.OuterChan
	}
	return ""
}

func (x *SWalletLog) GetOuterNo() string {
	if x != nil {
		return x.OuterNo
	}
	return ""
}

func (x *SWalletLog) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SWalletLog) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *SWalletLog) GetTransactionFee() int64 {
	if x != nil {
		return x.TransactionFee
	}
	return 0
}

func (x *SWalletLog) GetOperatorUid() int32 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *SWalletLog) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *SWalletLog) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SWalletLog) GetReviewStatus() int32 {
	if x != nil {
		return x.ReviewStatus
	}
	return 0
}

func (x *SWalletLog) GetReviewRemark() string {
	if x != nil {
		return x.ReviewRemark
	}
	return ""
}

func (x *SWalletLog) GetReviewTime() int64 {
	if x != nil {
		return x.ReviewTime
	}
	return 0
}

func (x *SWalletLog) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SWalletLog) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

var File_wallet_service_proto protoreflect.FileDescriptor

var file_wallet_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67,
	0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x12,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd1,
	0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x75,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x75, 0x73, 0x74, 0x22, 0xd1,
	0x01, 0x0a, 0x0d, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0xfd, 0x01, 0x0a,
	0x0f, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xe1, 0x01, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x62, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x74, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x5c, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x53, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x73, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0xa2, 0x02, 0x0a, 0x18,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4b, 0x69, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f,
	0x22, 0xd7, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xed, 0x04, 0x0a, 0x07, 0x53,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x98, 0x04, 0x0a, 0x0a, 0x53,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x31, 0x0a, 0x0b, 0x45, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x5f, 0x36, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x10, 0x02, 0x2a, 0x37, 0x0a, 0x0b, 0x45, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x06, 0x0a, 0x02, 0x5f, 0x37, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10,
	0x02, 0x2a, 0x65, 0x0a, 0x0b, 0x45, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x06, 0x0a, 0x02, 0x5f, 0x38, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0x04, 0x2a, 0xa1, 0x02, 0x0a, 0x0e, 0x45, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x5f,
	0x39, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x43, 0x61, 0x72, 0x72, 0x79, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x4b, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x49, 0x6e, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x4f, 0x75, 0x74, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x46, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x54, 0x61, 0x6b,
	0x65, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13,
	0x4b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15, 0x4b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x54, 0x6f, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x10, 0x0e,
	0x12, 0x1a, 0x0a, 0x16, 0x4b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x54,
	0x6f, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x10, 0x0f, 0x32, 0xbf, 0x05, 0x0a,
	0x0d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x2a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x11,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x06, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x1a, 0x08, 0x2e, 0x53, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x00, 0x12, 0x26, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x07, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x08, 0x2e, 0x53, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x12, 0x13, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x53, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x06, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x12, 0x0e, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x27, 0x0a,
	0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x12, 0x0e, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12,
	0x10, 0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x06,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x0e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x12, 0x27, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x10, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x11, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12,
	0x19, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x61, 0x6b, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x10, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x12, 0x16, 0x2e,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x12, 0x17, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x53,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x1f,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x6f, 0x32,
	0x6f, 0x2e, 0x72, 0x70, 0x63, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wallet_service_proto_rawDescOnce sync.Once
	file_wallet_service_proto_rawDescData = file_wallet_service_proto_rawDesc
)

func file_wallet_service_proto_rawDescGZIP() []byte {
	file_wallet_service_proto_rawDescOnce.Do(func() {
		file_wallet_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_wallet_service_proto_rawDescData)
	})
	return file_wallet_service_proto_rawDescData
}

var file_wallet_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_wallet_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_wallet_service_proto_goTypes = []interface{}{
	(EWalletType)(0),                 // 0: EWalletType
	(EWalletFlag)(0),                 // 1: EWalletFlag
	(EChargeKind)(0),                 // 2: EChargeKind
	(EWalletLogKind)(0),              // 3: EWalletLogKind
	(*CreateWalletRequest)(nil),      // 4: CreateWalletRequest
	(*GetWalletRequest)(nil),         // 5: GetWalletRequest
	(*WalletLogIDRequest)(nil),       // 6: WalletLogIDRequest
	(*AdjustRequest)(nil),            // 7: AdjustRequest
	(*DiscountRequest)(nil),          // 8: DiscountRequest
	(*FreezeRequest)(nil),            // 9: FreezeRequest
	(*FreezeResponse)(nil),           // 10: FreezeResponse
	(*UnfreezeRequest)(nil),          // 11: UnfreezeRequest
	(*ChargeRequest)(nil),            // 12: ChargeRequest
	(*TransferRequest)(nil),          // 13: TransferRequest
	(*PagingWalletLogRequest)(nil),   // 14: PagingWalletLogRequest
	(*FinishWithdrawRequest)(nil),    // 15: FinishWithdrawRequest
	(*RequestWithdrawalRequest)(nil), // 16: RequestWithdrawalRequest
	(*ReviewWithdrawRequest)(nil),    // 17: ReviewWithdrawRequest
	(*SWallet)(nil),                  // 18: SWallet
	(*SWalletLog)(nil),               // 19: SWalletLog
	(*SPagingParams)(nil),            // 20: SPagingParams
	(*Int64)(nil),                    // 21: Int64
	(*String)(nil),                   // 22: String
	(*Result)(nil),                   // 23: Result
	(*SPagingResult)(nil),            // 24: SPagingResult
}
var file_wallet_service_proto_depIdxs = []int32{
	20, // 0: PagingWalletLogRequest.params:type_name -> SPagingParams
	4,  // 1: WalletService.CreateWallet:input_type -> CreateWalletRequest
	5,  // 2: WalletService.GetWalletId:input_type -> GetWalletRequest
	21, // 3: WalletService.GetWallet:input_type -> Int64
	22, // 4: WalletService.GetWalletByCode:input_type -> String
	6,  // 5: WalletService.GetWalletLog:input_type -> WalletLogIDRequest
	7,  // 6: WalletService.Adjust:input_type -> AdjustRequest
	8,  // 7: WalletService.Discount:input_type -> DiscountRequest
	9,  // 8: WalletService.Freeze:input_type -> FreezeRequest
	11, // 9: WalletService.Unfreeze:input_type -> UnfreezeRequest
	12, // 10: WalletService.Charge:input_type -> ChargeRequest
	13, // 11: WalletService.Transfer:input_type -> TransferRequest
	16, // 12: WalletService.RequestWithdrawal:input_type -> RequestWithdrawalRequest
	17, // 13: WalletService.ReviewTakeOut:input_type -> ReviewWithdrawRequest
	15, // 14: WalletService.FinishWithdrawal:input_type -> FinishWithdrawRequest
	14, // 15: WalletService.PagingWalletLog:input_type -> PagingWalletLogRequest
	23, // 16: WalletService.CreateWallet:output_type -> Result
	21, // 17: WalletService.GetWalletId:output_type -> Int64
	18, // 18: WalletService.GetWallet:output_type -> SWallet
	18, // 19: WalletService.GetWalletByCode:output_type -> SWallet
	19, // 20: WalletService.GetWalletLog:output_type -> SWalletLog
	23, // 21: WalletService.Adjust:output_type -> Result
	23, // 22: WalletService.Discount:output_type -> Result
	10, // 23: WalletService.Freeze:output_type -> FreezeResponse
	23, // 24: WalletService.Unfreeze:output_type -> Result
	23, // 25: WalletService.Charge:output_type -> Result
	23, // 26: WalletService.Transfer:output_type -> Result
	23, // 27: WalletService.RequestWithdrawal:output_type -> Result
	23, // 28: WalletService.ReviewTakeOut:output_type -> Result
	23, // 29: WalletService.FinishWithdrawal:output_type -> Result
	24, // 30: WalletService.PagingWalletLog:output_type -> SPagingResult
	16, // [16:31] is the sub-list for method output_type
	1,  // [1:16] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_wallet_service_proto_init() }
func file_wallet_service_proto_init() {
	if File_wallet_service_proto != nil {
		return
	}
	file_global_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wallet_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletLogIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreezeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreezeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PagingWalletLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWithdrawalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wallet_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWalletLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wallet_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_service_proto_goTypes,
		DependencyIndexes: file_wallet_service_proto_depIdxs,
		EnumInfos:         file_wallet_service_proto_enumTypes,
		MessageInfos:      file_wallet_service_proto_msgTypes,
	}.Build()
	File_wallet_service_proto = out.File
	file_wallet_service_proto_rawDesc = nil
	file_wallet_service_proto_goTypes = nil
	file_wallet_service_proto_depIdxs = nil
}
